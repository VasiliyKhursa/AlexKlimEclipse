<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Светофор</title>

<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">   
</head>

<body>
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="modal" href="#myModal" class="navbar-link">Гость</a>
          </p>
          <ul class="nav">
            
          </ul>
        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->    
<div class="clearfix"></div>
    
<noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
    <div class="row-fluid">
        <!--левое меню -->
        <div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory.php">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

        <div class="row-fluid">
            <div class="span12">
            
                        <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Читайте на здоровье!</h3>
            </div>
            <div class="modal-body">
            
              <p>Статья проплачена кошками - всемирно известными производителями котят.</p>

            <p>Если статья вам понравилась, то можете <a href="http://developer.alexanderklimov.ru/donate.php">поддержать проект</a>.</p>
			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Светофор</h1>

<p>Для закрепления навыков создадим приложение, чуть посложнее 
предыдущего, а также познакомимся с другими приёмами программирования.</p>

<p>В качестве примера напишем программу под условным названием 
«Светофор». Интерфейс программы будет выглядеть следующим образом. На 
красном экране расположены три кнопки и одна текстовая надпись. При 
нажатии кнопок фон программы будет меняться на соответствующий свет, 
который закреплён за определённой кнопкой. Я попробую вам показать 
решение задачи с разных сторон, чтобы вы почувствовали себя увереннее.</p>

<p>Первые шаги вполне очевидны. Создаём новый проект на основе "Hello, 
World" и перетаскиваем с панели инструментов две (пока) кнопки. Далее 
растягиваем их по ширине экрана. Найдите на панели инструментов над 
формой кнопку <b>Toggle Fill Width</b>, на которой изображена 
двусторонняя стрелка ↔. Также можете это сделать вручную - для этого в 
окне свойств присваиваем свойству <b>Width</b> значение <b>match_parent</b>. Данному свойству соответствует атрибут <b>android:layout_width</b>.</p>

<p>В окне <b>Outline</b> выделите строку <b>button1</b>. У вас должно появиться окно свойств <b>Properties</b>.
 Давайте избавимся от стандартных идентификаторов, а будем сразу 
приучаться давать осмысленные имена. Например, для первой кнопки 
присвоим свойству <b>Id</b> значение <b>@+id/buttonRed</b> вместо стандартного <b>@+id/button1</b>, а для второй кнопки - <b>@+id/buttonYellow</b>.</p>

<p>Теперь попробуем создать третью кнопку не через визуальное 
проектирование, а через код. Для этого в главном окне переключитесь с 
вкладки <b>Graphical Layout</b> на вкладку <b>activity_main.xml</b>. Здесь вы увидите XML-разметку программы, в том числе и код для двух кнопок.</p>

<p>Наверное, вы уже догадались, как можно создать третью кнопку. Нужно 
просто взять за образец код любой из двух кнопок и добавить под ними 
новую строчку перед закрывающим тегом &lt;/RelativeLayoutLayout&gt; (не 
забудьте изменить идентификатор и атрибут android:layout_below):</p>

<pre><code class="xml">
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true"
        android:padding="@dimen/padding_medium"
        android:text="@string/hello_world"
        tools:context=".MainActivity" /&gt;

    &lt;Button
        android:id="@+id/buttonRed"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:text="Button" /&gt;

    &lt;Button
        android:id="@+id/buttonYellow"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_below="@+id/buttonRed"
        android:text="Button" /&gt;

    &lt;Button
        android:id="@+id/buttonGreen"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_below="@+id/buttonYellow"
        android:text="Button" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Настоятельно рекомендую не копировать строку, а написать ее вручную. 
Заодно вы увидите, как работает подсказка при наборе текста. Для 
ускорения набора после ввода нескольких символов можно использовать 
комбинацию клавиш Ctrl+Space, чтобы среда разработки предложила 
подходящий вариант для продолжения. Выбрав нужный вариант, нажмите 
Enter, чтобы вставить готовое выражение.</p>

<h2 class="text-warning">Строковые ресурсы</h2>

<p>Теперь нам нужно заменить текст на кнопках Button на слова <i>Красный</i>, <i>Жёлтый</i> и <i>Зелёный</i>. На прошлом уроке мы просто присвоили свойству <b>Text</b>
 нужную строку. Но на самом деле это неправильный подход и даже среда 
разработки выводит предупреждающие значки у кнопок. По правилам, строки 
нужно хранить в строковых ресурсах. Подобный подход дает разработчику 
множество преимуществ, в частности, быструю локализацию приложения. 
Считайте это стандартом, которого нужно придерживаться.</p>

<p>Процесс создания строковых ресурсов очень прост. Переключитесь обратно в режим <b>Graphical Layout</b> и выберите кнопку <i>buttonRed</i>. В окне свойств выделите свойство <b>Text</b>. Во второй колонке отобразится кнопка с троеточием. Щёлкните на кнопке. У вас откроется диалоговое окно <b>Resource Chooser</b>.</p>

<p><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/resourcechooser.png" alt="Resource Chooser"></p>

<p>Нажмите на кнопку <b>New String...</b> для создания нового строкового ресурса. В новом окне <b>Create New Android String</b> введите текст для кнопки (напр. Красный) в первом текстовом поле <b>String</b>, а во втором поле <b>New R.string</b> введите название ресурса, например, <b>red</b>. Аналогичным образом поступите с другими двумя кнопками (Жёлтый и Зёленый).</p>

<p><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/createnewandroidstring.png" alt="Create New Android String"></p>

<p>Щёлкните кнопку <b>OK</b>, чтобы подтвердить изменения. Обратите внимание, что текст на кнопках поменялся, а свойству <b>Text</b> были присвоены значения <b>@string/red</b>, <b>@string/yellow</b>, <b>@string/green</b>.</p>

<p>Программно можно добиться такого же результата, отредактировав файл <b>strings.xml</b>, который находится в папке <b>res/values</b> вашего проекта. Сейчас он может выглядеть так.</p>

<pre><code class="xml">
&lt;resources&gt;

    &lt;string name="app_name"&gt;TrafficLight&lt;/string&gt;
    &lt;string name="hello_world"&gt;Hello world!&lt;/string&gt;
    &lt;string name="menu_settings"&gt;Settings&lt;/string&gt;
    &lt;string name="title_activity_main"&gt;Светофор&lt;/string&gt;
    &lt;string name="red"&gt;Красный&lt;/string&gt;
    &lt;string name="yellow"&gt;Жёлтый&lt;/string&gt;
    &lt;string name="green"&gt;Зелёный&lt;/string&gt;

&lt;/resources&gt;
</code></pre>

<p>Мы совсем забыли про элемент <b>TextView</b>. Исправим упущение. 
Пусть на нём выводится текст, извещающий о текущем цвете фона 
приложения. Так как в ресурсах у нас уже есть слова Красный, Жёлтый и 
Зелёный, изначально предназначенные для кнопок, то мы не будем создавать
 новые строковые ресурсы, а воспользуемся готовыми наработками. По 
умолчанию у нас используется красный цвет. В окне свойств выбираем 
свойство <b>Text</b> для <b>TextView</b> и нажимаем кнопку с троеточием для вызова знакомого диалогового окна. На этот раз мы не будет щелкать на кнопке <b>New String...</b>, а сразу выделим строку <b>red</b>, которая, как мы помним, содержит текст <b>Красный</b> и щёлкнем кнопку <b>OK</b> (можно сделать сразу двойной щелчок на строке).</p>

<p>Переключитесь в режим редактора кода и посмотрите, как теперь выглядит описание для TextView.</p>

<pre><code class="xml">
&lt;TextView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_centerHorizontal="true"
    android:layout_centerVertical="true"
    android:padding="@dimen/padding_medium"
    android:text="@string/red"
    tools:context=".MainActivity" /&gt;
</code></pre>

<p>Рекомендую постоянно переключаться в этот режим и смотреть, что 
происходит в коде. Это позволит вам увереннее разбираться в коде и 
читать чужой код. Как правило, новички предпочитают работать через 
визуальные инструменты, а программисты с опытом самостоятельно пишут 
практически весь код. Нужно найти разумный баланс между двумя подходами.
 Всё придет со временем.</p>

<p>Со строками вроде разобрались. Давайте теперь в ресурсах зададим цвета для фона программы. Откройте сначала файл <b>strings.xml</b>, а затем откройте в нём закладку <b>Resources</b>. В появившемся окне щёлкаем на кнопке <b>Add...</b>, далее выбираем строку <b>Color</b> и закрываем окно щелчком кнопки <b>OK</b>. У нас появился новый ресурс типа <b>Color</b>. Заполним текстовые поля <b>Name*</b> и <b>Value*</b> значениями <b>redColor</b> и <b>#FFFF0000</b> соответственно. Для жёлтой кнопки установим значения <b>yellowColor</b> и <b>#FFFF00</b>, для зелёной - <b>greenColor</b> и <b>#FF00FF00</b>.</p>

<div class="alert alert-info">
Сама среда разработки не имеет встроенного помощника для выбора цвета, 
что немного напрягает. Читатель Евгений Степанов подсказал, что можно 
скачать бесплатный плагин <a href="http://milanl.wz.cz/eclipse/colors/">Colors Eclipse plugin</a>. Очень полезная штука. Рекомендую.
</div>

<p>Обычно для цветовых ресурсов создаётся отдельный файл <b>colors.xml</b>, но мы пока учимся и нам простительно писать корявый код.</p>

<p>Определив в ресурсах все необходимые цвета, можно сразу присвоить 
красный цвет для элемента RelativeLayout. В окне свойств находим для 
данного элемента свойство <b>Background</b> и через редактор ресурсов устанавливаем ему значение <b>@color/redColor</b>. Либо вручную добавьте строчку <b>android:background="@color/redColor"</b> для тега <b>RelativeLayout</b>.</p>

<p>Общий каркас приложения завершен. У нас есть три кнопки с соответствующими текстами, текстовая надпись со словом <i>Красный</i>,
 и красный фон, используемый в контейнере RelativeLayout. Пора 
приступать к программной логике программы. А пока можно запустить 
приложение в эмуляторе, чтобы убедиться, что мы не сделали ошибок в 
разметке.</p>

<h2 class="text-warning">Код для программы</h2>

<p>Наша задача - обработать щелчки трёх кнопок и менять цвет фона 
приложения, а также текст в TextView. На прошлом занятии мы уже 
познакомились с удобным способом обработки события <b>onClick</b>. Давайте закрепим пройденный материал и повторим тот же код для первой кнопки. Пропишем вручную событие <b>onClick</b> в теге <b>Button</b>:</p>

<pre><code class="java">
android:onClick="buttonRed_Click"
</code></pre>

<p>Пишем обработчик события. Открываем файл <b>TrafficLight.java</b> и пишем сразу после метода onCreate():</p>

<pre><code class="java">
public void buttonRed_Click(View v)
{
    tvInfo.setText(R.string.red);
    relativeLayout.setBackgroundResource(R.color.redColor);
}
</code></pre>

<p>Сами переменные объявим в классе и получим к ним доступ в методе onCreate():</p>

<pre><code class="java">
// до метода onCreate()
public TextView tvInfo;
public RelativeLayout relativeLayout;

// в методе onCreate()
relativeLayout = (RelativeLayout)findViewById(R.id.relativelayout);
tvInfo = (TextView)findViewById(R.id.textView1);
</code></pre>

<p>Вроде ничего сложного. Мы обращаемся к созданным ресурсам через специальный класс <b>R</b>
 и через точку указываем тип ресурсов, а затем имя ресурса. Если вы до 
этого не присвоили идентификаторы для RelativeLayout и TextView, то 
вернитесь в файл activity_main.xml и добавьте атрибуты <b>android:id="@+id/relativelayout"</b> и <b>android:id="@+id/textView1"</b>. На будущее старайтесь сразу присваивать идентификаторы элементам, с которыми придётся работать в коде.</p>

<p>Для третьей кнопки (Зелёный) событие зададим визуально. В окне свойств для кнопки butGreen найдите свойство <b>On click</b> и присвойте ему значение <b>buttonGreen_Click</b>. В этом случае среда разработки сама добавит нужную строчку <b>android:onClick="buttonGreen_Click"</b>
 в файле разметки. В обработчике события Click код будет похож на код 
для красной кнопки, только необходимо поменять названия ресурсов.</p>

<p>Для второй кнопки напишем код в традиционной манере через прослушку события <b>OnClickListener</b>.</p>

<pre><code class="java">
Button buttonYellow = (Button)findViewById(R.id.buttonYellow);

buttonYellow.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        tvInfo.setText(R.string.yellow);
        relativeLayout.setBackgroundResource(R.color.yellowColor);
    }
});
</code></pre>

<p>Запускаем приложение и щёлкаем по кнопкам - текст в надписи и фон в приложении должны меняться в соответствии с нажатой кнопкой.</p>

<p><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/trafficlights.png" alt="Приложение Светофор"></p>

<p>Полный текст кода для <b>TrafficLights.java</b> будет выглядеть следующим образом:</p>

<pre><code>
// Если этот код работает, его написал Александр Климов,
// а если нет, то не знаю, кто его писал.
package ru.alexanderklimov.trafficlight;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class MainActivity extends Activity {
    
    public TextView tvInfo;
    public RelativeLayout relativeLayout;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        relativeLayout = (RelativeLayout)findViewById(R.id.relativelayout);
        tvInfo = (TextView)findViewById(R.id.textView1);
        
        Button buttonYellow = (Button)findViewById(R.id.buttonYellow);
        
        buttonYellow.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                tvInfo.setText(R.string.yellow);
                relativeLayout.setBackgroundResource(R.color.yellowColor);
            }
        });
    }

    public void buttonRed_Click(View v)
    {
        tvInfo.setText(R.string.red);
        relativeLayout.setBackgroundResource(R.color.redColor);
    }
    
    public void buttonGreen_Click(View v)
    {
        tvInfo.setText(R.string.green);
        relativeLayout.setBackgroundResource(R.color.greenColor);
    }
}
</code></pre>

<p>В качестве домашнего задания упростите код для трёх кнопок, создав для них общий метод <b>onClick()</b> (почитайте статью <a href="http://developer.alexanderklimov.ru/android/views/button.php">про кнопки</a>).</p>


<script type="text/javascript"><!--
google_ad_client = "ca-pub-4224968932772057";
/* Полноразмерный баннер 728х90 */
google_ad_slot = "4077523505";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/show_ads.js">
</script>
                
                
</div><!--/span-->
        </div><!--/row-->    
          
        </div><!--/span-->
        
        <div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
        
      </div><!--/row-->
      
    
      <hr>
      
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/fastbutton.htm" name="I0_1378010779376" id="I0_1378010779376" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><!--/.fluid-container-->
    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/jquery.js"></script><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/postmessageRelay.htm" id="oauth2relay1525253217" name="oauth2relay1525253217"></iframe>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%A1%D0%B2%D0%B5%D1%82%D0%BE%D1%84%D0%BE%D1%80_files/bootstrap-typeahead.js"></script>

</body></html>