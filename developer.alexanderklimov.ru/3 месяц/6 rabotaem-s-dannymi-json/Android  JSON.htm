<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: JSON</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20JSON_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20JSON_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20JSON_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20JSON_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20JSON_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20JSON_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20JSON_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20JSON_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory.php">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20JSON_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20JSON_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">JSON</h1>
<p>Третий месяц обучения (закрытая зона)</p>

<p>
<a href="#simple">Простейший пример с JSON</a><br>
<a href="#array">Обработка массивов</a><br>
<a href="#jsonlist">Обработаем массив и поместим в список</a><br>
<a href="#createjson">Формирование данных в JSON-формате</a><br>
</p>

<p>В настоящее время в качестве формата данных в интернете широко 
используются две технологии: XML и JSON. В какой-то степени они являются
 конкурентами, хотя и созданы для разных задач. Мы рассмотрим  только 
формат JSON.</p>

<p>JSON – это:</p>
<ul>
<li>формат обмена данными;</li>
<li>средство кодирования объектов JavaScript в виде строк;</li>
<li>можно использовать только текстовые и числовые значения. Двоичные значения явно не допускается. JSON не имеет эквивалента CDATA;</li>
<li>более экономичный, чем XML, формат с точки зрения размера данных, но за счет читабельности;</li>
</ul>

<p>JSON часто используется в Ajax-приложениях при обмене данных с 
веб-сервером. Предположим, что приложение должно запросить нужные данные
 кота Барсика. Приложение должно возвратить в браузер больше чем один 
элемент данных. Как же их упаковать? Можно просто получить от сервера 
код JavaScript и работать непосредственно с ним. Вот пример ответа на 
запрос (http://yourserver/app/searchcontact?Barsik) от гипотетического 
приложения для кота по имени Barsik. Строковое представление объекта 
JavaScript и является строкой JSON:</p>

<pre>{"catname":"Barsik","age":"5"},{"catname":"Murzik", "lastname":"Ivanov","age":"9"}
</pre>

<p>Объекты JSON имеют формат пар <b>ключ:значение</b>. Элементы объекта разделены запятыми, и каждый объект заключен в фигурные скобки <b>{}</b>.
 Массив объектов заключается в квадратные скобки. Это общий подход к 
передаче набора строк из базы данных в массив объектов, при котором 
каждый элемент массива соответствует строке базы данных, а каждое 
свойство объекта представляет собой столбец данных. Более подробную 
информацию можно почерпнуть из Википедии.</p>

<p>Одним из примеров использования формата JSON является Twitter. 
Например, можно вбить адрес 
http://search.twitter.com/search.json?q=pussy и получить твиты с 
упоминанием слова <b>pussy</b>.</p>

<p>В Android есть готовые классы для работы с JSON. Поэтому нам не придётся изобретать велосипед.</p>


<h2 class="text-warning" id="simple">Простейший пример с JSON</h2>

<p>Чтобы упростить себе задачу и понять основы, мы поступим следующим 
образом. В строковых ресурсах создадим подобие JSON-строки и попробуем 
извлечь из него данные. Поместим в файл strings.xml новую строку:</p>

<pre><code class="xml">
&lt;string name="simple_json"&gt;"{\"results\":{\"sitename\":\"Освой Android играючи\", \"url\":"\""http://developer.alexanderklimov.ru/android/\""}}"&lt;/string&gt;
</code></pre>

<p>Далее добавим на форму пять элементов TextView, чтобы увидеть различные варианты обработки данных JSON. И, наконец, сам код:</p>

<pre><code class="java">
package ru.alexanderklimov.jsondemo;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.os.Bundle;
import android.widget.TextView;
import android.widget.Toast;

public class JSONActivity extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		TextView JsonSrc = (TextView) findViewById(R.id.json_src);
		TextView JsonObject = (TextView) findViewById(R.id.json_object);
		TextView JsonResult = (TextView) findViewById(R.id.json_result);
		TextView JsonMyName = (TextView) findViewById(R.id.json_mysite);
		TextView JsonMyUrl = (TextView) findViewById(R.id.json_myurl);

		String json_source = getString(R.string.simple_json);

		// выводим сырые данные без обработки
		JsonSrc.setText(json_source);

		try {
			JSONObject jsonObject = new JSONObject(json_source);
			JSONObject results = jsonObject.getJSONObject("results");
			String mySiteName = results.getString("sitename");
			String myUrl = results.getString("url");

			JsonObject.setText("\njsonObject:\n" + jsonObject.toString());
			JsonResult.setText("\nresults:\n" + results.toString());
			JsonMyName.setText("\nИмя сайта:\n" + mySiteName);
			JsonMyUrl.setText("\nАдрес сайта:\n" + myUrl);

		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			Toast.makeText(JSONActivity.this, e.toString(), Toast.LENGTH_LONG)
					.show();
		}
	}
}
</code></pre>

<p>Запустим проект и посмотрим, что у нас получилось:</p>

<p><img src="Android%20%20JSON_files/json1.png" alt="JSON"></p>

<p>В первом параграфе мы выводим сырые данные без обработки - те самые 
строки, которые подаются на обработку в качестве JSON-строк. Далее мы 
выводим строковые представления экземпляров класса JSONObject - сначала 
от сырых данных, затем от полученного имени <i>result</i>, которая входила в состав json-строки.</p>

<p>Далее идёт самое интересное, ради чего это всё затевалось. Мы извлекаем данные при помощи метода <b>getString()</b>, передавая в качестве параметра необходимые ключи.</p>

<h2 class="text-warning" id="array">Обработка массивов</h2>

<p>Немного усложним пример и добавим дополнительные данные в виде массива:</p>

<pre><code class="xml">
&lt;string name="simple_json"&gt;"{\"results\":{\"sitename\":\"Освой Android играючи\", 
    \"url\":"\""http://developer.alexanderklimov.ru/android/\",
    \"array\":[{\"element\":\"Элемент 1\"}, {\"element\":\"Элемент 2\"}, {\"element\":\"Элемент 3\"}]}}"&lt;/string&gt;
</code></pre>

<p>Добавим на форму еще один элемент TextView и внесем изменения в код, 
оставив только вывод значений без промежуточных результатов:</p><p>

</p><pre><code class="java">
try {
		JSONObject jsonObject = new JSONObject(json_source);
		JSONObject results = jsonObject.getJSONObject("results");
		String mySiteName = results.getString("sitename");
		String myUrl = results.getString("url");

		JsonMyName.setText("\nИмя сайта:\n" + mySiteName);
		JsonMyUrl.setText("\nАдрес сайта:\n" + myUrl);

		// Получаем данные из массива в JSON
		String stringArrayElement = "\n";
		JSONArray jsonArray = results.getJSONArray("array");
		for (int i = 0; i &lt; jsonArray.length(); i++) {
			JSONObject arrayElement = jsonArray.getJSONObject(i);
			stringArrayElement += arrayElement.getString("element") + "
";
		}
		// выводим данные, полученные из массива
		JsonArray.setText(stringArrayElement);
		} catch ...
</code></pre>

<p>Массив в json-тексте был задан при помощи имени <b>array</b>. Мы передаём это имя методу <b>getJSONArray()</b>, который возвращает объект <b>JSONArray</b> и в цикле получаем все элементы массива.</p>

<p><img src="Android%20%20JSON_files/json2.png" alt="JSON-массив"></p>

<h2 class="text-warning" id="jsonlist">Обработаем массив и поместим в список</h2>

<p>Допустим, у нас есть текст в JSON-формате:</p>

<pre>[{
"MemberID":"1",
"Name":"Мурзик",
"Tel":"4954876107"
},
{
"MemberID":"2",
"Name":"Барсик",
"Tel":"4954780121"
},
{
"MemberID":"3",
"Name":"Рыжик",
"Tel":"4954543211"
}]
</pre>

<p>Такой текст удобнее разместить не простым текстом, а списком. Попробуем решить эту задачу через ListView.</p>

<p>Добавим в главную активность компонент ListView, а также создадим собственную разметку для элементов списка:</p>

<h3 class="text-success">res/layout/three_column.xml</h3>

<pre><code class="xml">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/linearLayout1"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" &gt;

    &lt;TextView
        android:id="@+id/ColMemberID"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:text="MemberID" /&gt;

    &lt;TextView
        android:id="@+id/ColName"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="2"
        android:text="Name" /&gt;

    &lt;TextView
        android:id="@+id/ColTel"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:text="Tel" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Теперь код:</p>

<pre><code class="java">
package ru.alexanderklimov.jsondemo;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.os.Bundle;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

public class JSONActivity extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		final ListView listview = (ListView) findViewById(R.id.listView1);

		/***
		 * Sample JSON Code ***' 
		 [{
           "MemberID":"1",
           "Name":"Мурзик",
           "Tel":"4954876107"
         },
         {
           "MemberID":"2",
           "Name":"Барсик",
           "Tel":"4954780121"
         },
         {
           "MemberID":"3",
           "Name":"Рыжик",
           "Tel":"4954543211"
         }]
		 */

		String strJSON = "[{\"MemberID\":\"1\",\"Name\":\"Мурзик\",\"Tel\":\"4954876107\"}"
				+ ",{\"MemberID\":\"2\",\"Name\":\"Барсик\",\"Tel\":\"4954780121\"}"
				+ ",{\"MemberID\":\"3\",\"Name\":\"Рыжик\",\"Tel\":\"4954543211\"}]";
		
		try {
			JSONArray data = new JSONArray(strJSON);
			
			ArrayList&lt;HashMap&lt;String, String&gt;&gt; MyArrList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();
			HashMap&lt;String, String&gt; map;
			
			for(int i = 0; i &lt; data.length(); i++){
                JSONObject c = data.getJSONObject(i);
                
    			map = new HashMap&lt;String, String&gt;();
    			map.put("MemberID", c.getString("MemberID"));
    			map.put("Name", c.getString("Name"));
    			map.put("Tel", c.getString("Tel"));
    			MyArrList.add(map);
    			
			}
			
			SimpleAdapter simpleadapter;
			simpleadapter = new SimpleAdapter(JSONActivity.this, MyArrList,
					R.layout.three_column, new String[] { "MemberID",
							"Name", "Tel" }, new int[] { R.id.ColMemberID,
							R.id.ColName, R.id.ColTel });
			listview.setAdapter(simpleadapter);

		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
</code></pre>

<p>Мы вручную создали строку в JSON-формате и сохранили её в переменной <b>strJSON</b>. Далее формируется списочный массив ArrayList, в который помещаются объекты HashMap.</p>

<p>Затем с помощью адаптера мы размещаем списочный массив в списке. В результате получим следующую картину:</p>

<p><img src="Android%20%20JSON_files/json3.png" alt="JSON" height="170" width="300"></p>

<h2 class="text-warning" id="createjson">Формирование данных в JSON-формате</h2>

<p>Обычно приходится обрабатывать готовый текст, который уже записан в 
JSON-формате. Но вдруг появится задача создания подобного файла в своём 
приложении. Конечно, можно в лоб создать обычный текстовый файл и 
расставлять в нужных местах скобки всех видов. Но это не интересно и 
чревато ошибками.</p>

<p>Поэтому создадим отдельный метод <b>createJSON()</b> для создания такого документа</p>

<pre><code class="java">
private JSONArray createJSON() throws JSONException
{
	
	ArrayList&lt;JSONObject&gt; MyArrJson = new ArrayList&lt;JSONObject &gt;();
	JSONObject object;
	
	/*** Ряд 1 ***/
	object = new JSONObject();
	object.put("MemberID","1");
	object.put("Name", "Рыжик");
	object.put("Tel", "4954876107");
	MyArrJson.add(object);
	
	/*** Ряд 2 ***/
	object = new JSONObject();
	object.put("MemberID","2");
	object.put("Name", "Мурзик");
	object.put("Tel", "4954780121");
	MyArrJson.add(object);	
	
	/*** Ряд 3 ***/
	object = new JSONObject();
	object.put("MemberID","3");
	object.put("Name", "Васька");
	object.put("Tel", "4954543211");
	MyArrJson.add(object);			
	
	JSONArray json = new JSONArray(MyArrJson);
	return json;
}
</code></pre>

<p>Далее уже можно разместить полученный результат в списке способом, 
показанным ранее. Добавим в проект кнопку и поместим тот же код:</p>

<pre><code class="java">
public void onClick(View v){
	try {
		
		JSONArray data = createJSON();
		
		ArrayList&lt;HashMap&lt;String, String&gt;&gt; MyArrList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();
		HashMap&lt;String, String&gt; map;
		
		for(int i = 0; i &lt; data.length(); i++){
            JSONObject c = data.getJSONObject(i);
			map = new HashMap&lt;String, String&gt;();
			map.put("MemberID", c.getString("MemberID"));
			map.put("Name", c.getString("Name"));
			map.put("Tel", c.getString("Tel"));
			MyArrList.add(map);
		}

        SimpleAdapter sAdap;
        sAdap = new SimpleAdapter(JSONActivity.this, MyArrList, R.layout.three_column,
                new String[] {"MemberID", "Name", "Tel"}, new int[] {R.id.ColMemberID, R.id.ColName, R.id.ColTel});      
        listView.setAdapter(sAdap);
        
	} catch (JSONException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}
</code></pre>





<h2 class="text-warning">Дополнительное чтение</h2>

<p><a href="http://developer.alexanderklimov.ru/android/twitterservices.php">Используем веб-сервисы на примере Twitter</a></p>


</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20JSON_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20JSON_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20JSON_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20JSON_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20JSON_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20JSON_files/fastbutton.htm" name="I0_1378284295068" id="I0_1378284295068" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20JSON_files/jquery.js"></script><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="Android%20%20JSON_files/postmessageRelay.htm" id="oauth2relay266792894" name="oauth2relay266792894"></iframe>
    <script src="Android%20%20JSON_files/bootstrap-transition.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-alert.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-modal.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-tab.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-popover.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-button.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20JSON_files/bootstrap-typeahead.js"></script>

</body></html>