<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Попугай</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory.php">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Попугай</h1>
<p>Третий месяц обучения (закрытая зона)</p>

<p>
<a href="#theory">Теория</a><br>
<a href="#interface">Разработка интерфейса</a><br>
<a href="#texttospeech">Распознавание речи</a><br>
<a href="#tts">Синтез речи</a><br>
</p>

<p>Android поддерживает распознавание речи и синтез речи. На основе этих
 замечательных технологий создадим проект под кодовым словом "Попугай" -
 пользователь будет говорить всякие нехорошие слова, программа будет 
пытаться распознать ваши ругательства и повторять за вами. Всё как в 
жизни.</p>

<p>Готовое предложение необходимо проверять на реальном устройстве, так 
как эмулятор не поддерживает данные технологии. Для распознавания речи 
необходимо иметь подключение к интернету (разрешение в манифесте не 
требуется).</p>



<h2 class="text-warning" id="theory">Теория</h2>

<p>Начиная с версии 1.5 (API level 3) Android поддерживает голосовой ввод и распознавание речи с помощью класса <b>RecognizerIntent</b>. Этот API позволяет встраивать в приложения голосовой ввод, используя стандартное диалоговое окно.</p>

<p>Речь распознается с помощью метода <b>startActivityForResult()</b>, которому необходимо передать намерение, созданное с применением константы <b>RecognizerIntent.ACTION_RECOGNIZE_SPEECH</b>.</p>

<p>Намерение также должно содержать дополнительный параметр <b>RecognizerIntent.EXTRA_LANGUAGE_MODEL</b>, указывающий на языковую модель распознавания входящего звука. Он может содержать значения <b>LANGUAGE_MODEL_FREE_FORM</b> или <b>LANGUAGE_MODEL_WEB_SEARCH</b>.</p>

<p>Также можно указать несколько необязательных параметров, чтобы 
изменять язык, количество потенциальных результатов и содержание 
отображаемой строки, используя следующие константы из класса 
RecognizerIntent:</p>

<ul>
<li><b>EXTRA_PROMPT</b> — задайте строку, которая будет отображаться в 
окне голосового ввода. Она должна предлагать пользователю сказать 
что-нибудь в микрофон;</li>
<li><b>EXTRA_MAXRESULTS</b> — используйте целочисленное значение, чтобы ограничить количество результатов, которые могут быть возвращены при распознавании;</li>
<li><b>EXTRA_LANGUAGE</b> — укажите языковую константу из класса Locale,
 чтобы задать язык для ввода, отличный от языка по умолчанию на данном 
устройстве. Вы можете получить текущее значение по умолчанию, вызвав 
статический метод getDefault из класса Locale;</li>
</ul>

<p>В листинге показывается, как инициировать распознавание речи на 
английском языке, используя собственную строку в диалоговом окне и 
ограничивая количество результатов до одного.</p>

<pre><code class="java">
Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH)
// Укажите свободную форму ввода
intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
        RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
intent.putExtra(RecognizerIntent.EXTRA_PROMPT,
        "or forever hold your peace");
intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 1);
intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.ENGLISH);
startActivityForResult(intent, VOICE_RECOGNITION);
</code></pre>

<p>Когда пользователь завершит голосовой ввод, записанный звук 
проанализируется и обработается движком для распознавания речи. 
Результаты вернутся через обработчик <b>onActivityResult()</b> в виде списка строк, хранящегося в параметре EXTRA_RESULTS:</p>

<pre><code class="java">
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	if (requestCode == VOICE VOICE_RECOGNITION &amp;&amp; resultCode == RESULT_OK) 
    {
        ArrayList&lt;String&gt; results;
        results = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
        // TODO Выполнить какие-то действия с распознанными строками
    }
    super.onActivityResult(requestCode, resultCode, data);
}
</code></pre>

<h2 class="text-warning" id="interface">Разработка интерфейса</h2>

<p>Запустим новый проект и займёмся пользовательским интерфейсом. Нам 
понадобится кнопка, при её нажатии программа предложит пользователю 
начать говорить и будет слушать ваш голос, пытаясь распознать речь и 
предлагая выбрать угаданные слова из списка. Когда пользователь выберет 
правильный вариант, то программа повторит выбранные слова.</p>

<p>Определим несколько строковых ресурсов в файле <b>res/values/strings.xml</b>:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;
    &lt;string name="app_name"&gt;Попугай&lt;/string&gt;
    &lt;string name="intro"&gt;Нажмите для начала разговора!&lt;/string&gt;
    &lt;string name="speech"&gt;Говорите!&lt;/string&gt;
    &lt;string name="word_intro"&gt;Возможно, вы сказали…&lt;/string&gt;
&lt;/resources&gt;
</code></pre>

<p>Займёмся дизайном основного экрана (main.xml):</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:background="#ff330066"
    android:orientation="vertical"
    android:paddingBottom="5dp" &gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:padding="5dp"
        android:text="@string/intro"
        android:textColor="#ffffff33"
        android:textSize="16dp"
        android:textStyle="bold" /&gt;

    &lt;Button
        android:id="@+id/speech_btn"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/speech" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="5dp"
        android:text="@string/word_intro"
        android:textStyle="italic" /&gt;

    &lt;ListView
        android:id="@+id/word_list"
        android:layout_width="fill_parent"
        android:layout_height="0dip"
        android:layout_marginBottom="5dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"
        android:layout_marginTop="5dp"
        android:layout_weight="1"
        android:background="@drawable/words_bg"
        android:paddingBottom="3dp"
        android:paddingLeft="10dp"
        android:paddingRight="10dp"
        android:paddingTop="3dp" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>У элемента ListView в качестве фона определён ресурс "@drawable/words_bg", который представляет собой фигуру. Создадим в папке <b>res/drawable</b> файл <b>words_bg.xml</b> следующего содержания:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:dither="true" &gt;

    &lt;gradient
        android:angle="180"
        android:centerColor="#00000000"
        android:endColor="#ff000000"
        android:startColor="#ff000000" /&gt;

    &lt;corners android:radius="10dp" /&gt;

    &lt;stroke
        android:width="2dp"
        android:color="#66ffffff" /&gt;

&lt;/shape&gt;
</code></pre>

<p>Осталось только определить дизайн для отдельного элемента списка. Создадим новый файл в папке <b>res/layout</b> под именем <b>word.xml</b>:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;TextView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:gravity="center"
    android:padding="5dp"
    android:textColor="#ffffffff"
    android:textSize="16dp" &gt;

&lt;/TextView&gt;
</code></pre>

<p>Сейчас наш проект на данном этапе разработки выглядит следующим образом:</p>

<img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/parrot1.png">

<h2 class="text-warning" id="texttospeech">Распознавание речи</h2>

<p>Переходим непосредственно к коду и начнём с распознавания речи. Объявим в классе несколько переменных:</p>

<pre><code class="java">
//voice recognition and general variables
 
//variable for checking Voice Recognition support on user device
private static final int VR_REQUEST = 999;
 
//ListView
private ListView wordList;
 
//выводим информацию в логи
private final String LOG_TAG = "ParrotActivity";
 
//TTS variables
 
//variable for checking TTS engine data on user device
private int MY_DATA_CHECK_CODE = 0;
 
//Text To Speech instance
private TextToSpeech repeatTTS;
</code></pre>

<p>В методе <b>onCreate()</b> укажем на кнопку и список, а также сделаем проверку на доступность технологии распознавания речи на устройстве:</p>

<pre><code class="java">
Button speechBtn = (Button) findViewById(R.id.speech_btn);
wordList = (ListView) findViewById(R.id.word_list);

//поддерживается ли распознавание речи
PackageManager packManager = getPackageManager();
List&lt;ResolveInfo&gt; intActivities = packManager.queryIntentActivities(new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH), 0);
if (intActivities.size() != 0) {
    // если поддерживается, то обрабатываем нажите кнопки
    speechBtn.setOnClickListener(this);
}
else
{
    //распознавание не поддерживается, делаем кнопку недоступной и выводим сообщение
    speechBtn.setEnabled(false);
    Toast.makeText(this, "Сожалеем, но ваше устройство не поддерживает распознавание речи!", Toast.LENGTH_LONG).show();
}
</code></pre>

<p>Теперь напишем код для обработки голосового ввода. Добавим в классе метод <b>onClick</b>, который будет срабатывать при нажатии на кнопку <b>Говорите</b> и сам метод для прослушки речи пользователя:</p>

<pre><code class="java">
public void onClick(View v) {
	if (v.getId() == R.id.speech_btn) {
		// слушаем
		listenToSpeech();
	}
}

private void listenToSpeech() {
    // запускаем намерение для распознавания речи
    Intent listenIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    //indicate package
    listenIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, getClass().getPackage().getName());
    //Текст-приглашение
    listenIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Скажи что-нибудь!");
    //set speech model
    listenIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
    // задаем число получаемых результатов
    listenIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 10);
 
    // начинаем слушать
    startActivityForResult(listenIntent, VR_REQUEST);
}
</code></pre>

<p>Сам код стандартен для установки настроек при работе с распознаванием
 речи. Единственное, что тут можно настроить - текст для пользователя 
(EXTRA_PROMPT) и число возвращаемых результатов при неразброрчивой речи 
(EXTRA_MAX_RESULTS). В последней строчке запускается метод <b>startActivityForResult()</b>, который просит прислать результаты обработки распознавания речи в метод <b>onActivityResult</b>.</p>

<pre><code class="java">
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    //check speech recognition result
    if (requestCode == VR_REQUEST &amp;&amp; resultCode == RESULT_OK)
    {
        //store the returned word list as an ArrayList
        ArrayList&lt;String&gt; suggestedWords = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
        //set the retrieved list to display in the ListView using an ArrayAdapter
        wordList.setAdapter(new ArrayAdapter&lt;String&gt; (this, R.layout.word, suggestedWords));
    }
 
    // код для TTS. Добавим позже
 
    //call superclass method
    super.onActivityResult(requestCode, resultCode, data);
}
</code></pre>

<p>В этом коде мы получаем результат распознавания речи. Мы установили, 
что нам нужно десять вариантов ответов, которые помещаем в массив. 
Используя адаптер, мы выводим варианты слов в качестве элементов списка.</p>

<p>Предоставим пользователю выбрать из предложенных вариантов нужный 
ответ. Добавим код для обработки нажатия на отдельных элементах списка. 
Возвращаемся обратно в метод <b>onCreate()</b> и дописываем код для прослушки нажатий на пунктах списка:</p>

<pre><code class="java">
//detect user clicks of suggested words
wordList.setOnItemClickListener(new OnItemClickListener() {
    //click listener for items within list
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id)
    {
        TextView wordView = (TextView)view;
        // выбранный вариант слова
        String wordChosen = (String) wordView.getText();
        // для отладки
        Log.v(LOG_TAG, "chosen: "+wordChosen);
        // выводим сообщение
        Toast.makeText(ParrotActivity.this, "Вы сказали: "+wordChosen, Toast.LENGTH_SHORT).show();
    }
});
</code></pre>

<h2 class="text-warning" id="tts">Синтез речи</h2>

<p>На этот первый этап разработки программы завершён. Приложение умеет 
распознавать речь и выводить выбранный вариант через всплывающее 
сообщение. Осталось добавить в программу возможность проговорить вслух 
выбранный вариант (не забываем, что проект носит кодовое слово Попугай).</p>

<p>Для начала установим движок синтеза речи (TTS). Добавим код в методе <b>onCreate()</b> после проверки доступности распознавания речи (внутри оператора if после <i>speechBtn.setOnClickListener(this);</i>):</p>

<pre><code class="java">
// подготовим движок TTS, чтобы проговорить выбранное слово
Intent checkTTSIntent = new Intent();
// проверяем данные для TTS
checkTTSIntent.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA);
// запускаем намерение - результат получим в методе onActivityResult
startActivityForResult(checkTTSIntent, MY_DATA_CHECK_CODE);
</code></pre>

<p>Мы уже имеем метод <b>onActivityResult()</b>, в который попадают 
результаты от распознавания речи. Добавим к методу еще один блок кода, 
который будет получать результат от TTS:</p>

<pre><code class="java">
//returned from TTS data check
if (requestCode == MY_DATA_CHECK_CODE)
{
    //we have the data - create a TTS instance
    if (resultCode == TextToSpeech.Engine.CHECK_VOICE_DATA_PASS)
        repeatTTS = new TextToSpeech(this, this);
    //data not installed, prompt the user to install it
    else
    {
        //intent will take user to TTS download page in Google Play
        Intent installTTSIntent = new Intent();
        installTTSIntent.setAction(TextToSpeech.Engine.ACTION_INSTALL_TTS_DATA);
        startActivity(installTTSIntent);
    }
}
</code></pre>

<p>Если движок установлен, то он будет приведён в боевую готовность, в 
противном случае программа предложит установить пользователю движок.</p>

<p>Осталось добавить в класс метод <b>onInit()</b> для завершения настройки TTS-движка:<code class="java">
public void onInit(int initStatus) {
    // если успешно, то устанавливаем локаль
    if (initStatus == TextToSpeech.SUCCESS)
        repeatTTS.setLanguage(Locale.UK);
}
</code>

</p><p>В принципе вариантов для локали немного, поэтому оставляем самый универсальный.</p>

<p>Теперь мы можем повторять выбранные слова. Возвращаемся в метод <b>onCreate()</b> и внутри <b>OnItemClickListener</b> в методе <b>onItemClick()</b> после строчки кода для вывода всплывающего сообщения добавляем ещё одну строчку.</p>

<pre><code class="java">
// говорим выбранное слово
repeatTTS.speak("You said: "+wordChosen, TextToSpeech.QUEUE_FLUSH, null);
</code></pre>

<p>Теперь у нас будет не только выводиться сообщение, но и дублироваться голосом.</p>

<h3 class="text-warning">Исходник</h3>

<details>
    <summary>Показать код (щелкните мышкой)</summary>
	
<pre><code class="java">
package ru.alexanderklimov.parrot;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.os.Bundle;
import android.speech.RecognizerIntent;
import android.speech.tts.TextToSpeech;
import android.speech.tts.TextToSpeech.OnInitListener;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class ParrotActivity extends Activity implements OnClickListener,
		OnInitListener {

	// voice recognition and general variables

	// variable for checking Voice Recognition support on user device
	private static final int VR_REQUEST = 999;

	// ListView for displaying suggested words
	private ListView wordList;

	// Log tag for output information
	private final String LOG_TAG = "ParrotActivity";

	// TTS variables

	// variable for checking TTS engine data on user device
	private int MY_DATA_CHECK_CODE = 0;

	// Text To Speech instance
	private TextToSpeech repeatTTS;

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		Button speechBtn = (Button) findViewById(R.id.speech_btn);
		wordList = (ListView) findViewById(R.id.word_list);

		// find out whether speech recognition is supported
		PackageManager packManager = getPackageManager();
		List&lt;ResolveInfo&gt; intActivities = packManager.queryIntentActivities(
				new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH), 0);
		if (intActivities.size() != 0) {
			// speech recognition is supported - detect user button clicks
			speechBtn.setOnClickListener(this);

			// подготовим движок TTS, чтобы проговорить выбранное слово
			Intent checkTTSIntent = new Intent();
			// проверяем данные для TTS
			checkTTSIntent.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA);
			// запускаем намерение - результат получим в методе onActivityResult
			startActivityForResult(checkTTSIntent, MY_DATA_CHECK_CODE);
		} else {
			// speech recognition not supported, disable button and output
			// message
			speechBtn.setEnabled(false);
			Toast.makeText(this, "Oops - Speech recognition not supported!",
					Toast.LENGTH_LONG).show();
		}

		// detect user clicks of suggested words
		wordList.setOnItemClickListener(new OnItemClickListener() {

			// click listener for items within list
			public void onItemClick(AdapterView&lt;?&gt; parent, View view,
					int position, long id) {
				TextView wordView = (TextView) view;
				// выбранный вариант слова
				String wordChosen = (String) wordView.getText();
				// для отладки
				Log.v(LOG_TAG, "chosen: " + wordChosen);
				// выводим сообщение
				Toast.makeText(ParrotActivity.this,
						"Вы сказали: " + wordChosen, Toast.LENGTH_SHORT).show();
				// говорим выбранное слово
				repeatTTS.speak("You said: " + wordChosen,
						TextToSpeech.QUEUE_FLUSH, null);
			}
		});

	}

	// Called when the user presses the speak button
	public void onClick(View v) {
		if (v.getId() == R.id.speech_btn) {
			// listen for results
			listenToSpeech();
		}
	}

	/**
	 * Instruct the app to listen for user speech input
	 */
	private void listenToSpeech() {

		// запускаем намерение для распознавания речи
		Intent listenIntent = new Intent(
				RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
		// indicate package
		listenIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE,
				getClass().getPackage().getName());
		// Текст-приглашение
		listenIntent.putExtra(RecognizerIntent.EXTRA_PROMPT,
				"Скажи что-нибудь!");
		// set speech model
		listenIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
				RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
		// задаем число получаемых результатов
		listenIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 10);

		// начинаем слушать
		startActivityForResult(listenIntent, VR_REQUEST);
	}

	/**
	 * onActivityResults handles: - retrieving results of speech recognition
	 * listening - retrieving result of TTS data check
	 */
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// check speech recognition result
		if (requestCode == VR_REQUEST &amp;&amp; resultCode == RESULT_OK) {
			// store the returned word list as an ArrayList
			ArrayList&lt;String&gt; suggestedWords = data
					.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
			// set the retrieved list to display in the ListView using an
			// ArrayAdapter
			wordList.setAdapter(new ArrayAdapter&lt;String&gt;(this, R.layout.word,
					suggestedWords));
		}

		// tss code here
		// returned from TTS data check
		if (requestCode == MY_DATA_CHECK_CODE) {
			// we have the data - create a TTS instance
			if (resultCode == TextToSpeech.Engine.CHECK_VOICE_DATA_PASS)
				repeatTTS = new TextToSpeech(this, this);
			// data not installed, prompt the user to install it
			else {
				// intent will take user to TTS download page in Google Play
				Intent installTTSIntent = new Intent();
				installTTSIntent
						.setAction(TextToSpeech.Engine.ACTION_INSTALL_TTS_DATA);
				startActivity(installTTSIntent);
			}
		}

		// call superclass method
		super.onActivityResult(requestCode, resultCode, data);
	}

	/**
	 * onInit fires when TTS initializes
	 */
	public void onInit(int initStatus) {
		// если успешно, то устанавливаем локаль
		if (initStatus == TextToSpeech.SUCCESS)
			repeatTTS.setLanguage(Locale.UK);
	}
}
</code></pre>
	
</details>

<p>Использованные материалы: <a href="http://mobile.tutsplus.com/tutorials/android/android-sdk-build-a-speak-and-repeat-app/">Android SDK: Build a Speak and Repeat App</a></p>


<img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/parrot2.png" alt=""> <img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/parrot3.png" alt="">


</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/fastbutton.htm" name="I0_1378295398410" id="I0_1378295398410" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/jquery.js"></script><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/postmessageRelay.htm" id="oauth2relay837612061" name="oauth2relay837612061"></iframe>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%9F%D0%BE%D0%BF%D1%83%D0%B3%D0%B0%D0%B9_files/bootstrap-typeahead.js"></script>

</body></html>