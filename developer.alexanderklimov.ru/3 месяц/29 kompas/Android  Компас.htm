<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Компас</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory.php">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Компас</h1>
<p>Третий месяц обучения (закрытая зона)</p>

<p>
<a href="#compassview">Создание нового представления CompassView</a><br>

</p>

<p>В книге Рето Майера наткнулся на интересный пример создания компаса. 
Сначала рассказывается, как создать новое представление для отображения 
компаса на экране. Дальше прикручивается к компасу акселерометер и 
вдобавок создаются ещё два инструмента для определения наклона и крена.</p>



<h2 class="text-warning" id="compassview">Создание нового представления CompassView</h2>

<p>Сначала мы создадим новое представление CompassView, наследуя класс 
View. Этот элемент будет выводить на экран традиционное изображение 
компаса (в виде розы ветров), указывая курс (направление).</p>

<p>Создайте новый проект под названием Compass. Затем создайте новый 
класс CompassView, наследующий View. Создайте в нём конструкторы, 
которые позволят получать экземпляры представления как внутри кода 
программы, так и с помощью ресурса с разметкой. Добавьте новый метод 
initCompassView() — он будет использоваться для инициализации элемента —
 и вызовите его внутри каждого конструктора.</p>

<pre><code class="java">
package ru.alexanderklimov.compass;

import android.content.Context;
import android.util.AttributeSet;
import android.view.View;

public class CompassView extends View {

	public CompassView(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
		initCompassView();
	}

	public CompassView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		// TODO Auto-generated constructor stub
		initCompassView();
	}

	public CompassView(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
		initCompassView();
	}

	protected void initCompassView() {
		setFocusable(true);
	}
}
</code></pre>

<p>Элемент, отображающий компас, всегда должен представлять собой 
идеальную окружность, занимающую все доступное пространство Canvas. 
Переопределите обработчик onMeasure, чтобы вычислить наименьщую длину 
(высоту или ширину экрана), и вызовите метод setMeasuredDimension, чтобы
 установить высоту и ширину, используя полученное значение.</p>

<pre><code class="java">
@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
	// Компас представляет собой окружность, занимающую все доступное
	// пространство.
	// Установите размеры элемента, вычислив короткую грань (высоту
	// или ширину).
	int measuredWidth = measure(widthMeasureSpec);
	int measuredHeight = measure(heightMeasureSpec);
	int d = Math.min(measuredWidth, measuredHeight);
	setMeasuredDimension(d, d);
}

private int measure(int measureSpec) {
	int result = 0;
	// Декодируйте параметр measureSpec.
	int specMode = MeasureSpec.getMode(measureSpec);
	int specSize = MeasureSpec.getSize(measureSpec);
	if (specMode == MeasureSpec.UNSPECIFIED) {
		// Если границы не указаны, верните размер по умолчанию (200).
		result = 200;
	} else {
		// Так как вам нужно заполнить все доступное пространство,
		// всегда возвращайте максимальный доступный размер.
		result = specSize;
	}
	return result;
}
</code></pre>

<p>Добавьте строковые ресурсы с файл res/values/strings.xml:</p>

<pre><code class="xml">
&lt;string name="cardinal_north"&gt;N&lt;/string&gt;
&lt;string name="cardinal_east"&gt;E&lt;/string&gt;
&lt;string name="cardinal_south"&gt;S&lt;/string&gt;
&lt;string name="cardinal_west"&gt;W&lt;/string&gt;
</code></pre>

<p>Создайте ресурс со значениями цветов res/values/colors.xml:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;

    &lt;color name="background_color"&gt;#F555&lt;/color&gt;
    &lt;color name="marker_color"&gt;#AFFF&lt;/color&gt;
    &lt;color name="text_color"&gt;#AFFF&lt;/color&gt;

&lt;/resources&gt;
</code></pre>

<p>Теперь вернитесь к классу CompassView. Добавьте новое пустое 
свойство, чтобы хранить отображаемое направление, и создайте для него 
геттер и сеттер.</p>

<pre><code class="java">
private float bearing;

public void setBearing(float _bearing) {
	bearing = _bearing;
}

public float getBearing() {
	return bearing;
}
</code></pre>

<p>Перейдите к методу initCompassView и получите ссылки на ресурсы, 
созданные ранее. Сохраните строковые значения в виде свойств, 
используйте значения цветов для создания нового объекта Paint, 
принадлежащего классу. Эти объекты вы примените позже при рисовании 
циферблата для компаса.</p>

<pre><code class="java">
private Paint markerPaint;
private Paint textPaint;
private Paint circlePaint;
private String northString;
private String eastString;
private String southString;
private String westString;
private int textHeight;

protected void initCompassView() {
	setFocusable(true);
	
	Resources r = this.getResources();
	circlePaint = new Paint(Paint.ANTI_ALIAS_FLAG);
	circlePaint.setColor(r.getColor(R.color.background_color));
	circlePaint.setStrokeWidth(1);
	circlePaint.setStyle(Paint.Style.FILL_AND_STROKE);
	northString = r.getString(R.string.cardinal_north);
	eastString = r.getString(R.string.cardinal_east);
	southString = r.getString(R.string.cardinal_south);
	westString = r.getString(R.string.cardinal_west);
	textPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
	textPaint.setColor(r.getColor(R.color.text_color));
	textHeight = (int) textPaint.measureText("yY");
	markerPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
	markerPaint.setColor(r.getColor(R.color.marker_color));
}
</code></pre>

<p>В завершение необходимо нарисовать циферблат компаса, используя 
объекты String и Paint, созданные ранее. В первую очередь начните с 
того, что переопределите метод onDraw() в классе CompassView.</p>

<pre><code class="java">
@Override
protected void onDraw(Canvas canvas) {
	// Найдите центральную точку элемента управления и сохраните
	// короткую грань в качестве радиуса компаса.
	int px = getMeasuredWidth() / 2;
	int py = getMeasuredHeight() / 2;
	int radius = Math.min(px, py);

	// С помощью метода drawCircle нарисуйте внешнюю границу и
	// добавьте фон для циферблата.
	// Воспользуйтесь объектом circlePaint, который создали раньше
	canvas.drawCircle(px, py, radius, circlePaint);

	// Компас отображает текущее направление таким образом, чтобы
	// оно всегда указывало на верхнюю часть устройства, поворачивая
	// при этом циферблат. Чтобы достичь такого эффекта,
	// поворачивайте Холст в направлении, противоположном текущему.
	canvas.save();
	canvas.rotate(-bearing, px, py);
	
	// Рисуем метки. Сделайте 
	// полный поворот Холста, рисуя отметки каждые 15 градусов   
	// и обозначая направления каждые 45 градусов
	int textWidth = (int)textPaint.measureText("W");
	  int cardinalX = px-textWidth/2;
	  int cardinalY = py-radius+textHeight;
	  // Рисуйте отметки каждые 15 гр. и текст каждые 45 гр.
	  for (int i = 0; i &lt; 24; i++) {
	    // Нарисуйте метку.
	    canvas.drawLine(px, py-radius, px, py-radius+10, markerPaint);
	    canvas.save();
	    canvas.translate(0, textHeight);
	    
	    // Нарисуйте основные точки
	    if (i % 6 == 0) {
	      String dirString = "";
	      switch (i) {
	        case(0) : {
	                    dirString = northString;
	                    int arrowY = 2*textHeight;
	                    canvas.drawLine(px, arrowY, px-5, 3*textHeight,
	                                    markerPaint);
	                    canvas.drawLine(px, arrowY, px+5, 3*textHeight,
	                                    markerPaint);
	                    break;
	                  }
	        case(6)  : dirString = eastString; break;
	        case(12) : dirString = southString; break;
	        case(18) : dirString = westString; break;
	      }
	      canvas.drawText(dirString, cardinalX, cardinalY, textPaint);
	    }
	    else if (i % 3 == 0) {
	      // Отображайте текст каждые 45 градусов
	      String angle = String.valueOf(i*15);
	      float angleTextWidth = textPaint.measureText(angle);
	      int angleTextX = (int)(px-angleTextWidth/2);
	      int angleTextY = py-radius+textHeight;
	      canvas.drawText(angle, angleTextX, angleTextY, textPaint);
	    }
	    canvas.restore();
	    canvas.rotate(15, px, py);
	  }
	  canvas.restore();
}
</code></pre>

<p>Чтобы вывести компас на экран, отредактируйте ресурс с разметкой activity_main.xml, добавив новосозданный элемент CompassView.</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" &gt;

    &lt;ru.alexanderklimov.compass.CompassView
        android:id="@+id/compassView"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:layout_margin="3dp" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/compass1.png" alt="Компас"></p>

<p>Продолжим усложнять компас. Чтобы обеспечить максимальную 
независимость логики от представления, элемент CompassView не будет 
взаимодействовать с датчиками напрямую. Вместо этого он будет 
обновляться из активности. Начните с добавления в класс CompassView 
полей и геттеров/сеттеров для параметров pitch и roll.</p>

<pre><code class="java">
float pitch = 0;
float roll = 0;

public float getPitch() {
	return pitch;
}

public void setPitch(float pitch) {
	this.pitch = pitch;
}

public float getRoll() {
	return roll;
}

public void setRoll(float roll) {
	this.roll = roll;
}
</code></pre>

<p>Обновите метод onDraw(), нарисовав с его помощью две окружности, 
которые будут использоваться для отображения значений pitch и roll.</p>

<p>Создадим первую окружность, закрашенную наполовину, которая вращается
 в соответствии с боковым наклоном (roll).  А также ещё одну окружность,
 которая в состоянии покоя закрашена наполовину и, в зависимости от 
изменений параметра pitch, может быть как пустой, так и полностью 
закрашенной:</p>

<pre><code class="java">
@Override
protected void onDraw(Canvas canvas) {
	
	int mMeasuredWidth = getMeasuredWidth();
    int mMeasuredHeight = getMeasuredWidth();

	// Предыдущий код

	// первая окружность
	RectF rollOval = new RectF((mMeasuredWidth / 3) - mMeasuredWidth / 7,
			(mMeasuredHeight / 2) - mMeasuredWidth / 7,
			(mMeasuredWidth / 3) + mMeasuredWidth / 7,
			(mMeasuredHeight / 2) + mMeasuredWidth / 7);
	markerPaint.setStyle(Paint.Style.STROKE);
	canvas.drawOval(rollOval, markerPaint);
	markerPaint.setStyle(Paint.Style.FILL);
	canvas.save();
	canvas.rotate(roll, mMeasuredWidth / 3, mMeasuredHeight / 2);
	canvas.drawArc(rollOval, 0, 180, false, markerPaint);
	canvas.restore();

	// вторая окружность
	RectF pitchOval = new RectF((2 * mMeasuredWidth / 3) - mMeasuredWidth
			/ 7, (mMeasuredHeight / 2) - mMeasuredWidth / 7,
			(2 * mMeasuredWidth / 3) + mMeasuredWidth / 7,
			(mMeasuredHeight / 2) + mMeasuredWidth / 7);
	markerPaint.setStyle(Paint.Style.STROKE);
	canvas.drawOval(pitchOval, markerPaint);
	markerPaint.setStyle(Paint.Style.FILL);
	canvas.drawArc(pitchOval, 0 - pitch / 2, 180 + (pitch), false,
			markerPaint);
	markerPaint.setStyle(Paint.Style.STROKE);

}
</code></pre>

<p>Запустим проект ещё раз:</p>

<p><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/compass2.png" alt="Компас"></p>

<p>Теперь перейдите к основной активности. Для отслеживания положения 
устройства в пространстве с помощью датчика магнитного поля и 
акселерометра используйте объект SensorManager. Сперва добавьте поля для
 хранения последних зафиксированных показаний этих датчиков, а также 
ссылки на объекты CompassView 
и SensorManager.</p>

<pre><code class="java">
float[] aValues = new float[3];
float[] mValues = new float[3];
CompassView compassView;
SensorManager sensorManager;
</code></pre>

<p>Создайте новый метод <b>updateOrientation()</b>, который использует актуальный азимут, а также значения pitch и roll для обновления элемента 
CompassView.</p>

<pre><code class="java">
private void updateOrientation(float[] values) {
	if (compassView != null) {
		compassView.setBearing(values[0]);
		compassView.setPitch(values[1]);
		compassView.setRoll(-values[2]);
		compassView.invalidate();
	}
}
</code></pre>

<p>Обновите метод onCreate(), чтобы получить ссылки на объекты 
CompassView и SensorManager, инициализировав азимут и значения pitch и 
roll.</p>

<pre><code class="java">
@Override
public void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_main);

	compassView = (CompassView) this.findViewById(R.id.compassView);
	sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
	updateOrientation(new float[] { 0, 0, 0 });
}
</code></pre>

<p>Создайте новый метод <b>calculateOrientation()</b> для вычисления 
положения устройства в пространстве, используя поля, хранящие последние 
записанные показания акселерометра и датчика магнитного поля.</p>

<pre><code class="java">
private float[] calculateOrientation() {
	float[] values = new float[3];
	float[] R = new float[9];
	SensorManager.getRotationMatrix(R, null, aValues, mValues);
	SensorManager.getOrientation(R, values);
	// Преобразуйте радианы в градусы.
	values[0] = (float) Math.toDegrees(values[0]);
	values[1] = (float) Math.toDegrees(values[1]);
	values[2] = (float) Math.toDegrees(values[2]);
	return values;
}
</code></pre>

<p>Реализуйте интерфейс SensorEventListener в виде поля. Внутри 
обработчика onSensorChanged нужно проверить тип датчика и обновить поля,
 хранящие последние показания акселерометра или датчика магнитного поля,
 прежде чем вызвать метод updateOrientation() с помощью 
calculateOrientation().</p>

<pre><code class="java">
private final SensorEventListener sensorEventListener = new SensorEventListener() {
	public void onSensorChanged(SensorEvent event) {
		if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER)
			aValues = event.values;
		if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD)
			mValues = event.values;

		updateOrientation(calculateOrientation());
	}

	public void onAccuracyChanged(Sensor sensor, int accuracy) {
	}
};
</code></pre>

<p>Теперь переопределите обработчики onResume() и onStop(), чтобы 
регистрировать и отменять регистрацию SensorEventListener, когда 
активность становится видимой или скрывается.</p>

<pre><code class="java">
@Override
protected void onResume() {
	super.onResume();

	Sensor accelerometer = sensorManager
			.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
	Sensor magField = sensorManager
			.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);

	sensorManager.registerListener(sensorEventListener, accelerometer,
			SensorManager.SENSOR_DELAY_FASTEST);
	sensorManager.registerListener(sensorEventListener, magField,
			SensorManager.SENSOR_DELAY_FASTEST);
}

@Override
protected void onStop() {
	sensorManager.unregisterListener(sensorEventListener);
	super.onStop();
}
</code></pre>

<p>Запустив приложение (на реальном устройстве), вы должны увидеть три 
индикатора, которые динамически обновляются при изменении положения 
устройства в пространстве.</p>

<p>Автогоризонт более полезен в вертикальном положении. Для этого 
необходимо изменить систему отсчета автогоризонта, обновив метод 
calculateOrientation(), в котором должна преобразовываться система 
координат.</p>

<pre><code class="java">
private float[] calculateOrientation() {
	float[] values = new float[3];
	float[] R = new float[9];
	float[] outR = new float[9];

	SensorManager.getRotationMatrix(R, null, aValues, mValues);
	SensorManager.remapCoordinateSystem(R, SensorManager.AXIS_X,
			SensorManager.AXIS_Z, outR);

	SensorManager.getOrientation(outR, values);

	// Convert from Radians to Degrees.
	values[0] = (float) Math.toDegrees(values[0]);
	values[1] = (float) Math.toDegrees(values[1]);
	values[2] = (float) Math.toDegrees(values[2]);

	return values;
}
</code></pre>

<p>Запускаем проект и теперь у нас в руках полезный инструмент - компас, автогоризонт и измеритель наклона.</p>

<p><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/compass3.png" alt="Компас с автогоризонтом"></p>

<p><a href="http://developer.alexanderklimov.ru/android/apk/Compass.zip">Скачать исходники</a></p>



</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/fastbutton.htm" name="I0_1378295614696" id="I0_1378295614696" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/jquery.js"></script><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/postmessageRelay.htm" id="oauth2relay484359698" name="oauth2relay484359698"></iframe>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D1%81_files/bootstrap-typeahead.js"></script>

</body></html>