<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Контакт? Есть контакт!</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory.php">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Контакт? Есть контакт!</h1>
<p>Третий месяц обучения (закрытая зона)</p>

<p>
<a href="#contactscontract">ContactsContract</a><br>
<a href="#sample">Получаем электронные адреса через приложение Контакты</a><br>
<a href="#getcontacts">Доступ к контактам напрямую</a><br>
</p>

<p>Android предоставляет доступ к контактам, которые занесены в телефон.
 Следует помнить, что раньше (до Android 2.0) существовал другой API для
 доступа, который считается устаревшим. Мы его рассматривать не будем.</p>


<h2 class="text-warning" id="contactscontract">ContactsContract</h2>

<p>В Android 2.0 (API level 5) появился класс <b>ContactsContract</b>, 
заменивший Contacts, который раньше использовался для хранения и 
управления 
контактами на устройстве. Новый класс включает новые возможности по 
управлению контактами в Android, предоставляя базу данных со всей 
информацией, 
касающейся контактов. Кроме того разработчики сами могут расширять 
информацию для каждого контакта или даже создавать альтернативные 
Источники для контактов и сопутствующих данных.</p>

<p>Вместо использования одной строго определенной таблицы с контактной 
информацией ContactsContract оперирует трехуровневой моделью, отвечающей
 за хранение данных, связывание с контактом и объединение их для 
конкретного человека, используя следующие подклассы.</p>

<ul>
<li><b>Data</b> - В исходной таблице каждая строка определяет набор 
личных данных (например, телефонные номера, адреса электронной почты и 
т. д.), разделенных типом MIME. Несмотря на предопределенный набор 
основных имен столбцов для каждого типа личных данных (доступных наряду с
 соответствующими MIME-типами, хранящимися в 
ContactsContract.CommonDataKinds), эта таблица может использоваться для 
хранения любого значения. То, какие именно данные находятся в конкретной
 строке, определяется с помощью типа MIME, указанного для нее. 
Универсальные столбцы способны хранить до 15 различных секций с данными 
разного типа. При добавлении новых данных в таблицу Data, нужно указать 
объект класса RawContacts для каждого связанного набора данных.</li>
<li><b>RawContacts</b> - Начиная с версии Android 2.0 пользователи могут вносить несколько контактных учетных записей (например, Gmail, Facebook 
и т. д.). Каждая строка в таблице RawContacts определяет учетную запись, с которой будут ассоциироваться данные из таблицы Data.</li>
<li><b>Contacts</b> - Эта таблица объединяет все строки из RawContacts, которые относятся к одному и тому же человеку.</li>
</ul>

<p>Обычно используют таблицу Data для добавления, удаления или изменения
 данных, относящихся к существующим учетным записям, RawContacts — для 
создания и управления самими учетными записями, Contacts и Data — для 
получения доступа к базе данных и извлечения информации о контактах.</p>

<h2 class="text-warning">Список контент-провайдеров</h2>

<ul>
<li>ContactsContract.CommonDataKinds.CommonColumns - For subclassing databases</li>
<li>ContactsContract.ContactsColumns - Contact main information</li>
<li>ContactsContract.ContactOptionsColumns - Contact options</li>
<li>ContactsContract.ContactStatusColumns - Contact status</li>
<li>ContactsContract.PhoneLookupColumns - Phone numbers</li>
<li>ContactsContract.GroupsColumns - Group definitions</li>
<li>ContactsContract.PresenceColumns - IM presences</li>
<li>ContactsContract.SettingsColumns - Account settings</li>
<li>ContactsContract.StatusColumns - IM visibility</li>
</ul>

<h2 class="text-warning" id="sample">Получаем электронные адреса через приложение Контакты</h2>

<p>Первое, что нужно сразу сделать при работе с контактами, это установить необходимое разрешение в манифесте:</p>

<pre><code class="xml">
&lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;
</code></pre>

<p>Перед разработкой примера, который будет открывать системное 
приложение Контакты и получать из него электронный адрес выбранного 
пользователя, нужно будет добавить несколько контактов с электронными 
адресами. Это можно сделать и в эмуляторе.</p>

<p>Для работы нам понадобится кнопка для вызова программы Контакты и 
текстовое поле, в которое поместим электронный адрес выбранного 
контакта.</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;EditText
        android:id="@+id/invite_email"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_toLeftOf="@+id/contact_picker"
        android:inputType="textEmailAddress" /&gt;

    &lt;Button
        android:id="@+id/contact_picker"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentRight="true"
        android:onClick="doLaunchContactPicker"
        android:text="Выбрать контакт" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Для кнопки в атрибуте <b>onClick</b> мы определили метод <b>doLaunchContactPicker()</b>, который выглядит следующим образом:</p>

<pre><code class="java">
public void doLaunchContactPicker(View view) {
    Intent contactPickerIntent = new Intent(Intent.ACTION_PICK,
            Contacts.CONTENT_URI);
    startActivityForResult(contactPickerIntent, CONTACT_PICKER_RESULT);
}
</code></pre>

<p>Мы создали намерение с параметрами <b>Intent.ACTION_PICK</b> и <b>Contacts.CONTENT_URI</b>. Убедитесь, что в секции imports прописан <b>import android.provider.ContactsContract.Contacts</b>, а не устаревший класс <b>android.provider.Contacts</b>.</p>

<p>Если сейчас запустить проект и нажать на кнопку, то откроется 
программа Контакты, но информация выбранного контакта не попадёт обратно
 в нашу программу, так как мы не написали кода, который принимает 
результат. Необходимо написать метод <b>onActivityResult()</b>, который возьмёт на себя обработку возвращаемой информации.</p>

<pre><code class="java">
private static final int CONTACT_PICKER_RESULT = 1001;
String DEBUG_TAG = "Contact";
EditText emailEntry;
	
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	    if (resultCode == RESULT_OK) {
	        switch (requestCode) {
	        case CONTACT_PICKER_RESULT:
	            Cursor cursor = null;
	            String email = "";
	            try {
	            	
	                Uri result = data.getData();
	                Log.v(DEBUG_TAG, "Что содержится в Uri: "
	                        + result.toString());

	                // получим идентфикатор контакста из Uri
	                String id = result.getLastPathSegment();
	                
	                // query for everything email
	                cursor = getContentResolver().query(Email.CONTENT_URI,
	                        null, Email.CONTACT_ID + "=?", new String[] { id },
	                        null);

	                int emailIdx = cursor.getColumnIndex(Email.DATA);

	                // получим электронный адрес
					if (cursor.moveToFirst()) {
						email = cursor.getString(emailIdx);
						Log.v(DEBUG_TAG, "Получаем адрес почты: " + email);
					} else {
						Log.w(DEBUG_TAG, "Нет результатов");
					}
				} catch (Exception e) {
					Log.e(DEBUG_TAG, "Не получилось получить данные об адресе", e);
	            } finally {
	                if (cursor != null) {
	                    cursor.close();
	                }
	                emailEntry.setText(email);
	                
	                if (email.length() == 0) {
	                    Toast.makeText(this, "Не найден email для данного контакта.",
	                            Toast.LENGTH_LONG).show();
	                }
	            }
	            break;
	        }
	    } else {
	        Log.w(DEBUG_TAG, "Внимание: Activity не вернула значений для обработки");
	    }
	}
}
</code></pre>

<p>Мы задали переменную <b>CONTACT_PICKER_RESULT = 1001</b> и ждём его 
появления при закрытии Контактов. В успешном случае нас интересует 
информация, которая находится в третьем параметре метода <b>Intent data</b>. Прежде всего, нам нужно получить Uri, который представляет собой адрес, похожий на адрес сайта, например, <i>content://com.android.contacts/contacts/lookup/0r1-5C8ECEB4425A6C/2</i></p>

<p>В этой длинной и страшной строке нас интересует последний сегмент, а 
именно, число 2, которое является идентификатором выбранного 
пользователя. Идентификатор извлекается через метод <b>getLastPathSegment()</b>.</p>

<p>Имея идентификатор, мы получаем доступ ко всей информации - адрес 
почты, телефон, имя и т.д. Например, для получения адреса электронной 
почты, нужно составить специальный запрос <b>getContentResolver().query</b>.</p>

<p>В нашем примере мы берём первый попавший электронный адрес и 
возвращаем его в программу. Нужно помнить, что у пользователя может быть
 несколько адресов и нужно написать дополнительный код для выбора 
нужного адреса.</p>

<p>А полученный адрес мы выводим в текстовое поле. На этом наш пример можно считать законченным.</p>

<p>По аналогии можно получить телефонные номера. <a href="http://android-er.blogspot.ru/2012/11/get-phone-number-from-contacts-database.html">Пример, взятый с сайта:</a></p>

<pre><code class="java">
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    // TODO Auto-generated method stub
    if(resultCode == RESULT_OK){
        if(requestCode == RQS_PICKCONTACT){
            Uri returnUri = data.getData();
            Cursor cursor = getContentResolver().query(returnUri, null, null, null, null);
    
            if(cursor.moveToNext()){
                int columnIndex_ID = cursor.getColumnIndex(ContactsContract.Contacts._ID);
                String contactID = cursor.getString(columnIndex_ID);
     
                int columnIndex_HASPHONENUMBER = cursor.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER);
                String stringHasPhoneNumber = cursor.getString(columnIndex_HASPHONENUMBER);
     
                if(stringHasPhoneNumber.equalsIgnoreCase("1")){
                    Cursor cursorNum = getContentResolver().query(
                    ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, 
                           ContactsContract.CommonDataKinds.Phone.CONTACT_ID + "=" + contactID, 
                           null, null);
      
                    //Get the first phone number
                    if(cursorNum.moveToNext()){
                        int columnIndex_number = cursorNum.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER);
                        String stringNumber = cursorNum.getString(columnIndex_number);
                        textPhone.setText(stringNumber);
                    }
                }else{
                    textPhone.setText("NO Phone Number");
                }
            }else{
                Toast.makeText(getApplicationContext(), "NO data!", Toast.LENGTH_LONG).show();
            }
        }
    }
}
</code></pre>

<h2 class="text-warning" id="getcontacts">Доступ к контактам напрямую</h2>

<p>Пример с запуском внешнего приложения Контакты для получения данных 
выглядит немного неуклюжим. Забудьте про него. Вы можете напрямую 
подключиться к базе контактов и извлечь всю необходимую информацию.</p>

<p>Создадим новый проект. Добавим необходимое разрешение, как в 
предыдущем примере. На всякий случай, если у вас слишком много данных в 
телефоне, добавим компонент ScrollView:</p>

<pre><code class="java">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity" 
    android:orientation="vertical"&gt;

    &lt;Button
        android:id="@+id/buttonGetContacts"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:onClick="onClick"
        android:text="Button" /&gt;
 
    &lt;ScrollView 
        android:layout_width="match_parent"
        android:layout_height="wrap_content" &gt;
        &lt;TextView
        android:id="@+id/contacts"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;
    &lt;/ScrollView&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Извлекать данные будем с помощью нового класса <b>CursorLoader</b>, который появился в API 11. Поправьте в манифесте минимальную версию SDK в случае необходимости.</p>

<pre><code class="java">
// Если этот код работает, его написал Александр Климов,
// а если нет, то не знаю, кто его писал.
package ru.alexanderklimov.contactsdemo;

import ...

public class ContactActivity extends Activity {

	TextView textContacts;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_contact);

		textContacts = (TextView) findViewById(R.id.contacts);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_contact, menu);
		return true;
	}

	public void onClick(View v) {
		Uri queryUri = ContactsContract.Contacts.CONTENT_URI;
		String[] projection = new String[] { ContactsContract.Contacts._ID,
				ContactsContract.Contacts.DISPLAY_NAME };
		String selection = ContactsContract.Contacts.DISPLAY_NAME
				+ " IS NOT NULL";

		CursorLoader cursorLoader = new CursorLoader(this, queryUri,
				projection, selection, null, null);

		Cursor cursor = cursorLoader.loadInBackground();

		int columnIndex_ID = cursor.getColumnIndex(Contacts._ID);
		int columnIndex_DISPLAYNAME = cursor
				.getColumnIndex(Contacts.DISPLAY_NAME);

		String myContacts = "Мои контакты:\n";

		while (cursor.moveToNext()) {
			int id = cursor.getInt(columnIndex_ID);
			String displayName = cursor.getString(columnIndex_DISPLAYNAME);
			myContacts += String.valueOf(id) + " : " + displayName + "\n";
		}

		textContacts.setText(myContacts);
	}
}
</code></pre>

<p>В данном примере нас интересует идентификатор контакта (Contacts._ID) и его имя (DISPLAY_NAME).</p>

<p><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/contact1.png" alt="Контакты" height="400" width="240"></p>

<h3 class="text-warning">Только с телефонными номерами</h3>

<p>Если вам нужен список контактов, у которых есть телефонные номера, то достаточно поменять одну строчку кода:</p>

<pre><code class="java">
<del>String selection = ContactsContract.Contacts.DISPLAY_NAME + " IS NOT NULL";</del>
String selection = ContactsContract.Contacts.HAS_PHONE_NUMBER + "=1";
</code></pre>

<h3 class="text-warning">Ищем контакты по шаблону</h3>

<p>Если вы забыли имя контакта, но хоть что-то помните, то можно задать шаблон для поиска.</p>

<pre><code class="java">
String constraint = "ик";
String selection = ContactsContract.Contacts.DISPLAY_NAME + " LIKE '%"
		+ constraint + "%'";
</code></pre>

<p>В результате такого отбора в списке останутся Барсик, Рыжик, Мурзик. Правда, туда же могут затесаться Тузик или Пол<b>ик</b>линика, но тут уж ничего не поделаешь. Имена котов надо запоминать полностью, а не по окончанию.</p>

<h3 class="text-warning">Объединяем запросы</h3>

<p>Нужен список контактов с телефонами, чьи имена содержат "зик"?</p>

<pre><code class="java">
String constraint = "зик";
String selection = ContactsContract.Contacts.HAS_PHONE_NUMBER + "=1"
		+ " AND " + ContactsContract.Contacts.DISPLAY_NAME + " LIKE '%"
		+ constraint + "%'";
</code></pre>

<p>Мурзик точно попадёт в этот список. Инфа 146%.</p>

<h3 class="text-warning">Выводим контакты в список</h3>

<p>Вероятно идея выводить список контактов в TextView была не самой 
удачной. Исправим ситуацию. Удалим с экрана TextView и добавим компонент
 ListView.</p>

<p>Добавим в класс ссылку на него:</p>

<pre><code class="java">
ListView listContacts;

// в метод onCreate()
listContacts = (ListView) findViewById(R.id.conactlist);

public void onClick(View v) {
	Uri queryUri = ContactsContract.Contacts.CONTENT_URI;
	String[] projection = new String[] { ContactsContract.Contacts._ID,
			ContactsContract.Contacts.DISPLAY_NAME };

	String constraint = "ик";
	String selection = ContactsContract.Contacts.HAS_PHONE_NUMBER + "=1"
			+ " AND " + ContactsContract.Contacts.DISPLAY_NAME + " LIKE '%"
			+ constraint + "%'";

	CursorLoader cursorLoader = new CursorLoader(this, queryUri,
			projection, selection, null, null);

	Cursor cursor = cursorLoader.loadInBackground();

	String[] from = { ContactsContract.Contacts.DISPLAY_NAME };
	int[] to = { android.R.id.text1 };

	ListAdapter adapter = new SimpleCursorAdapter(this,
			android.R.layout.simple_list_item_1, cursor, from, to,
			CursorAdapter.FLAG_REGISTER_CONTENT_OBSERVER);
	listContacts.setAdapter(adapter);
}
</code></pre>

<p>Теперь для вывода контактов, у которых встречается "зик", будем использовать адаптер <b>SimpleCursorAdapter</b>, который работает с курсором и расчитан на вывод данных в списке.</p>

<p><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/contact2.png" alt="Контакты" height="400" width="240"></p>

<h3 class="text-warning">Обработка нажатий элементов списка</h3>

<p>Программа стала сложной. Осталось добавить обработку нажатий на 
отдельных элементах списка для вывода дополнительной информации. 
Перенесём код из обработчика кнопки в метод onCreate(), чтобы получать 
список контактов сразу при загрузке активности. В самом коде внесём 
небольшие изменения.</p>

<details>
    <summary>Показать код (щелкните мышкой)</summary>
<pre><code class="java">
// Если этот код работает, его написал Александр Климов,
// а если нет, то не знаю, кто его писал.
package ru.alexanderklimov.contactsdemo;

import ...

public class ContactActivity extends Activity {

	ListView listContacts;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_contact);

		listContacts = (ListView) findViewById(R.id.conactlist);

		Uri queryUri = ContactsContract.Contacts.CONTENT_URI;

		String[] projection = new String[] { ContactsContract.Contacts._ID,
				ContactsContract.Contacts.DISPLAY_NAME,
				ContactsContract.Contacts.HAS_PHONE_NUMBER,
				ContactsContract.Contacts.LOOKUP_KEY };

		String selection = ContactsContract.Contacts.DISPLAY_NAME
				+ " IS NOT NULL";

		CursorLoader cursorLoader = new CursorLoader(this, queryUri,
				projection, selection, null, null);

		Cursor cursor = cursorLoader.loadInBackground();

		String[] from = { ContactsContract.Contacts.DISPLAY_NAME };
		int[] to = { android.R.id.text1 };

		ListAdapter adapter = new SimpleCursorAdapter(this,
				android.R.layout.simple_list_item_1, cursor, from, to,
				CursorAdapter.FLAG_REGISTER_CONTENT_OBSERVER);
		listContacts.setAdapter(adapter);

		listContacts.setOnItemClickListener(myOnItemClickListener);
	}

	OnItemClickListener myOnItemClickListener = new OnItemClickListener() {

		@Override
		public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,
				long id) {
			Cursor cursor = (Cursor) parent.getItemAtPosition(position);
			int item_ID = cursor.getInt(cursor
					.getColumnIndex(ContactsContract.Contacts._ID));
			String item_DisplayName = cursor.getString(cursor
					.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
			int item_HasPhoneNumber = cursor
					.getInt(cursor
							.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));

			String item_LookUp = cursor.getString(cursor
					.getColumnIndex(ContactsContract.Contacts.LOOKUP_KEY));

			String item_PhoneNumber = "";
			if (item_HasPhoneNumber &gt; 0) {
				item_PhoneNumber = "С телефонным номером";

			} else {
				item_PhoneNumber = "Без телефонного номера";
			}

			String item = String.valueOf(item_ID) + ": " + item_DisplayName
					+ "\n" + item_PhoneNumber + "\nLOOKUP_KEY: " + item_LookUp;

			Toast.makeText(getApplicationContext(), item, Toast.LENGTH_LONG)
					.show();
		}
	};
}
</code></pre>	
</details>

<h3 class="text-warning">Список контактов и их электронные адреса</h3>

<p>Выводим список всех контактов, а при выборе нужного контакта выводим его электронные адреса:</p>

<details>
    <summary>Показать код (щелкните мышкой)</summary>
	
<pre><code class="java">
// Если этот код работает, его написал Александр Климов,
// а если нет, то не знаю, кто его писал.
package ru.alexanderklimov.contactsdemo;

import ...

public class ContactActivity extends Activity {

	ListView listContacts;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_contact);

		listContacts = (ListView) findViewById(R.id.conactlist);

		Uri queryUri = ContactsContract.Contacts.CONTENT_URI;

		// Получим все контакты
		CursorLoader cursorLoader = new CursorLoader(this, queryUri, null,
				null, null, null);

		Cursor cursor = cursorLoader.loadInBackground();

		String[] from = { ContactsContract.Contacts.DISPLAY_NAME };
		int[] to = { android.R.id.text1 };

		ListAdapter adapter = new SimpleCursorAdapter(this,
				android.R.layout.simple_list_item_1, cursor, from, to,
				CursorAdapter.FLAG_REGISTER_CONTENT_OBSERVER);
		listContacts.setAdapter(adapter);

		listContacts.setOnItemClickListener(myOnItemClickListener);
	}

	OnItemClickListener myOnItemClickListener = new OnItemClickListener() {

		@Override
		public void onItemClick(AdapterView<!--?--> parent, View view, int position,
				long id) {
			Cursor cursor = (Cursor) parent.getItemAtPosition(position);

			String item_LookUp = cursor.getString(cursor
					.getColumnIndex(ContactsContract.Contacts.LOOKUP_KEY));

			Uri lookUpUri = ContactsContract.CommonDataKinds.Email.CONTENT_URI;

			String[] projection = new String[] { ContactsContract.CommonDataKinds.Email.DATA };

			String selection = ContactsContract.CommonDataKinds.Email.LOOKUP_KEY
					+ "=?";
			String[] selectionArgs = new String[] { item_LookUp };

			CursorLoader cursorLoader_LookUp = new CursorLoader(
					ContactActivity.this, lookUpUri, projection, selection,
					selectionArgs, null);
			Cursor cursor_LookUp = cursorLoader_LookUp.loadInBackground();

			int lookUpCol_Data = cursor_LookUp
					.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA);

			String stringEmail = item_LookUp + "
";
			while (cursor_LookUp.moveToNext()) {

				String stringData = cursor_LookUp.getString(lookUpCol_Data);
				stringEmail += stringData + "
";
			}

			Toast.makeText(getApplicationContext(), stringEmail,
					Toast.LENGTH_LONG).show();
		}
	};
}
</code></pre>
	
</details>

<h2 class="text-warning">Контакты. Ещё один пример</h2>

<p>Для закрепления материала напишем ещё один пример работы с 
контактами. Создадим новый проект. Добавим разрещения в манифест для 
чтения и записи в базу контактов:</p>

<pre><code class="java">
&lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_CONTACTS" /&gt;
</code></pre>

<p>Минимальную версию установите в <b>android:minSdkVersion="11"</b>, так как будем использовать новые функции для работы с контактами.</p>

<p>База данных контактов состоит из нескольких таблиц. Одна из таблиц выглядит следующим образом:</p>

<table>
<tbody><tr>
<th>_id</th><th>_COUNT</th><th>DISPLAY_NAME_PRIMARY</th><th>PHONE</th></tr>
<tr>
<td>44</td><td>4</td><td>Васька</td><td>212 555 5555</td></tr>
<tr><td>13</td><td>4</td><td>Рыжик</td><td>425 555 6666</td></tr>
<tr><td>53</td><td>4</td><td>Барсик</td><td>201 555 7777</td></tr>
<tr><td>27</td><td>4</td><td>Мурзик</td><td>213-555-8888</td></tr>
</tbody></table>

<p>Как видите, таблица состоит из четырёх колонок с говорящими именами, к которым можно обратиться программно, например как <b>ContactsContract.Contacts.DISPLAY_NAME_PRIMARY</b>.</p>

<p>Имена колонок, которые начинаются с символа подчёркивания (_ID и 
_COUNT), контролируются самой Android и поля в этих колонках доступны 
вам только для чтения.</p>

<p>Запустите эмулятор и откройте приложение Контакты. Добавьте несколько
 контактов (можете взять данные из моей таблицы). Чтобы не путать ваши 
реальные контакты с вымышленными, выбирайте локальную версию контактов в
 эмуляторе.</p>

<p>После того, как вы добавили несколько записей, они попали в базу 
данных и приложение Контакты нам уже больше не нужно. Закрывайте его. 
Начнём разрабатывать своё приложение.</p>

<p>Для начала посмотрим, как просматривать контакты. Добавьте на экран активности кнопку и напишите код:</p>

<pre><code class="java">
@Override
protected void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_main);

	Button queryButton = (Button) findViewById(R.id.button1);
	queryButton.setOnClickListener(new OnClickListener() {
		public void onClick(View v) {
			queryContact();
		}
	});
}

private void queryContact() {
	Cursor nameCursor = getContentResolver().query(
			ContactsContract.Contacts.CONTENT_URI, null, null, null, null);
	while (nameCursor.moveToNext()) {
		// Имя контакта
		String contactName = nameCursor
				.getString(nameCursor
						.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME_PRIMARY));
		Toast.makeText(this, contactName, Toast.LENGTH_SHORT).show();
	}
	nameCursor.close();
}
</code></pre>

<p>Помните, я говорил, что в таблице есть колонка <b>DISPLAY_NAME_PRIMARY</b>?
 C помощью курсора мы делаем запрос к таблице и извлекаем текст из 
нужной колонки, который выводим в всплывающем сообщении. Так как таблица
 у нас небольшая, то у нас появится четыре сообщения с именами 
контактов.</p>

<p>Теперь попробуем добавить новый контакт в базу <b>ContactsContract.Contacts</b>. На экран активности добавляем новую кнопку <b>Добавить контакт</b> и пишем код:</p>

<pre><code class="java">
Button addButton = (Button) findViewById(R.id.button2);
addButton.setOnClickListener(new OnClickListener() {
	public void onClick(View arg0) {
		addContact("Кошка Мурка");
	}
});

private void addContact(String newName) {
	ContentValues myContact = new ContentValues();
	myContact.put(RawContacts.ACCOUNT_NAME, newName);
	myContact.put(RawContacts.ACCOUNT_TYPE, newName);
	Uri addUri = getContentResolver().insert(RawContacts.CONTENT_URI,
			myContact);
	long rawContactId = ContentUris.parseId(addUri);
	myContact.clear();
	myContact.put(Data.RAW_CONTACT_ID, rawContactId);
	myContact.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);
	myContact.put(StructuredName.DISPLAY_NAME, newName);
	getContentResolver().insert(Data.CONTENT_URI, myContact);
	Toast.makeText(this, "Добавлен контакт: " + newName, Toast.LENGTH_SHORT).show();
}
</code></pre>

<p>Для добавления мы используем объект класса <b>ContentValues</b>, чтобы указать таблицу, колонку и данные для вставки, которые требует контент-провайдер.</p>

<p>С помощью метода <b>put()</b> мы загружаем объект ContentValues в 
таблицу (RawContacts), в колонки ACCOUNT_NAME и ACCOUNT_TYPE. Формируем 
нужный адрес для контент-провайдера и вставляем новую запись в базу.</p>

<p>Запустите проект и нажмите кнопку добавления контакта. В успешном 
случае вы увидите всплывающее сообщение. Теперь нажмите первую кнопку, 
которая выводила список всех контактов, чтобы убедиться, что новое имя 
тоже отображается. Также вы можете запустить приложение Контакты и 
увидеть новый контакт в этой программе.</p>

<p>Откровенно говоря, структура контактов мне показалась сложной. Очень 
много данных, которые нужно запоминать. Поэтому проще пользоваться 
готовым кодом. Именно для этой цели и был написан пример.</p>




</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/fastbutton.htm" name="I0_1378295612347" id="I0_1378295612347" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/postmessageRelay.htm" id="oauth2relay857336032" name="oauth2relay857336032"></iframe><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/jquery.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%9A%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%20%20%D0%95%D1%81%D1%82%D1%8C%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%21_files/bootstrap-typeahead.js"></script>

</body></html>