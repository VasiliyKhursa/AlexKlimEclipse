<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Работаем с Wi-Fi</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="modal" href="#myModal" class="navbar-link">Гость</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="http://developer.alexanderklimov.ru/android/secret/enter.php" id="drop3" role="button">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory.php">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>			
<p><a href="http://developer.alexanderklimov.ru/android/secret/secret.php?do=logout">Выйти из закрытой зоны</a></p>
<h1 class="text-warning">Работаем с Wi-Fi</h1>

<p>
<a href="#ip">Получаем IP-адрес устройства</a><br>
<a href="#enabled">Включить/выключить Wi-Fi-соединение</a><br>
<a href="#settings">Управление настройками Wi-Fi-соединениями</a><br>
<a href="#statechange">Отслеживание состояния соединения</a> (BroadcastReceiver)<br>
<a href="#connectioninfo">Получение информации об активном соединении</a><br>
<a href="#scanwifi">Обнаружение точек доступа</a><br>
<a href="#configurations">Создание конфигураций для сети Wi-Fi</a><br>
</p>

<p>Приложения, использующие Wi-Fi-соединение, могут "общаться" с другими
 компьютерами, телефонами и другими устройствами через точку доступа. 
Также возможно подключение двух клиентов в режиме Ad-hoc, когда точка 
доступа не используется, а устройства соединяются напрямую через свои 
сетевые адаптеры.</p>

<p>Для работы с Wi-Fi в Android есть пакет <b>android.net.wifi</b>. В состав пакета входит класс <b>WifiManager</b>, обеспечивающий базовую функциональность для управления беспроводными соединениями из вашего приложения.</p>

<p>Требование к устройству</p>

<pre><code class="java">
&lt;uses-feature android:name="android.hardware.wifi"/&gt;
</code></pre>

<p>Эмулятор практически не поддерживает работу с Wi-Fi, поэтому примеры необходимо проверять на реальном устройстве.</p>


<h2 class="text-warning">Менеджер Wi-Fi-соединений</h2>

<p>Объект <b>WifiManager</b> создаётся путём вызова метода <b>getSystemService()</b>, в который должна быть передана константа <b>Context.WIFI_SERVICE</b>:</p>

<pre><code class="java">
WifiManager wifiManager = (WifiManager) getSystemService(WIFI_SERVICE);
</code></pre>

<p>Далее созданный объект можно использовать для подключения и 
конфигурации Wi-Fi-сети, сканирования точек доступа и других операций.</p>

<p>Для работы с Wi-Fi необходимо установить разрешения <b>ACCESS_WIFI_STATE</b> (разрешение получать информацию о Wi-Fi-соединении) и/или <b>CHANGE_WIFI_STATE</b>
 (разрешение на изменение состояния Wi-Fi-соединения). Обычно также 
используется подключение к интернету, поэтому не забываем и разрешение 
на интернет:</p>

<pre><code class="xml">
&lt;uses-permission android:name="android.permission.INTERNET"/&gt;
&lt;uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/&gt;
&lt;uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/&gt;
</code></pre>

<h2 class="text-warning" id="ip">Получаем IP-адрес устройства</h2>

<p>При подключении к Wi-Fi, устройство получает IP-адрес, который можно получить следующим образом:</p>

<pre><code class="java">
package ru.alexanderklimov.wifi;

import android.app.Activity;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.widget.TextView;

public class WiFiActivity extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		TextView tv = (TextView) findViewById(R.id.textView1);
		tv.setText(getDeviceCurrentIPAddress()); // получаем IP-адрес
	}

	public String getDeviceCurrentIPAddress() {
		WifiManager wifiManager = (WifiManager) getSystemService(WIFI_SERVICE);
		int ip = wifiManager.getConnectionInfo().getIpAddress();

		String ipString = String.format("%d.%d.%d.%d", (ip &amp; 0xff),
				(ip &gt;&gt; 8 &amp; 0xff), (ip &gt;&gt; 16 &amp; 0xff), (ip &gt;&gt; 24 &amp; 0xff));
		return ipString;
	}
}
</code></pre>

<p>Метод <b>getIpAddress()</b> возвращает число типа Integer, который 
необходимо конвертировать в удобный привычный вид. Поэтому приходится 
писать дополнительный код для обработки числа, чтобы получить строку 
адреса с точками.</p>

<h2 class="text-warning" id="enabled">Включить/выключить Wi-Fi-соединение</h2>

<p>Для управления состоянием соединения используется метод <b>setWifiEnabled()</b> с параметрами <i>true</i> или <i>false</i>. А получить текущее состояние Wi-Fi можно с помощью методов <b>getWifiState()</b> или <b>isWifiEnabled()</b></p>

<pre><code class="java">
WifiManager wifi = (WifiManager)getBaseContext().getSystemService(Context.WIFI_SERVICE);

if (!wifi.isWifiEnabled())
  if (wifi.getWifiState() != WifiManager.WIFI_STATE_ENABLING)
    wifi.setWifiEnabled(true); // включаем Wi-Fi
</code></pre>

<h2 class="text-warning" id="settings">Управление настройками Wi-Fi-соединениями</h2>

<p>Настройками можно управлять через системное окно настроек или программно.</p>

<h3 class="text-warning">Окно настроек</h3>

<p>В Android есть окно настроек Wi-Fi-соединениями, к которому можно получить доступ через класс <b>android.provider.Settings</b>. Для вызова настроек определены три константы:</p>
<ul>
<li><b>ACTION_WIFI_SETTINGS</b> - отображение окна настроек для включения или выключения Wi-Fi-соединения, добавление новых соединений</li>
<li><b>ACTION_WIFI_IP_SETTINGS</b> - отображение окна настроек для IP-адреса, шлюза</li>
<li><b>ACTION_WIRELESS_SETTINGS</b> - общее окно настроек беспроводных соединений: Wi-Fi, Bluetooth и др.</li>
</ul>

<p>Вызываем окно настроек:</p>

<pre><code class="java">
Intent intent = new Intent(Settings.ACTION_WIFI_SETTINGS);
startActivity(intent);
</code></pre>

<h3 class="text-warning">Программное управление настройками</h3>

<p>Вы можете использовать WifiManager для управления настройками 
установленного подключения и выбирать, с какой сетью устанавливать 
соединение. Подключившись к сети, можно узнать дополнительную информацию
 и ее настройки.</p>

<p>Получите список текущих сетевых конфигураций с помощью метода <b>getConfiguredNetworks()</b>.
 Результат будет состоять из объектов типа  WifiConfiguration, 
включающих идентификатор сети, SSID и другие подробности о каждой 
конфигурации.</p>

<p>Чтобы использовать конкретную конфигурацию сети, вызовите метод <b>enableNetwork()</b>, передав ему сетевой идентификатор и значение <i>true</i> для 
параметра <b>disableAllOthers</b>:</p>

<pre><code class="java">
// Получите список доступных конфигураций
List&lt;WifiConfiguration&gt; configurations = wifi.getConfiguredNetworks();
// Получите идентификатор для первой сети из списка.
if (configurations.size() &gt; 0) {
    int netID = configurations.get(0).networkId;
    // Подключитесь к этой сети.
    boolean disableAllOthers = true;
    wifi.enableNetwork(netID, disableAllOtherstrue);
}
</code></pre>

<h2 class="text-warning" id="statechange">Отслеживание состояния соединения (BroadcastReceiver)</h2>

<p>При изменении состояния подключения к сети Wi-Fi WifiManager 
генерирует объекты Intent с помощью одной из констант класса 
WifiManager:</p>

<ul>
<li><b>WIFI_STATE_CHANGED_ACTION</b>. Сигнализирует, что аппаратный 
статус Wi-Fi изменен, оперируя такими состояниями, как включён, 
выключается, выключен, неизвестно. Намерение содержит два дополнительных
 параметра с ключами EXTRA_WIFI_STATE и EXTRA_PREVIOUS_STATE, которые 
предоставляют текущее и предыдущее 
состояние соответственно.</li>
<li><b>SUPPLICANT_CONNECTION_CHANGE_ACTION</b>. Это Намерение передается
 каждый раз, когда меняется состояние соединения с активной точкой 
доступа. Оно срабатывает, если установлено новое соединение или уже 
существующее разорвано. В первом случае дополнительный параметр 
EXTRA_NEW_STATE будет иметь значение 
true.</li>
<li><b>NETWORK_STATE_CHANGED_ACTION</b>. Срабатывает при изменении 
состояния подключения к сети Wi-Fi. Это Намерение содержит два 
дополнительных параметра: первый, EXTRA_NETWORK_INFO, включает объект 
NetworkInfo, описывающий текущее состояние соединения, второй, 
EXTRA_BSSID, передает идентификатор BSSID, принадлежащий точке доступа, к
 которой вы подключены.</li>
<li><b>RSSI_CHANGED_ACTION</b>. Вы можете отслеживать текущий уровень 
сигнала в сети Wi-Fi, к которой подключены, используя Намерение с 
действием RSSI_CHANGED_ACTION. Оно содержит дополнительный целочисленный
 параметр EXTRA_NEW_RSSI с показателем уровня сигнала. Чтобы 
воспользоваться этим значением, необходимо конвертировать его с учетом 
указанной шкалы, вызвав статический метод calculateSignalLevel из 
объекта WifiManager.</li>
</ul>

<h3 class="text-warning">WIFI_STATE_CHANGED_ACTION</h3>

<p>Рассмотрим пример отслеживания состоятния Wi-Fi. Нас интересует константа <b>WIFI_STATE_CHANGED_ACTION</b>, которая указывает на изменениес состояния Wi-Fi-соединения.</p>

<p>Пример очень прост. Добавим на форму текстовую метку и в ней будем 
выводить текущее состояние соединения. Стоит обратить внимание, что сама
 установка соединения и сброса может занимать значительное время, 
поэтому существуют такие константы, как WIFI_STATE_DISABLING и 
WIFI_STATE_ENABLING, указывающие на промежуточное состояние.</p>

<pre><code class="java">
package ru.alexanderklimov.wifi;

import ...

public class WiFiActivity extends Activity {
	
	TextView tv;
	
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		tv = (TextView) findViewById(R.id.textView1);

		this.registerReceiver(this.WifiStateChangedReceiver, new IntentFilter(
				WifiManager.WIFI_STATE_CHANGED_ACTION));
	}

	private BroadcastReceiver WifiStateChangedReceiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context context, Intent intent) {
			// TODO Auto-generated method stub

			int extraWifiState = intent.getIntExtra(
					WifiManager.EXTRA_WIFI_STATE,
					WifiManager.WIFI_STATE_UNKNOWN);

			switch (extraWifiState) {
			case WifiManager.WIFI_STATE_DISABLED:
				tv.setText("WIFI недоступен");
				break;
			case WifiManager.WIFI_STATE_DISABLING:
				tv.setText("WIFI отключается");
				break;
			case WifiManager.WIFI_STATE_ENABLED:
				tv.setText("WIFI доступен");
				break;
			case WifiManager.WIFI_STATE_ENABLING:
				tv.setText("WIFI включается");
				break;
			case WifiManager.WIFI_STATE_UNKNOWN:
				tv.setText("WIFI: неизвестное состояние");
				break;
			}
		}
	};
}
</code></pre>

<h3 class="text-warning">RSSI_CHANGED_ACTION</h3>

<p>Рассмотрим ещё один пример отслеживания уровня сигнала. Заодно узнаем и другие параметры.</p>

<p>Разметка для активности:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" &gt;

    &lt;TextView
        android:id="@+id/Connected"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="My Wifi IP:" /&gt;

    &lt;TextView
        android:id="@+id/tvIP"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="SSID:" /&gt;

    &lt;TextView
        android:id="@+id/tvSsid"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="BSSID:" /&gt;

    &lt;TextView
        android:id="@+id/tvBssid"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="Speed:" /&gt;

    &lt;TextView
        android:id="@+id/tvSpeed"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="Rssi:" /&gt;

    &lt;TextView
        android:id="@+id/tvRssi"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="MAC:" /&gt;

    &lt;TextView
        android:id="@+id/tvMac"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Код:</p>

<pre><code class="java">
package ru.alexanderklimov.wifi;

import ...

public class MainActivity extends Activity {

	TextView tvConnected, tvIP, tvSsid, tvBssid, tvMac, tvSpeed, textRssi;

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_main);

		tvConnected = (TextView) findViewById(R.id.Connected);
		tvIP = (TextView) findViewById(R.id.tvIP);
		tvSsid = (TextView) findViewById(R.id.tvSsid);
		tvBssid = (TextView) findViewById(R.id.tvBssid);
		tvMac = (TextView) findViewById(R.id.tvMac);
		tvSpeed = (TextView) findViewById(R.id.tvSpeed);
		textRssi = (TextView) findViewById(R.id.tvRssi);

		displayWifiState();

		this.registerReceiver(this.myWifiReceiver, new IntentFilter(
				ConnectivityManager.CONNECTIVITY_ACTION));

		this.registerReceiver(this.myRssiChangeReceiver, new IntentFilter(
				WifiManager.RSSI_CHANGED_ACTION));

	}

	private BroadcastReceiver myRssiChangeReceiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context arg0, Intent arg1) {
			// TODO Auto-generated method stub
			int newRssi = arg1.getIntExtra(WifiManager.EXTRA_NEW_RSSI, 0);
			textRssi.setText(String.valueOf(newRssi));
		}
	};

	private BroadcastReceiver myWifiReceiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context arg0, Intent arg1) {
			// TODO Auto-generated method stub
			ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
			NetworkInfo networkInfo = cm.getActiveNetworkInfo();
			if (networkInfo.getType() == ConnectivityManager.TYPE_WIFI) {
				displayWifiState();
			}
		}
	};

	private void displayWifiState() {
		ConnectivityManager myConnManager = (ConnectivityManager) getSystemService(CONNECTIVITY_SERVICE);
		NetworkInfo myNetworkInfo = myConnManager
				.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
		WifiManager myWifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
		WifiInfo myWifiInfo = myWifiManager.getConnectionInfo();

		tvMac.setText(myWifiInfo.getMacAddress());

		if (myNetworkInfo.isConnected()) {
			int myIp = myWifiInfo.getIpAddress();

			tvConnected.setText("Есть соединение");

			int intMyIp3 = myIp / 0x1000000;
			int intMyIp3mod = myIp % 0x1000000;

			int intMyIp2 = intMyIp3mod / 0x10000;
			int intMyIp2mod = intMyIp3mod % 0x10000;

			int intMyIp1 = intMyIp2mod / 0x100;
			int intMyIp0 = intMyIp2mod % 0x100;

			tvIP.setText(String.valueOf(intMyIp0) + "."
					+ String.valueOf(intMyIp1) + "." + String.valueOf(intMyIp2)
					+ "." + String.valueOf(intMyIp3));

			tvSsid.setText(myWifiInfo.getSSID());
			tvBssid.setText(myWifiInfo.getBSSID());

			tvSpeed.setText(String.valueOf(myWifiInfo.getLinkSpeed()) + " "
					+ WifiInfo.LINK_SPEED_UNITS);
			textRssi.setText(String.valueOf(myWifiInfo.getRssi()));

		} else {
			tvConnected.setText("Нет соединения");
			tvIP.setText("---");
			tvSsid.setText("---");
			tvBssid.setText("---");
			tvSpeed.setText("---");
			textRssi.setText("---");
		}
	}
}
</code></pre>

<p>Также добавим разрешения в манифест:</p>

<pre class="code xml">&lt;uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
</pre>

<h2 class="text-warning" id="connectioninfo">Получение информации об активном соединении</h2>

<p>Чтобы получить информацию о статусе только что установленного активного сетевого соединения, используйте метод <b>getConnectionInfo()</b>
 из объекта WifiManager. Возвращаемый этим методом объект WifiInfo 
содержит идентификаторы SSID, BSSID, MAC- и IP-адрес текущей точки 
доступа, а также скорость соединения и уровень сигнала.</p>

<p>В следующем листинге демонстрируется процесс получения информации об активном соединении, работающем через Wi-Fi.</p>

<pre><code class="java">
WifiInfo info = wifi.getConnectionInfo();
if (info.getBSSID() != null) {
    int strength = WifiManager.calculateSignalLevel(info.getRssi(), 5);
    int speed = info.getLinkSpeed();
    String units = WifiInfo.LINK_SPEED_UNITS;
    String ssid = info.getSSID();
    String cSummary = String.format("Connected to %s at %s%s. Strength %s/5",
            ssid, speed, units, strength);
}
</code></pre>

<h2 class="text-warning" id="scanwifi">Обнаружение точек доступа</h2>

<p>Используйте метод <b>startScan()</b> для сканирования на наличие точек доступа. Намерение с действием <b>SCAN_RESULTS_AVAILABLE_ACTION</b> будет транслироваться в асинхронном режиме, объявляя о завершении сканирования и доступности результатов.</p>

<p>Вызовите метод <b>getScanResults()</b>, чтобы получить эти результаты в виде списка объектов типа <b>ScanResult</b>.
 Все они будут содержать информацию 
об обнаруженных точках доступа (скорость соединения, уровень сигнала, 
идентификатор SSID и поддерживаемые методы аутентификации).</p>

<p>В листинге показано, как инициировать обнаружение точек доступа, в 
ходе которого с помощью уведомлений типа Toast отображаются количество 
найденных точек и имя одной из них — той, у которой самый высокий 
уровень сигнала.</p>

<pre><code class="java">
// Зарегистрируйте объект BroadcastReceiver, отслеживающий результаты сканирования.
registerReceiver(new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        List&lt;ScanResult&gt; results = wifi.getScanResults();
        ScanResult bestSignal = null;
        
		for (ScanResult result : results) {
            if (bestSignal == null ||
                    WifiManager.compareSignalLevel(bestSignal.level,result.level)&lt;0)
            bestSignal = result;
        }
        String toastText = String.format("%s networks found. %s is the strongest.",
                results.size(), bestSignal.SSID);
        Toast.makeText(getApplicationContext(), toastText, Toast.LENGTH_LONG);
    }
}, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));

// Запустите процесс сканирования
wifi.startScan();
</code></pre>

<h2 class="text-warning" id="configurations">Создание конфигураций для сети Wi-Fi</h2>

<p>Чтобы подключиться к сети по Wi-Fi, необходимо создать и 
зарегистрировать для нее конфигурацию. Как правило, ваши пользователи 
делают это сами с помощью системных настроек для Wi-Fi. Но ничего не 
мешает добавить эту возможность в собственное приложение или даже 
полностью заменить стандартную Активность для управления конфигурацией 
Wi-Fi.</p>

<p>Сетевые конфигурации хранятся в виде объектов типа WifiConfiguration.
 Приведем список некоторых публичных полей, которые предоставляет этот 
класс:</p>

<ul>
<li>BSSID — идентификатор BSSID для точки доступа;</li>
<li>SSID — идентификатор SSID конкретной сети;</li>
<li>networkId — уникальный идентификатор, определяющий конфигурацию данной сети на текущем устройстве;</li>
<li>priority — приоритет сетевых конфигураций для сортировки списка точек доступа, к которым можно подключиться;</li>
<li>status — текущее состояние данного сетевого подключения; может иметь
 значение WifiConfiguration.Status.ENABLED, 
WifiConfiguration.Status.DISABLED или WifiConfiguration.Status.CURRENT.</li>
</ul>

<p>Объект WifiConfiguration также содержит список поддерживаемых методов
 аутентификации и ключи, использованные ранее для проверки подлинности 
при подключении к этой точке доступа.</p>

<p>Метод <b>addNetwork()</b> позволяет добавлять новую конфигурацию в текущий список. Аналогичным образом с помощью метода <b>updateNetwork()</b>
 вы 
можете обновить сетевую конфигурацию, передав в качестве параметра 
объект WifiConfiguration, содержащий идентификатор сети и значения, 
которые хотите изменить.</p>

<p>Можно воспользоваться методом <b>removeNetwork()</b> для удаления конфигурации, передав в качестве параметра идентификатор сети.</p>

<p>Чтобы сохранить любые изменения, внесенные в сетевые настройки, нужно вызвать метод <b>saveConfiguration()</b>.</p>

</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/fastbutton.htm" name="I0_1378022396909" id="I0_1378022396909" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/postmessageRelay.htm" id="oauth2relay645617355" name="oauth2relay645617355"></iframe><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/jquery.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D0%BC%20%D1%81%20Wi-Fi_files/bootstrap-typeahead.js"></script>

</body></html>