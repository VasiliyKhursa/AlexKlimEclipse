<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Создаём SMS-автоответчик</title>

<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory/">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Создаём SMS-автоответчик</h1>
<p>Четвёртый месяц обучения (закрытая зона)</p>


<p>

</p>

<p>Мы создадим спецприложение для работы с SMS, которое превратит ваше 
устройство в автоответчик, реагирующий на определённые сообщения. Как 
только на телефон поступит сообщение от друзей, в котором встречается 
слово <b>Meow</b>, то телефон автоматически отправит подготовленное 
сообщение. И вам не придётся каждый раз набирать эти слова вручную. 
Кроме того можно отправить сообщение вручную по щелчку кнопки</p>

<p>Также мы воспользуемся геолокационными сервисами, передавая информацию о том, где именно вы находитесь.</p>


<p>Данная статья основана на примере из книги <b>Android 2. Программирование приложений для планшетных компьютеров и смартфонов</b>.</p>

<p>Создадим новый проект SMSResponder.</p>

<p>Добавим в манифест необходимые полномочия:</p>

<pre><code class="xml">
&lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;
&lt;uses-permission android:name="android.permission.SEND_SMS" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
</code></pre>

<p>Теперь займёмся разметкой. Добавим элемент ListView для отображения 
списка людей, которые присылают вам сообщения с кодовым словом, и 
несколько кнопок для отправки ответных SMS.</p>

<pre><code class="java">
&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;TextView
        android:id="@+id/labelRequestList"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:text="Эти люди хотят знать, гладил ли ты кота" /&gt;

    &lt;LinearLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@+id/buttonLayout"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:orientation="vertical"
        android:padding="5dp" &gt;

        &lt;CheckBox
            android:id="@+id/checkboxSendLocation"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:text="Включить моё местоположение в ответ" /&gt;

        &lt;Button
            android:id="@+id/okButton"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:text="@string/respondAllClearText" /&gt;

        &lt;Button
            android:id="@+id/autoResponder"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:text="Настройка автоответчика" /&gt;
    &lt;/LinearLayout&gt;

    &lt;ListView
        android:id="@+id/myListView"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:layout_above="@id/buttonLayout"
        android:layout_below="@id/labelRequestList" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>Отредактируем файл <b>strings.xml</b>, добавив в него текст для 
каждой кнопки, а также сообщения по умолчанию, которые будут 
использоваться при ответе. Вам также необходимо задать текст для 
распознавания входящих сообщений, на которые нужно отвечать.</p>

<pre><code class="xml">
&lt;resources&gt;

    &lt;string name="app_name"&gt;SMS Responder&lt;/string&gt;
    &lt;string name="respondAllClearText"&gt;Me me me!&lt;/string&gt;
    &lt;string name="querystring"&gt;meow&lt;/string&gt;
    &lt;string name="menu_settings"&gt;Settings&lt;/string&gt;
    &lt;string name="title_activity_main"&gt;SMS Responder&lt;/string&gt;
    &lt;string name="user_preferences"&gt;ru.alexanderklimov.smsresponder.preferences&lt;/string&gt;
    &lt;string name="includeLocationPref"&gt;PREF_INCLUDE_LOC&lt;/string&gt;
    &lt;string name="responseTextPref"&gt;PREF_RESPONSE_TEXT&lt;/string&gt;
    &lt;string name="autoRespondPref"&gt;PREF_AUTO_RESPOND&lt;/string&gt;
    &lt;string name="respondForPref"&gt;PREF_RESPOND_FOR&lt;/string&gt;
 
&lt;/resources&gt;
</code></pre>

<p>Запустим проект, чтобы посмотреть, как выглядит приложение сейчас.</p>

<p><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/smsresponder1.png" alt="Автоответчик"></p>

<p>Создайте внутри активности новый список со cтроками для хранения 
телефонных номеров, с которых будут приходить SMS. В методе OnCreate() 
свяжите этот список с элементом ListView с помощью ArrayAdapter и 
создайте новый объект ReentrantLock, чтобы обеспечить безопасную работу 
со списком в поточном режиме.</p>

<p>Затем получите ссылку на элемент CheckBox и добавьте объекты 
OnClickListener для каждой из кнопок, с помощью которых будет 
отправляться ответное сообщение. Первые две из них должны вызывать метод
 respond(), тогда как последняя будет делать вызов заглушки 
startAutoResponder().</p>

<p>Реализуйте приёмник широковещательных намерений — он будет отслеживать входящие SMS.</p>

<p>Создайте новый приёмник в виде переменной внутри активности. Он 
должен отслеживать входящие SMS и вызывать метод requestReceived(), если
 обнаружит в них строку <i>Кота погладил?</i>, хранящуюся во внешнем ресурсе.</p>

<pre><code class="java">
BroadcastReceiver emergencyResponseRequestReceiver = new BroadcastReceiver() {
	@Override
	public void onReceive(Context _context, Intent _intent) {
		if (_intent.getAction().equals(SMS_RECEIVED)) {
			String queryString = getString(R.string.querystring);
			Bundle bundle = _intent.getExtras();
			if (bundle != null) {
				Object[] pdus = (Object[]) bundle.get("pdus");
				SmsMessage[] messages = new SmsMessage[pdus.length];
				for (int i = 0; i &lt; pdus.length; i++)
					messages[i] = SmsMessage
							.createFromPdu((byte[]) pdus[i]);
				for (SmsMessage message : messages) {
					if (message.getMessageBody().toLowerCase()
							.contains(queryString))
						requestReceived(message.getOriginatingAddress());
				}
			}
		}
	}
};

// каждый телефонный номер, с которого приходиит SMS,
// содержащее строку Кота погладил?
// должен добавляться в список запросов
public void requestReceived(String _from) {
	if (!requesters.contains(_from)) {
		lock.lock();
		requesters.add(_from);
		aa.notifyDataSetChanged();
		lock.unlock();
	}
}
</code></pre>

<p>Теперь активность должна следить за приходом SMS и по мере 
поступления добавлять номер телефона в элемент ListView. Запустите 
программу и пошлите сообщение устройству или эмулятору, на котором эта 
программа функционирует. Когда сообщение придет, то номер телефона 
должен отобразиться в списке.</p>

<p><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/smsresponder2.png" alt="Автоответчик"></p>

<p>Добавим возможность отвечать на эти сообщения. Начните с реализации 
метода-заглушки respond(), который вы создали ранее. Он должен перебрать
 все номера в списке и отослать по каждому из них SMS, текст которого 
будет основываться на строках, заданных вами в виде ресурсов. Сообщения 
будут передаваться с помощью перегруженного метода respond().</p>

<pre><code class="java">
public void respond(boolean _includeLocation) {
	String outString = getString(R.string.respondAllClearText);
	ArrayList&lt;String&gt; requestersCopy = (ArrayList&lt;String&gt;) requesters
			.clone();
	for (String to : requestersCopy)
		respond(to, outString, _includeLocation);
}

private void respond(String _to, String _response, boolean _includeLocation) {
}
</code></pre>

<p>Измените метод respond(), который отвечает за отправку каждого ответного SMS.</p>

<p>Прежде чем слать сообщение, удалите всех потенциальных получателей из
 списка. Если ответ должен включать данные о текущем местоположении, 
получите их с помощью объекта LocationManager, затем отправьте второе 
сообщение, содержащие ваши долготу/широту и адрес из геокодировщика.</p>

<pre><code class="java">
private void respond(String _to, String _response, boolean _includeLocation) {
	// Удалите адресата из списка людей,
	// которым мы должны отвечать.
	lock.lock();
	requesters.remove(_to);
	aa.notifyDataSetChanged();
	lock.unlock();
	SmsManager sms = SmsManager.getDefault();
	// Отправьте сообщение
	sms.sendTextMessage(_to, null, _response, null, null);
	StringBuilder sb = new StringBuilder();
	// Если это необходимо, получите текущее
	// местоположение и отправьте его по SMS.
	if (_includeLocation) {
		String ls = Context.LOCATION_SERVICE;
		LocationManager lm = (LocationManager) getSystemService(ls);
		Location l = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
		sb.append("I'm @:
");
		sb.append(l.toString() + "
");
		List</code><address><code class="java"> addresses;
		Geocoder g = new Geocoder(getApplicationContext(),
				Locale.getDefault());
		try {
			addresses = g.getFromLocation(l.getLatitude(),
					l.getLongitude(), 1);
			if (addresses != null) {
				Address currentAddress = addresses.get(0);
				if (currentAddress.getMaxAddressLineIndex() &gt; 0) {
					for (int i = 0; i &lt; currentAddress
							.getMaxAddressLineIndex(); i++) {
						sb.append(currentAddress.getAddressLine(i));
						sb.append("
");
					}
				} else {
					if (currentAddress.getPostalCode() != null)
						sb.append(currentAddress.getPostalCode());
				}
			}
		} catch (IOException e) {
		}
		ArrayList&lt;String&gt; locationMsgs = sms.divideMessage(sb.toString());
		for (String locationMsg : locationMsgs)
			sms.sendTextMessage(_to, null, locationMsg, null, null);
	}
}
</code></address></pre>

<p>В экстренных ситуациях чрезвычайно важно, чтобы сообщения доходили до
 адресата. Улучшите надежность своего приложения, добавив в него 
возможность повторной отправки. Отслеживая успешность доставки SMS, вы 
можете отослать его второй раз, если в первый возникли какие-то 
проблемы.</p>

<p>Начните с создания нового статического строкового поля в активности. 
Оно будет использоваться для определения локального действия SMS_SENT.</p>

<pre><code class="java">
public static final String SENT_SMS = "ru.alexanderklimov.smsresponder.SMS_SENT";
</code></pre>

<p> Отредактируйте метод respond(), добавив в него новое намерение 
PendingIntent, которое будет передавать действие, созданное в предыдущем
 пункте (сигнализируя о том, что отправка сообщения завершена). 
Намерение должно включать номер получателя в виде дополнительного 
параметра.</p>

<pre><code class="java">
Intent intent = new Intent(SENT_SMS);
intent.putExtra("recipient", _to);
PendingIntent sent = PendingIntent.getBroadcast(
		getApplicationContext(), 0, intent, 0);
</code></pre>

<p>Реализуйте новый абстрактный класс BroadcastReceiver для отслеживания
 этого намерения. Переопределите его обработчик onReceive(), чтобы 
подтверждать успешность доставки SMS. Если сообщение не было доставлено,
 адресата необходимо вернуть обратно в список.</p>

<pre><code class="java">
private BroadcastReceiver attemptedDeliveryReceiver = new BroadcastReceiver() {
	@Override
	public void onReceive(Context _context, Intent _intent) {
		if (_intent.getAction().equals(SENT_SMS)) {
			if (getResultCode() != Activity.RESULT_OK) {
				String recipient = _intent.getStringExtra("recipient");
				requestReceived(recipient);
			}
		}
	}
};
</code></pre>

<p>В завершение зарегистрируйте новый приёмник широковещательных намерений в методе onCreate():</p>

<pre><code class="java">
IntentFilter attemptedDeliveryfilter = new IntentFilter(SENT_SMS);
registerReceiver(attemptedDeliveryReceiver, attemptedDeliveryfilter);
</code></pre>

<p>Данный пример сознательно упрощен, чтобы сосредоточить ваше внимание 
на работе с SMS. По крайней мере две вещи могут быть улучшены.</p>

<p>Регистрацию приёмника широковещательных намерений предпочтительнее 
проводить внутри манифеста, чтобы приложение могло отвечать на входящие 
SMS, даже если оно не запущено. Обработка входящих SMS, выполняющаяся 
внутри приёмника, должна быть перенесена в сервис и работать в фоновом 
потоке. То же самое следует сделать с отправкой ответных сообщений. 
Предлагаем реализовать данные улучшения самостоятельно.</p>

<h2 class="text-warning">Автоматизация приложения</h2>

<p>Добавим функциональность к кнопке Настройка автоответчика, созданной 
ранее. С ее помощью ваше приложение сможет автоматически отвечать на 
полученные сообщения.</p>

<p>Начните с создания нового ресурса разметки autoresponder.xml, в 
котором будет описано окно с настройками для автоматических ответов. 
Добавьте туда элементы EditText для ввода текста сообщения, Spinner для 
выбора времени, в течение которого будет отослан автоматический ответ, и
 CheckBox, чтобы пользователь мог выбрать, нужно добавлять в ответ свое 
местоположение или нет.</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" &gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="Respond With" /&gt;

    &lt;EditText
        android:id="@+id/responseText"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" /&gt;

    &lt;CheckBox
        android:id="@+id/checkboxLocation"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="Transmit Location" /&gt;

    &lt;TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="Auto Respond For" /&gt;

    &lt;Spinner
        android:id="@+id/spinnerRespondFor"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:drawSelectorOnTop="true" /&gt;

    &lt;LinearLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal" &gt;

        &lt;Button
            android:id="@+id/enableButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Enable" /&gt;

        &lt;Button
            android:id="@+id/cancelButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Disable" /&gt;
    &lt;/LinearLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Добавьте новые ресурсы в string.xml</p>

<pre><code class="xml">
&lt;string name="user_preferences"&gt;ru.alexanderklimov.smsresponder.preferences&lt;/string&gt;
&lt;string name="includeLocationPref"&gt;PREF_INCLUDE_LOC&lt;/string&gt;
&lt;string name="responseTextPref"&gt;PREF_RESPONSE_TEXT&lt;/string&gt;
&lt;string name="autoRespondPref"&gt;PREF_AUTO_RESPOND&lt;/string&gt;
&lt;string name="respondForPref"&gt;PREF_RESPOND_FOR&lt;/string&gt;
</code></pre>

<p>Создайте новый ресурс arrays.xml, который будет содержать массив для заполнения данными элемента Spinner.</p>

<pre><code class="java">
&lt;resources&gt;

    &lt;string-array name="respondForDisplayItems"&gt;
        &lt;item&gt;- Disabled -&lt;/item&gt;
        &lt;item&gt;Next 5 minutes&lt;/item&gt;
        &lt;item&gt;Next 15 minutes&lt;/item&gt;
        &lt;item&gt;Next 30 minutes&lt;/item&gt;
        &lt;item&gt;Next hour&lt;/item&gt;
        &lt;item&gt;Next 2 hours&lt;/item&gt;
        &lt;item&gt;Next 8 hours&lt;/item&gt;
    &lt;/string-array&gt;

    &lt;array name="respondForValues"&gt;
        &lt;item&gt;0&lt;/item&gt;
        &lt;item&gt;5&lt;/item&gt;
        &lt;item&gt;15&lt;/item&gt;
        &lt;item&gt;30&lt;/item&gt;
        &lt;item&gt;60&lt;/item&gt;
        &lt;item&gt;120&lt;/item&gt;
        &lt;item&gt;480&lt;/item&gt;
    &lt;/array&gt;

&lt;/resources&gt;
</code></pre>

<p>Создайте новую активность AutoResponder и привяжите ее к созданной разметке.</p>

<pre><code class="java">
package ru.alexanderklimov.smsresponder;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.res.Resources;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;

import android.content.BroadcastReceiver;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Spinner;

public class AutoResponder extends Activity {
	
	Spinner respondForSpinner;
	CheckBox locationCheckbox;
	EditText responseTextBox;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.autoresponder);
		
		respondForSpinner = (Spinner)findViewById(R.id.spinnerRespondFor);
		locationCheckbox = (CheckBox)findViewById(R.id.checkboxLocation);
		responseTextBox = (EditText)findViewById(R.id.responseText);
	}
}
</code></pre>

<p>Заполните данными элемент Spinner, чтобы пользователи могли выбирать время, в течение которого отсылается автоматический ответ.</p>

<pre><code class="java">
ArrayAdapter&lt;CharSequence&gt; adapter = ArrayAdapter.createFromResource(
		this, R.array.respondForDisplayItems,
		android.R.layout.simple_spinner_item);
adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
respondForSpinner.setAdapter(adapter);
</code></pre>

<p>Теперь добавьте обработку нажатий для кнопок Enable и Disable, чтобы 
пользователи могли сохранять или отменять изменения в настройках.</p>

<pre><code class="java">
Button enableButton = (Button) findViewById(R.id.enableButton);
okButton.setOnClickListener(new View.OnClickListener() {
	public void onClick(View view) {
		savePreferences();
		setResult(RESULT_OK, null);
		finish();
	}
});

Button cancelButton = (Button) findViewById(R.id.cancelButton);
cancelButton.setOnClickListener(new View.OnClickListener() {
	public void onClick(View view) {
		respondForSpinner.setSelection(-1);
		savePreferences();
		setResult(RESULT_CANCELED, null);
		finish();
	}
});
</code></pre>

<p>В завершение сделайте так, чтобы состояние пользовательского 
интерфейса активности при запуске соответствовало текущим настройкам.</p>

<pre><code class="java">
// Загрузите сохраненные настройки и обновите пользовательский интерфейс
updateUIFromPreferences();
</code></pre>

<p>Закончив с методом onCreate(), добавим для методов 
updateUIFromPreferences() и savePreferences(). Метода 
updateUIFromPreferences() должен считывать текущие настройки активности 
AutoResponder и применять их к пользовательскому интерфейсу</p>

<pre><code class="java">
private void updateUIFromPreferences() {
	// Получите сохраненные настройки
	String preferenceName = getString(R.string.user_preferences);
	SharedPreferences sp = getSharedPreferences(preferenceName, 0);
	String autoResponsePref = getString(R.string.autoRespondPref);
	String responseTextPref = getString(R.string.responseTextPref);
	String autoLocPref = getString(R.string.includeLocationPref);
	String respondForPref = getString(R.string.respondForPref);
	boolean autoRespond = sp.getBoolean(autoResponsePref, false);
	String respondText = sp.getString(responseTextPref, "");
	boolean includeLoc = sp.getBoolean(autoLocPref, false);
	int respondForIndex = sp.getInt(respondForPref, 0);
	// Примените сохраненные настройки к пользовательскому интерфейсу
	if (autoRespond)
		respondForSpinner.setSelection(respondForIndex);
	else
		respondForSpinner.setSelection(0);
	locationCheckbox.setChecked(includeLoc);
	responseTextBox.setText(respondText);
}
</code></pre>

<p>Заполните кодом методы savePreferences(), чтобы сохранять текущее состояние пользовательского интерфейса в файл Общих настроек.</p>

<pre><code class="java">
private void savePreferences() {
	// Получите текущее состояние пользовательского интерфейса
	boolean autoRespond = respondForSpinner.getSelectedItemPosition() &gt; 0;
	int respondForIndex = respondForSpinner.getSelectedItemPosition();
	boolean includeLoc = locationCheckbox.isChecked();
	String respondText = responseTextBox.getText().toString();
	// Сохраните его в файл Общих Настроек
	String preferenceName = getString(R.string.user_preferences);
	SharedPreferences sp = getSharedPreferences(preferenceName, 0);
	Editor editor = sp.edit();
	editor.putBoolean(getString(R.string.autoRespondPref), autoRespond);
	editor.putString(getString(R.string.responseTextPref), respondText);
	editor.putBoolean(getString(R.string.includeLocationPref), includeLoc);
	editor.putInt(getString(R.string.respondForPref), respondForIndex);
	editor.commit();
	// Отмените автоматические ответы с помощью метода setAlarm
	setAlarm(respondForIndex);
}
</code></pre>

<p>Используемый выше метод setAlarm() нужен для создания новой 
Сигнализации. Она должна активизировать намерение, которое отключит 
автоматические ответы.
Вам необходимо создать новый объект BroadcastReceiver, который будет 
отслеживать намерения, посланные сигнализацией, прежде чем отключить 
автоответ.</p>

<pre><code class="java">
private void setAlarm(int respondForIndex) {}
</code></pre>

<p>Начните с создания строкового поля для действия, которое будет представлять намерение для сигнализации.</p>

<pre><code class="java">
public static final String alarmAction = "ru.alexanderklimov.smsresponder.AUTO_RESPONSE_EXPIRED";
</code></pre>

<p>Создайте новый экземпляр BroadcastReceiver, который будет отслеживать
 намерение. Получив намерение, он должен соответствующим образом 
изменить 
настройки автоответчика.</p>

<pre><code class="java">
private BroadcastReceiver stopAutoResponderReceiver = new
BroadcastReceiver() {
  @Override
  public void onReceive(Context context, Intent intent) {
    if (intent.getAction().equals(alarmAction)) {
      String preferenceName = getString(R.string.user_preferences);
      SharedPreferences sp = getSharedPreferences(preferenceName,0);
      Editor editor = sp.edit();
      editor.putBoolean(getString(R.string.autoRespondPref), false);
      editor.commit();
    }
  }
};
</code></pre>

<p>Закончим метод setAlarm. Он должен отменять Сигнализацию, если 
автоматический ответ уже выключен; в противном случае нужно будет задать
 для Сигнализации временной интервал, по истечении которого она должна 
сработать.</p>

<pre><code class="java">
private void setAlarm(int respondForIndex) {
	// Создайте Сигнализацию и зарегистрируйте
	// для нее Приемник широковещательных намерений.
	AlarmManager alarms = (AlarmManager) getSystemService(ALARM_SERVICE);
	if (intentToFire == null) {
		Intent intent = new Intent(alarmAction);
		intentToFire = PendingIntent.getBroadcast(getApplicationContext(),
				0, intent, 0);
		IntentFilter filter = new IntentFilter(alarmAction);
		registerReceiver(stopAutoResponderReceiver, filter);
	}
	if (respondForIndex &lt; 1)
		// Если автоответчик отключен, отмените Сигнализацию.
		alarms.cancel(intentToFire);
	else {
		// В ином случае получите временной интервал,
		// выбранный в настройках, и сделайте так, чтобы
		// Сигнализация сработала по его истечении.
		Resources r = getResources();
		int[] respondForValues = r.getIntArray(R.array.respondForValues);
		int respondFor = respondForValues[respondForIndex];
		long t = System.currentTimeMillis();
		t = t + respondFor * 1000 * 60;
		// Установите Сигнализацию.
		alarms.set(AlarmManager.RTC_WAKEUP, t, intentToFire);
	}
}
</code></pre>

<p>Добавим активность в манифест приложения:</p>

<pre><code class="xml">
&lt;activity
    android:name=".AutoResponder"
    android:label="Auto Responder Setup" /&gt;
</code></pre>

<p>Для того чтобы включить автоматический ответ, вернитесь к главной 
активности и отредактируйте заглушку startAutoResponder(). Она должна 
открывать активность AutoResponder.</p>

<pre><code class="java">
private void startAutoResponder() {
	startActivityForResult(new Intent(MainActivity.this,
			AutoResponder.class), 0);
}
</code></pre>

<p>Теперь, запустив проект, вы сможете открыть окно с настройками и изменить поведение автоматического ответа.</p>

<p>И последний шаг: отредактируйте метод requestReceived() из главной 
активности, чтобы проверять, включена ли функция автоматического ответа.
 В случае положительного ответа должен автоматически запуститься метод 
respond() с использованием настроек для сообщения и местоположения, 
заданных в Общих настройках приложения.</p>

<pre><code class="java">
public void requestReceived(String _from) {
	if (!requesters.contains(_from)) {
		lock.lock();
		requesters.add(_from);
		aa.notifyDataSetChanged();
		lock.unlock();

		// Проверьте настройки автоответчика
		String preferenceName = getString(R.string.user_preferences);
		SharedPreferences prefs = getSharedPreferences(preferenceName, 0);
		String autoRespondPref = getString(R.string.autoRespondPref);
		boolean autoRespond = prefs.getBoolean(autoRespondPref, false);
		if (autoRespond) {
			String responseTextPref = getString(R.string.responseTextPref);
			String includeLocationPref = getString(R.string.includeLocationPref);
			String respondText = prefs.getString(responseTextPref, "");
			boolean includeLoc = prefs.getBoolean(includeLocationPref,
					false);
			respond(_from, respondText, includeLoc);
		}
	}
}
</code></pre>

<p>Теперь у вас есть полнофункциональное интерактивное приложение, 
способное на выбор автоматически отвечать на поступаемые сообщения или 
отвечать с заготовленным сообщением по нажатию кнопки. При тестированни 
на эмуляторе, вам нужно запустить два виртуальных устройства и 
обмениваться сообщениями между ними.</p>

<p><a href="http://developer.alexanderklimov.ru/android/apk/smsresponder.zip">Скачать исходник примера</a>.</p>


</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/fastbutton.htm" name="I0_1379249070005" id="I0_1379249070005" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/postmessageRelay.htm" id="oauth2relay467306112" name="oauth2relay467306112"></iframe><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/jquery.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D1%91%D0%BC%20SMS-%D0%B0%D0%B2%D1%82%D0%BE%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%87%D0%B8%D0%BA_files/bootstrap-typeahead.js"></script>

</body></html>