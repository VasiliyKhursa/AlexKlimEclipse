<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Сервисы GeoNames: Погода, почтовые индексы и часовой пояс, землетрясения</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory/">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Сервисы GeoNames: Погода, почтовые индексы и часовой пояс</h1>
<p>Четвёртый месяц обучения (закрытая зона)</p>



<p>
<a href="#geonames">Сервис GeoNames</a><br>
<a href="#getweather">Узнаём погоду в заданных координатах</a><br>
<a href="#getplace">Узнаём место по почтовому индексу</a><br>
<a href="#gettimezone">Бонус: Узнаём часовой пояс</a><br>
<a href="#getsources">Исходники</a><br>
<a href="#earthquakes">Землетрясения</a><br>
</p>

<p>Метки: <span class="label label-success">веб-сервисы</span>, <span class="label label-important">JSON</span>, <span class="label label-info">AsyncTask</span>, <span class="label">HttpClient</span>, <span class="label label-success">InputStreamReader</span></p>


<h2 class="text-warning" id="geonames">Сервис GeoNames</h2>
<p>Рассмотрим получение данных о погоде по заданным координатам, а также
 узнаем страну по его почтовому индексу. Данные будем получать в формате
 JSON через веб-сервис от GeoNames. В качестве бонуса у нас будет 
возможность узнать часовой пояс по координатам.</p>


<p>Подробнее о предоставляемых веб-сервисах можно узнать по адресу <a href="http://www.geonames.org/export/web-services.html">http://www.geonames.org/export/web-services.html</a></p>

<p>Сразу пишем разрешение на интернет:</p>

<pre><code class="xml">
&lt;uses-permission android:name="android.permission.INTERNET"/&gt;
</code></pre>

<p>Создадим простую разметку из текстовых меток, полей и кнопок (исходники в конце статьи).</p>

<p>Мы уже изучали примеры соединения с веб-сервисом через HTTP, используя команду GET, например, в уроке <a href="http://developer.alexanderklimov.ru/android/twitterservices.php">Используем веб-сервисы на примере Twitter</a>. Поэтому нам будет всё знакомо. Создадим вспомогательный метод <b>readJSONData()</b></p>

<pre><code class="java">
public String readJSONData(String URL) {
	StringBuilder stringBuilder = new StringBuilder();
	HttpClient httpClient = new DefaultHttpClient();
	HttpGet httpGet = new HttpGet(URL);
	try {
		HttpResponse response = httpClient.execute(httpGet);
		StatusLine statusLine = response.getStatusLine();
		int statusCode = statusLine.getStatusCode();
		if (statusCode == 200) {
			HttpEntity entity = response.getEntity();
			InputStream inputStream = entity.getContent();
			BufferedReader reader = new BufferedReader(
					new InputStreamReader(inputStream));
			String line;
			while ((line = reader.readLine()) != null) {
				stringBuilder.append(line);
			}
			inputStream.close();
		} else {
			Log.d("GeoNames", "Ошибка при чтении файла");
		}
	} catch (Exception e) {
		Log.d("GeoNames", e.getLocalizedMessage());
	}
	return stringBuilder.toString();
}
</code></pre>

<p>Метод использует строковый параметр, указывающий на нужный адрес. 
Данный адрес используется для установки соединения через HTTP GET. Далее
 обрабатываем ответ от сервера и в успешном случае заносим ответ в 
строковую переменную <b>stringBuilder</b>, который и является возвращаемым результатом метода.</p>

<h2 class="text-warning" id="getweather">Узнаём погоду в заданных координатах</h2>

<p>Имея нужный метод для соединения с сервером, мы можем теперь получить
 JSON-ответ, который содержит нужную информацию, например, погоду. 
GeoNames принимает запрос в виде следующего адреса:</p>

<pre><a href="http://ws.geonames.org/findNearByWeatherJSON?lat=55.45&amp;lng=37.37">http://ws.geonames.org/findNearByWeatherJSON?lat=&amp;lng=</a>
</pre>

<p>Надеюсь, вы догадались, что после <b>lat=</b> и <b>lng=</b> следует подставить координаты.</p>

<p>Результат может быть следующим:</p>

<pre>{
    "weatherObservation":{
	    "weatherCondition":"n/a",
		"clouds":"overcast",
		"observation":"UUMO 060700Z 04003MPS 4000 -SN OVC010 M03/M04 Q1006 NOSIG RMK QFE740/0987 08590335",	
		"windDirection":40,	
		"ICAO":"UUMO",	
		"elevation":0,
		"countryCode":"RU",
		"cloudsCode":"OVC",
		"lng":37.50953435897827,
		"temperature":"-3",
		"dewPoint":"-4",
		"humidity":92,
		"stationName":"Ostafyevo International Airport",
		"datetime":"2013-01-06 07:00:00",
		"lat":55.50409620690683,
		"hectoPascAltimeter":1006}}
</pre>

<p>Обратите внимание на главный ключ <b>weatherObservation</b>, который содержит коллекцию пар ключ-значение, типа облака-белокрылые лошадки, извините, просто clouds и прочие детали.</p>

<p>Действия, связанные с соединением с сервером и получением ответа, 
следует проводить в отдельном потоке. Напишем реализацию класса 
AsyncTask:</p>

<pre><code class="java">
private class GetWeatherTask extends AsyncTask&lt;String, Void, String&gt; {
	protected String doInBackground(String... urls) {
		return readJSONData(urls[0]);
	}

	protected void onPostExecute(String result) {
		try {
			JSONObject jsonObject = new JSONObject(result);
			JSONObject weatherObservationItems = new JSONObject(
					jsonObject.getString("weatherObservation"));

			tvWeather.setText("Облачность: " + weatherObservationItems.getString("clouds")
					+ ", Температура: "
					+ weatherObservationItems.getString("temperature"));

		} catch (Exception e) {
			Log.d("GeoNames", e.getLocalizedMessage());
		}
	}
}
</code></pre>

<p>В методе <b>doInBackGround()</b> мы просто вызываем наш вспомогательный метод <b>readJSONData()</b>, который получает нужную информацию. Информацию мы передаём методу <b>onPostExecute()</b> в качестве параметра. В методе идёт парсинг строки по ключу <b>weatherObservation</b>.</p>

<p>Окончательный вариант выводим на экран через текстовую метку <b>tvWeather</b>.</p>

<p>Осталось запустить задачу в обработчике нажатия кнопки:</p>

<pre><code class="java">
public void btnGetWeather(View view) {
    EditText txtLat = (EditText) findViewById(R.id.txtLat);
    EditText txtLong = (EditText) findViewById(R.id.txtLong);

    new GetWeatherTask().execute(
        "http://ws.geonames.org/findNearByWeatherJSON?lat=" + 
        txtLat.getEditableText().toString() + "&amp;lng=" + 
        txtLong.getText().toString());        
}
</code></pre>

<p>Протестируем программу. Запускаем проект, вводим коордианты и нажимаем на кнопку. Смотрим, что получилось.</p>

<h2 class="text-warning" id="getplace">Узнаём место по почтовому индексу</h2>

<p>GeoNames также позволяет определить место по почтовому индексу. Адрес запроса должен быть следующим:</p>

<pre><a href="http://api.geonames.org/postalCodeSearchJSON?postalcode=152830&amp;maxRows=10&amp;username=demo">http://api.geonames.org/postalCodeSearchJSON?postalcode=&amp;maxRows=10&amp;username=demo</a>
</pre>

<p>После <b>postalcode=</b> следует ввести нужный индекс. Ответ будет таким:</p>

<pre>{"postalCodes":[
    {
	    "adminName2":"МЫШКИНСКИЙ РАЙОН",
		"postalCode":"152830",
		"countryCode":"RU",
		"lng":38.4538889,
		"placeName":"Мышкин",
		"lat":57.7886111,
		"adminName1":"Ярославская Область"
	}]}
</pre>

<p>Основной ключ в JSON-ответе - <b>postalCode</b>. Нам повезло, что 
запрос вернул один вариант. Но в некоторых случаях может вернуться 
массив значений, если индекс совпадает в нескольких странах.</p>

<p>У нас уже есть вспомогательный метод для соединения с сервером, 
осталось написать ещё один класс AsyncTask для получения информации по 
индексу:</p>

<pre><code class="java">
private class GetPlacesTask extends AsyncTask<string, void,="" string=""> {
	protected String doInBackground(String... urls) {
		return readJSONData(urls[0]);
	}

	protected void onPostExecute(String result) {
		try {
			JSONObject jsonObject = new JSONObject(result);
			JSONArray postalCodesItems = new JSONArray(
					jsonObject.getString("postalCodes"));

			for (int i = 0; i &lt; postalCodesItems.length(); i++) {
				JSONObject postalCodesItem = postalCodesItems
						.getJSONObject(i);
				tvPlace.setText("Индекс: "
						+ postalCodesItem.getString("postalCode")
						+ ", Место: "
						+ postalCodesItem.getString("placeName")
						+ ", Код страны: "
						+ postalCodesItem.getString("countryCode"));
			}
		} catch (Exception e) {
			Log.d("GeoNames", e.getLocalizedMessage());
		}
	}
}
</string,></code></pre>

<p>Код отличается незначительно. Так как ответ может содержать массив, то дополнительно используется объект <b>JSONArray</b>.</p>

<p>Добавляем код для кнопки:</p>

<pre><code class="java">
public void btnGetPlaces(View view) {
	EditText txtPostalCode = (EditText) findViewById(R.id.txtPostalCode);
	new GetPlacesTask()
			.execute("http://api.geonames.org/postalCodeSearchJSON?postalcode="
					+ txtPostalCode.getEditableText().toString()
					+ "&amp;maxRows=10&amp;username=demo");
}
</code></pre>

<p>Запускаем проект, вводим индекс 152830 и узнаём, что индекс 
принадлежит городу Мышкин Ярославской области - любимый город для 
турпоездок всех котов России.</p>

<h2 class="text-warning" id="gettimezone">Бонус: Узнаём часовой пояс</h2>

<p>GeoNames также позволяет определить часовой пояс по заданным 
координатам. У нас уже есть пример получения погоды по координатам, 
поэтому мы сможем быстро модифицировать программу для получения ещё 
одной важной информации. Сам запрос осуществляется по адресу:</p>

<pre><a href="http://api.geonames.org/timezoneJSON?lat=47.01&amp;lng=10.2&amp;username=demo">http://api.geonames.org/timezoneJSON?lat=&amp;lng=&amp;username=demo</a>
</pre>

<p>Ответ выглядит так:</p>

<pre>{
    "time":"2013-01-07 08:15",
	"countryName":"Austria",
	"sunset":"2013-01-07 16:46",
	"rawOffset":1,
	"dstOffset":2,
	"countryCode":"AT",
	"gmtOffset":1,"lng":10.2,
	"sunrise":"2013-01-07 08:04",
	"timezoneId":"Europe/Vienna",
	"lat":47.01
}
</pre>

<p>Обратите внимание, что в ответе нет корневого ключа, поэтому количество кода сократится.</p>

<p>Создадим новую задачу:</p>

<pre><code class="java">
private class GetTimezoneTask extends AsyncTask&lt;String, Void, String&gt; {
	protected String doInBackground(String... urls) {
		return readJSONData(urls[0]);
	}

	protected void onPostExecute(String result) {
		try {
			JSONObject jsonObject = new JSONObject(result);
			
			
			tvTimezone.setText("Страна: "
					+ jsonObject.getString("countryName")
					+ ", Часовой пояс: "
					+ jsonObject.getString("timezoneId"));
			
			
		} catch (Exception e) {
			Log.d("GeoNames", e.getLocalizedMessage());
		}
	}
}
</code></pre>

<p>Задачу поместим в обработчик кнопки, которая узнаёт погоду по 
координатам. Раз уж мы считываем эти координаты, то заодно и вычислим 
часовой пояс:</p>

<pre><code class="java">
new GetTimezoneTask()
.execute("http://api.geonames.org/timezoneJSON?lat="
		+ txtLat.getEditableText().toString() + "&amp;lng="
		+ txtLong.getText().toString() + "&amp;username=demo");
</code></pre>


<p>Окончательный вариант приложения:</p>

<p><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/geonames1.png" alt="GeoNames" height="500" width="300"></p>

<h2 class="text-warning">Предупреждение</h2>

<p>Несмотря на то, что сервисы GeoNames бесплатны, они имеют 
определённые ограничения на количество запросов на определённый 
IP-адрес. Это относится к запросам, у которых в строке имеется слово <b>&amp;username=demo</b>.
 Если вы превысите количество запросов, то программа не будет ничего 
выводить на экран. Я сначала не мог понять, почему программа не выводит 
нужные данные. Пришлось читать правила на сайте. Вы можете бесплатно 
зарегистрироваться на сайте и получить доступ к сервисам под своим 
именем, чтобы продолжить свои эксперименты. Также имеется и коммерческий
 доступ.</p>

<h2 class="text-warning" id="getsources">Исходники</h2>

<h3 class="text-success">res/layout/activity_geo.xml</h3>

<pre><code class="xml">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/LinearLayout1"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".GeoActivity" &gt;

    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Latitude" /&gt;

    &lt;EditText
        android:id="@+id/txtLat"
        android:layout_width="320dp"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="numberDecimal"
        android:text="55.450210" /&gt;

    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Longitude" /&gt;

    &lt;EditText
        android:id="@+id/txtLong"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="numberDecimal"
        android:text="37.371121" /&gt;

    &lt;Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:onClick="btnGetWeather"
        android:text="Какая погода?" /&gt;

    &lt;TextView
        android:id="@+id/tvWeatherInfo"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Почтовый индекс" /&gt;

    &lt;EditText
        android:id="@+id/txtPostalCode"
        android:layout_width="320dp"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="number"
        android:text="152830" /&gt;

    &lt;Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:onClick="btnGetPlaces"
        android:text="Где это?" /&gt;

    &lt;TextView
        android:id="@+id/tvPlaceInfo"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

    &lt;TextView
        android:id="@+id/tvTimeZone"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<h3 class="text-success">src/../GeoActivity.java</h3>

<pre><code class="java">
// Если этот код работает, его написал Александр Климов,
// а если нет, то не знаю, кто его писал.
package ru.alexanderklimov.geonames;

import ...

public class GeoActivity extends Activity {

	TextView tvWeather, tvPlace, tvTimezone;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_geo);

		tvWeather = (TextView) findViewById(R.id.tvWeatherInfo);
		tvPlace = (TextView) findViewById(R.id.tvPlaceInfo);
		tvTimezone = (TextView) findViewById(R.id.tvTimeZone);
	}

	public String readJSONData(String URL) {
		StringBuilder stringBuilder = new StringBuilder();
		HttpClient httpClient = new DefaultHttpClient();
		HttpGet httpGet = new HttpGet(URL);
		try {
			HttpResponse response = httpClient.execute(httpGet);
			StatusLine statusLine = response.getStatusLine();
			int statusCode = statusLine.getStatusCode();
			if (statusCode == 200) {
				HttpEntity entity = response.getEntity();
				InputStream inputStream = entity.getContent();
				BufferedReader reader = new BufferedReader(
						new InputStreamReader(inputStream));
				String line;
				while ((line = reader.readLine()) != null) {
					stringBuilder.append(line);
				}
				inputStream.close();
			} else {
				Log.d("Geonames", "Ошибка при чтении файла");
			}
		} catch (Exception e) {
			Log.d("GeoNames", e.getLocalizedMessage());
		}
		return stringBuilder.toString();
	}

	private class GetWeatherTask extends AsyncTask&lt;String, Void, String&gt; {
		protected String doInBackground(String... urls) {
			return readJSONData(urls[0]);
		}

		protected void onPostExecute(String result) {
			try {
				JSONObject jsonObject = new JSONObject(result);
				JSONObject weatherObservationItems = new JSONObject(
						jsonObject.getString("weatherObservation"));

				tvWeather.setText("Облачность: "
						+ weatherObservationItems.getString("clouds")
						+ ", Температура: "
						+ weatherObservationItems.getString("temperature"));

			} catch (Exception e) {
				Log.d("GeoNames", e.getLocalizedMessage());
			}
		}
	}

	public void btnGetWeather(View view) {
		EditText txtLat = (EditText) findViewById(R.id.txtLat);
		EditText txtLong = (EditText) findViewById(R.id.txtLong);

		new GetWeatherTask()
				.execute("http://ws.geonames.org/findNearByWeatherJSON?lat="
						+ txtLat.getEditableText().toString() + "&amp;lng="
						+ txtLong.getText().toString());

		// Бонус. Узнаем часовой пояс
		new GetTimezoneTask()
				.execute("http://api.geonames.org/timezoneJSON?lat="
						+ txtLat.getEditableText().toString() + "&amp;lng="
						+ txtLong.getText().toString() + "&amp;username=demo");

	}

	private class GetPlacesTask extends AsyncTask&lt;String, Void, String&gt; {
		protected String doInBackground(String... urls) {
			return readJSONData(urls[0]);
		}

		protected void onPostExecute(String result) {
			try {
				JSONObject jsonObject = new JSONObject(result);
				JSONArray postalCodesItems = new JSONArray(
						jsonObject.getString("postalCodes"));

				for (int i = 0; i &lt; postalCodesItems.length(); i++) {
					JSONObject postalCodesItem = postalCodesItems
							.getJSONObject(i);
					tvPlace.setText("Индекс: "
							+ postalCodesItem.getString("postalCode")
							+ ", Место: "
							+ postalCodesItem.getString("placeName")
							+ ", Код страны: "
							+ postalCodesItem.getString("countryCode"));
				}
			} catch (Exception e) {
				Log.d("GeoNames", e.getLocalizedMessage());
			}
		}
	}

	public void btnGetPlaces(View view) {
		EditText txtPostalCode = (EditText) findViewById(R.id.txtPostalCode);
		new GetPlacesTask()
				.execute("http://api.geonames.org/postalCodeSearchJSON?postalcode="
						+ txtPostalCode.getEditableText().toString()
						+ "&amp;maxRows=10&amp;username=demo");
	}

	private class GetTimezoneTask extends AsyncTask&lt;String, Void, String&gt; {
		protected String doInBackground(String... urls) {
			return readJSONData(urls[0]);
		}

		protected void onPostExecute(String result) {
			try {
				JSONObject jsonObject = new JSONObject(result);

				tvTimezone.setText("Страна: "
						+ jsonObject.getString("countryName")
						+ ", Часовой пояс: "
						+ jsonObject.getString("timezoneId"));

			} catch (Exception e) {
				Log.d("GeoNames", e.getLocalizedMessage());
			}
		}
	}
}
</code></pre>

<h2 class="text-warning" id="earthquakes">Землетрясения</h2>

<p>Не удержался и решил добавить ещё один пример, связанный с землетрясениями. Адрес сервиса <b>http://api.geonames.org/earthquakesJSON?north=44.1&amp;south=-9.9&amp;east=-22.4&amp;west=55.2&amp;username=demo</b>. Здесь уже заранее прописаны значения ограничивающего прямоугольника, в котором замечены землетрясения.</p>

<p>Ответ в формате JSON выглдядит следующим образом:</p>

<pre><code class="java">
{"earthquakes":[
    {"eqid":"c0001xgp","magnitude":8.8,"lng":142.369,"src":"us","datetime":"2011-03-11 04:46:23","depth":24.4,"lat":38.322},
	{"eqid":"c000905e","magnitude":8.6,"lng":93.0632,"src":"us","datetime":"2012-04-11 06:38:37","depth":22.9,"lat":2.311},
	{"eqid":"2007hear","magnitude":8.4,"lng":101.3815,"src":"us","datetime":"2007-09-12 09:10:26","depth":30,"lat":-4.5172},
	{"eqid":"c00090da","magnitude":8.2,"lng":92.4522,"src":"us","datetime":"2012-04-11 08:43:09","depth":16.4,"lat":0.7731},
	{"eqid":"2007aqbk","magnitude":8,"lng":156.9567,"src":"us","datetime":"2007-04-01 18:39:56","depth":10,"lat":-8.4528},
	{"eqid":"2007hec6","magnitude":7.8,"lng":100.9638,"src":"us","datetime":"2007-09-12 21:49:01","depth":10,"lat":-2.5265},
	{"eqid":"a00043nx","magnitude":7.7,"lng":100.1139,"src":"us","datetime":"2010-10-25 12:42:22","depth":20.6,"lat":-3.4841},
	{"eqid":"2010utc5","magnitude":7.7,"lng":97.1315,"src":"us","datetime":"2010-04-06 20:15:02","depth":31,"lat":2.3602},
	{"eqid":"2009mebz","magnitude":7.6,"lng":99.9606,"src":"us","datetime":"2009-09-30 08:16:09","depth":80,"lat":-0.7889},
	{"eqid":"2009kdb2","magnitude":7.6,"lng":92.9226,"src":"us","datetime":"2009-08-10 17:55:39","depth":33.1,"lat":14.0129}
]}
</code></pre>

<p>Так как ответ возвращается в виде одного массива, то сделаем приложение на основе ListActivity. Основная разметка:</p>

<h3 class="text-success">listplaceholder.xml</h3>

<pre><code class="xml">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"&gt;	

    &lt;ListView
	 	android:id="@id/android:list"
	    android:layout_width="fill_parent"
	    android:layout_height="wrap_content"
	    android:layout_weight="1"
	 	android:drawSelectorOnTop="false" /&gt;

    &lt;TextView
        android:id="@id/android:empty"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="No data"/&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Разметка для отдельного элемента списка:</p>

<h3 class="text-success">main.xml</h3>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical"
    android:padding="7dp" &gt;

    &lt;TextView
        android:id="@+id/item_title"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="2dp"
        android:textSize="20dp" /&gt;

    &lt;TextView
        android:id="@+id/item_subtitle"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="2dp"
        android:textSize="13dp" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Код будет основан на предыдущих примерах. Только на этот раз данные будут переданы адаптеру, чтобы разместить их в ListView.</p>

<pre><code class="java">
package ru.alexanderklimov.geonames;

import ...

public class GeoActivity extends ListActivity {

	ArrayList<hashmap&lt;string, string&gt;&gt;="" mylist;="" @override="" protected="" void="" oncreate(bundle="" savedinstancestate)="" {="" super.oncreate(savedinstancestate);="" mylist="new" arraylist<hashmap<string,="" string="">&gt;();

		new GetEarthQuakesTask()
				.execute("http://api.geonames.org/earthquakesJSON?north=44.1&amp;south=-9.9&amp;east=-22.4&amp;west=55.2&amp;username=demo");

	}

	private class GetEarthQuakesTask extends AsyncTask&lt;String, Void, String&gt; {
		protected String doInBackground(String... urls) {
			return readJSONData(urls[0]);
		}

		protected void onPostExecute(String result) {
			try {
				JSONObject jsonObject = new JSONObject(result);
				JSONArray  earthquakes = jsonObject.getJSONArray("earthquakes");

				for (int i = 0; i &lt; earthquakes.length(); i++) {

					HashMap<string, string=""> map = new HashMap&lt;String, String&gt;();
					JSONObject e = earthquakes.getJSONObject(i);

					map.put("id", String.valueOf(i));
					map.put("name", "Earthquake name:" + e.getString("eqid"));
					map.put("magnitude",
							"Magnitude: " + e.getString("magnitude"));
					mylist.add(map);

					ListAdapter adapter = new SimpleAdapter(getApplicationContext(), mylist,
							R.layout.main,
							new String[] { "name", "magnitude" }, new int[] {
									R.id.item_title, R.id.item_subtitle });

					setListAdapter(adapter);

				}
			} catch (Exception e) {
				Log.d("Earth", e.getLocalizedMessage());
			}
		}
	}

	public String readJSONData(String URL) {
		StringBuilder stringBuilder = new StringBuilder();
		HttpClient httpClient = new DefaultHttpClient();
		HttpGet httpGet = new HttpGet(URL);
		try {
			HttpResponse response = httpClient.execute(httpGet);
			StatusLine statusLine = response.getStatusLine();
			int statusCode = statusLine.getStatusCode();
			if (statusCode == 200) {
				HttpEntity entity = response.getEntity();
				InputStream inputStream = entity.getContent();
				BufferedReader reader = new BufferedReader(
						new InputStreamReader(inputStream));
				String line;
				while ((line = reader.readLine()) != null) {
					stringBuilder.append(line);
				}
				inputStream.close();
			} else {
				Log.d("Geonames", "Ошибка при чтении файла");
			}
		} catch (Exception e) {
			Log.d("GeoNames", e.getLocalizedMessage());
		}
		return stringBuilder.toString();
	}
}
</string,></hashmap&lt;string,></code></pre>

<p><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/geonames2.png" alt="GeoNames" height="500" width="300"></p>

</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/fastbutton.htm" name="I0_1379249640512" id="I0_1379249640512" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/jquery.js"></script><iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/postmessageRelay.htm" id="oauth2relay434768173" name="oauth2relay434768173"></iframe>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B%20GeoNames_files/bootstrap-typeahead.js"></script>

</body></html>