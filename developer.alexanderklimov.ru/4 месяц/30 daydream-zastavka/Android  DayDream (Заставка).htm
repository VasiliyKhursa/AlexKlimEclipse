<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: DayDream (Заставка)</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory/">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">DayDream (Заставка)</h1>
<p>Четвёртый месяц обучения (закрытая зона)</p>



<p>
<a href="#theory">Немного теории</a><br>
<a href="#simpledream">Простая заставка с текстом</a><br>
<a href="#settings">Настройки</a><br>
<a href="#dreamcat">Заставка «Котики»</a><br>
<a href="#clock">Заставка «Часы»</a><br>
<a href="#intent">Запустить заставку DayDream из своего приложения</a><br>
</p>

<h2 class="text-warning" id="theory">Немного теории</h2>

<p>Всем нам знакомы заставки или хранители экрана (Screensaver) из мира 
Windows. В Android 4.2 появились подобные интерактивные заставки под 
названием <b>DayDream</b>. DayDream рассчитана в первую очередь на 
работу во время зарядки и в режиме док-станции. В этом случае мы 
получаем что-то вроде электронной рамки, которую продают в магазинах 
электроники (и кто-то это покупает). Заставка может отображать 
фотографии из галереи, новости из интернета или красивую анимацию. Для 
включения заставки нужно перейти в Настройки и в категории Дисплей 
выбрать пункт Заставка и указать, когда её отображать, к примеру во 
время зарядки устройства.</p>

<p>Заставка может работать в двух режимах. Первый режим - при 
прикосновении рукой или кошачьей лапой заставка прекращает свою работу, 
как мы привыкли это видеть на заставках Windows при шевелении мышкой или
 нажатии клавиши. Второй режим - экран реагирует на нажатие и выполняет 
какие-то действия, например, лопаются пузыри.</p>


<p>Заставка наследуется не от стандартной Activity, а от класса <b>android.service.dreams.DreamService</b>. У класса имеется свой жизненный цикл и свои методы.</p>

<p>Основные методы DreamService:</p>
<ul>
<li><b>onAttachedToWindow()</b> — используется для начальной установки и для вызова setContentView()</li>
<li><b>onDreamingStarted()</b> — вызывается, когда создается и отображается окно Daydream, в которой можно запускать анимацию</li>
<li><b>onDreamingStopped()</b> — останавливает анимацию</li>
<li><b>onDetachedFromWindow()</b> – удаляет всё, что было создано в onAttachedToWindow()</li>
<li><b>setContentView()</b> – устанавливает сцену Daydream</li>
<li><b>setInteractive(boolean)</b> – по умолчанию, Daydream закроется, 
когда пользователь коснётся экрана (значение false). Если требуется 
интерактивность, то задаём значение true</li>
<li><b>setFullscreen(boolean)</b> – метод для включения полноэкранного режима</li>
<li><b>setScreenBright(boolean)</b> – по умолчанию, заставка 
устанавливает полную яркость дисплея. Если установить значение false, то
 метод установит яркость на минимум</li>
</ul>

<h2 class="text-warning" id="simpledream">Простая заставка с текстом</h2>

<p>Давайте для начала попробуем создать собственную простейшую заставку, которая будет выводить простой текст.</p>

<p>Не забывайте, что при создании нового проекта для минимальной версии нужно указывать номер версии 17 - <b>android:minSdkVersion="17"</b>.</p>

<p>При создании нового проекта у нас уже имеется класс MainActivity. 
Воспользуемся этим классом как заготовкой для экономии времени. Откроем 
класс в редакторе и напишем несколько строк кода:</p>

<pre><code class="java">
package ru.alexanderklimov.daydreamdemo;

import android.graphics.Color;
import android.service.dreams.DreamService;
import android.widget.TextView;

public class MainActivity extends DreamService {

	@Override
	public void onAttachedToWindow() {
		super.onAttachedToWindow();

		// Позволяем коту потрогать экран
		setInteractive(true);

		// На весь экран
		setFullscreen(true);

		// Разметка программным способом
		TextView txtView = new TextView(this);
		txtView.setText("Тра-та-та, тра-та-та. Мы везём с собой кота!");
		txtView.setTextColor(Color.rgb(184, 245, 0));
		txtView.setTextSize(30);
		setContentView(txtView);
	}
}
</code></pre>

<p>Как видите, вместо Activity, мы наследуемся от <b>DreamService</b> и прописываем один метод <b>onAttachedToWindow()</b>.
 В данном методе мы устанавливаем полноэкранный режим и не закрываем 
заставку при касании. Разметку устанавливаем программным способом - 
задаём текстовую метку, настраиваем её свойства и выводим через метод <b>setContentView()</b>.
 Также можно подготовить разметку в XML-файле и поместить в ресурсы, 
откуда можно вызывать привычным способом, как в Activity (пример 
реализации смотрите в третьем примере с часами).</p>

<div class="alert alert-info">В будущих проектах следует создавать 
отдельные классы типа MyDayDream вместо MainActivity, чтобы понимать, 
что мы имеем дело с заставкой, а не с активностью.</div>

<p>Откроем файл манифеста. У нас нет активности, поэтому смело удаляем 
информацию о ней. И добавляем информацию о сервисе. В итоге манифест 
будет выглядеть следующим образом:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="ru.alexanderklimov.daydreamdemo"
    android:versionCode="1"
    android:versionName="1.0" &gt;

    &lt;uses-sdk
        android:minSdkVersion="17"
        android:targetSdkVersion="17" /&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        
        &lt;service
            android:name=".MainActivity"
            android:exported="true"
            android:label="My DayDream" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.service.dreams.DreamService" /&gt;

                &lt;category android:name="android.intent.category.DEFAULT" /&gt;
            &lt;/intent-filter&gt;
        &lt;/service&gt;


    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>Параметр <b>android:label</b> отвечает за название заставки в настройках.</p>

<p>Запустите эмулятор под Android 4.2 и перейдите (для английской 
версии) в Settings | Display | DayDream. Там в списке вы увидите свою 
заставку под вашим именем, о котором шла речь выше и вашим значком. 
Нажмите кнопку <b>Start Now</b>, чтобы запустить заставку и полюбоваться вашей работой.</p>

<p><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/daydream1.png" alt="DayDream" height="247" width="500"></p>

<p>Мы реализовали простейший пример заставки и получили первое представление о ней.</p>

<h2 class="text-warning" id="settings">Настройки</h2>

<p>Вероятно, вы заметили, что у некоторых предустановленных заставок 
есть значок настроек. Вы также можете добавить подобный значок к своей 
заставке. Для этого в манифесте для вашего сервиса нужно добавить 
дополнительный блок:</p>

<pre><code class="xml">
&lt;service
    ... предыдущий код

    &lt;meta-data
        android:name="android.service.dream"
        android:resource="@xml/dreamsettings" /&gt;
&lt;/service&gt;
</code></pre>

<p>Далее необходимо создать папку <b>res/xml</b> и поместить в неё заданный файл, в нашем примере это <b>dreamsettings.xml</b>. Содержание файла будет следующим:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;dream xmlns:android="http://schemas.android.com/apk/res/android"
    android:settingsActivity="ru.alexanderklimov.daydreamdemo/.DreamSettingsActivity" /&gt;
</code></pre>

<p>После данной операции в настройках появится нужный значок. Но если вы
 попробуете на него нажать, то получите ошибку, что вполне естественно. 
Ведь мы ещё не подготовили активность <b>DreamSettingsActivity</b>, которую прописали в файле. Это вам в качестве домашнего задания.</p>

<h2 class="text-warning" id="dreamcat">Заставка «Котики»</h2>

<p>Разработчик из Google в официальном блоге представил пример заставки с
 зелёными роботами, которые двигаются по экрану, отталкиваясь от стенок.
 Это уже похоже на более традиционную заставку. Я заменил робота котом и
 привожу пример здесь.</p>

<p>Создадим новый класс <b>BouncerDaydream</b>:</p>

<pre><code class="java">
package ru.alexanderklimov.daydreamdemo;

import android.service.dreams.DreamService;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.view.ViewGroup.LayoutParams;

public class BouncerDaydream extends DreamService {
	@Override
	public void onDreamingStarted() {
		super.onDreamingStarted();

		// Our content view will take care of animating its children.
		final Bouncer bouncer = new Bouncer(this);
		bouncer.setLayoutParams(new ViewGroup.LayoutParams(LayoutParams.MATCH_PARENT,
				ViewGroup.LayoutParams.MATCH_PARENT));
		bouncer.setSpeed(200); // pixels/sec

		// Add some views that will be bounced around.
		// Here I'm using ImageViews but they could be any kind of
		// View or ViewGroup, constructed in Java or inflated from
		// resources.
		for (int i = 0; i &lt; 5; i++) {
			final FrameLayout.LayoutParams lp = new FrameLayout.LayoutParams(
					LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
			final ImageView image = new ImageView(this);
			image.setImageResource(R.drawable.cat);
			image.setBackgroundColor(0xFF004000);
			bouncer.addView(image, lp);
		}
		setContentView(bouncer);
	}
}
</code></pre>

<p>Изображение кота содержится в ресурсе <b>R.drawable.cat</b>. В метод <b>setContentView()</b> загружается FrameLayout (класс Bouncer).</p>

<p>Класс Bouncer:</p>

<pre><code class="java">
package ru.alexanderklimov.daydreamdemo;

import android.animation.TimeAnimator;
import android.content.Context;
import android.graphics.PointF;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;

public class Bouncer extends FrameLayout implements TimeAnimator.TimeListener {
	private float mMaxSpeed;
	private final TimeAnimator mAnimator;
	private int mWidth, mHeight;

	public Bouncer(Context context) {
		this(context, null);
	}

	public Bouncer(Context context, AttributeSet attrs) {
		this(context, attrs, 0);
	}

	public Bouncer(Context context, AttributeSet attrs, int flags) {
		super(context, attrs, flags);
		mAnimator = new TimeAnimator();
		mAnimator.setTimeListener(this);
	}

	/**
	 * Start the bouncing as soon as we’re on screen.
	 */
	@Override
	public void onAttachedToWindow() {
		super.onAttachedToWindow();
		mAnimator.start();
	}

	/**
	 * Stop animations when the view hierarchy is torn down.
	 */
	@Override
	public void onDetachedFromWindow() {
		mAnimator.cancel();
		super.onDetachedFromWindow();
	}

	/**
	 * Whenever a view is added, place it randomly.
	 */
	@Override
	public void addView(View v, ViewGroup.LayoutParams lp) {
		super.addView(v, lp);
		setupView(v);
	}

	/**
	 * Reposition all children when the container size changes.
	 */
	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) {
		super.onSizeChanged(w, h, oldw, oldh);
		mWidth = w;
		mHeight = h;
		for (int i = 0; i &lt; getChildCount(); i++) {
			setupView(getChildAt(i));
		}
	}

	/**
	 * Bouncing view setup: random placement, random velocity.
	 */
	private void setupView(View v) {
		final PointF p = new PointF();
		final float a = (float) (Math.random() * 360);
		p.x = mMaxSpeed * (float) (Math.cos(a));
		p.y = mMaxSpeed * (float) (Math.sin(a));
		v.setTag(p);
		v.setX((float) (Math.random() * (mWidth - v.getWidth())));
		v.setY((float) (Math.random() * (mHeight - v.getHeight())));
	}

	/**
	 * Every TimeAnimator frame, nudge each bouncing view along.
	 */
	public void onTimeUpdate(TimeAnimator animation, long elapsed, long dt_ms) {
		final float dt = dt_ms / 1000f; // seconds
		for (int i = 0; i &lt; getChildCount(); i++) {
			final View view = getChildAt(i);
			final PointF v = (PointF) view.getTag();

			// step view for velocity * time
			view.setX(view.getX() + v.x * dt);
			view.setY(view.getY() + v.y * dt);

			// handle reflections
			final float l = view.getX();
			final float t = view.getY();
			final float r = l + view.getWidth();
			final float b = t + view.getHeight();
			boolean flipX = false, flipY = false;
			if (r &gt; mWidth) {
				view.setX(view.getX() - 2 * (r - mWidth));
				flipX = true;
			} else if (l &lt; 0) {
				view.setX(-l);
				flipX = true;
			}
			if (b &gt; mHeight) {
				view.setY(view.getY() - 2 * (b - mHeight));
				flipY = true;
			} else if (t &lt; 0) {
				view.setY(-t);
				flipY = true;
			}
			if (flipX)
				v.x *= -1;
			if (flipY)
				v.y *= -1;
		}
	}

	public void setSpeed(float s) {
		mMaxSpeed = s;
	}
}
</code></pre>

<p>Анимация управляется через класс <b>TimeAnimator</b>.</p>

<p>Осталось прописать сервис в манифесте и можно запускать пример:</p>

<pre><code class="xml">
&lt;service
    android:name=".BouncerDaydream"
    android:exported="true"
    android:label="BouncerDream"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name="android.service.dreams.DreamService" /&gt;
        &lt;category android:name="android.intent.category.DEFAULT" /&gt;
    &lt;/intent-filter&gt;
&lt;/service&gt;
</code></pre>

<p><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/daydream2.png" alt="DayDream" height="300" width="500"></p>

<h2 class="text-warning" id="clock">Заставка «Часы»</h2>

<p>Когда я изучал исходники заставки с часами, то наткнулся на пару 
интересных моментов, о которых не знал ранее. Пример очень простой - 
создаётся разметка с представлением TextClock и часы выводятся на экран.
 Есть одна особенность - часы мигают при помощи недокументированного 
контейнера BlinkLayout, который в XML-разметке идёт под тегом <b>blink</b>. Элементы, расположенные в данном контейнере, мигают каждые полсекунды.</p>

<p>Подготовим разметку для часов в файле <b>res/layout/fullscreen_clock.xml</b>:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent" &gt;

    &lt;TextClock
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:fontFamily="monospace"
        android:format12Hour="hh mm"
        android:shadowColor="#800000"
        android:shadowDx="0"
        android:shadowDy="0"
        android:shadowRadius="8"
        android:textColor="#CC3300"
        android:textSize="@dimen/clock_text_size" /&gt;

    &lt;blink
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_gravity="center" &gt;

        &lt;TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:fontFamily="monospace"
            android:shadowColor="#800000"
            android:shadowDx="0"
            android:shadowDy="0"
            android:shadowRadius="8"
            android:text="  :  "
            android:textColor="#CC3300"
            android:textSize="@dimen/clock_text_size"
            tools:ignore="HardcodedText" /&gt;
    &lt;/blink&gt;

&lt;/FrameLayout&gt;
</code></pre>

<p>Для размера шрифта в тексте, которые используются в часа, нужно подготовить файл <b>dimens.xml</b> в папке <b>res/values</b>:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;
    &lt;dimen name="clock_text_size"&gt;100sp&lt;/dimen&gt;
&lt;/resources&gt;
</code></pre>

<p>Для планшетов стоит создать копию файла <b>dimens.xml</b> в папке <b>res/values-sw600dp</b> и установить размер <b>200sp</b>.</p>

<p>Создадим новый класс от DreamService:</p>

<pre><code class="java">
package ru.alexanderklimov.clockdaydream;

import android.service.dreams.DreamService;

public class DayDream extends DreamService {
	@Override
	public void onAttachedToWindow() {
		super.onAttachedToWindow();
		setFullscreen(true);
		setScreenBright(false);
		setContentView(R.layout.fullscreen_clock);
	}
}
</code></pre>

<p>Прописываем сервис в манифесте:</p>

<pre><code class="xml">
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="ru.alexanderklimov.clockdaydream"
    android:versionCode="1"
    android:versionName="1.0" &gt;

    &lt;uses-sdk
        android:minSdkVersion="17"
        android:targetSdkVersion="17" /&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        &lt;service
            android:name=".DayDream"
            android:exported="true"
            android:label="Simple Clock" &gt;
            &lt;intent-filter&gt;
                &lt;category android:name="android.intent.category.DEFAULT" /&gt;

                &lt;action android:name="android.service.dreams.DreamService" /&gt;
            &lt;/intent-filter&gt;
        &lt;/service&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>Запускаем пример и любуемся часами с мигающимися двумя точками между часами и минутами.</p>

<p><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/daydream3.png" alt="Заставка Часы" height="240" width="400"></p>

<h2 class="text-warning" id="intent">Запустить заставку DayDream из своего приложения</h2>

<p>Можно из своего приложения программно запустить заставку, которая 
выбрана пользователем по умолчанию. Учтите, что данный способ считается 
недокументированным и может не сработать в будущих версиях Android.</p>

<pre><code class="java">
final Intent intent = new Intent(Intent.ACTION_MAIN);

intent.setClassName("com.android.systemui",
		"com.android.systemui.Somnambulator");
startActivity(intent);
finish();
</code></pre>

<h2 class="text-warning">Дополнительное чтение</h2>

<p><a href="http://android-developers.blogspot.ru/2012/12/daydream-interactive-screen-savers.html">Daydream: Interactive Screen Savers | Android Developers Blog</a></p>
<p><a href="http://code.google.com/p/android-daydream-samples/">Исходники заставок, которые использовались в статье</a></p>
<p><a href="http://developer.android.com/reference/android/service/dreams/DreamService.html">Страница документации по DreamService</a></p>
<p><a href="https://android.googlesource.com/platform/packages/screensavers/WebView/+/master/">Пример заставки на WebView с выводом страницы</a></p>
<p><a href="https://android.googlesource.com/platform/packages/screensavers/Basic/+/jb-mr1-release/src/com/android/dreams/basic/">Пример заставки Colors с использованием OpenGL ES 2.0 и TextureView</a></p>

</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/fastbutton.htm" name="I0_1379249102423" id="I0_1379249102423" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/postmessageRelay.htm" id="oauth2relay1038197410" name="oauth2relay1038197410"></iframe><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/jquery.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-transition.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-alert.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-modal.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-tab.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-popover.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-button.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20DayDream%20%28%D0%97%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0%29_files/bootstrap-typeahead.js"></script>

</body></html>