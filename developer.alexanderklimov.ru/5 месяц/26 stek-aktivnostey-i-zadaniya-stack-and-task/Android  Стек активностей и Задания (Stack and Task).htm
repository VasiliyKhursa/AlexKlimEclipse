<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Стек активностей и Задания (Stack and Task)</title>

<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
    <div class="row-fluid">
        <!--левое меню -->
        <div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory/">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

        <div class="row-fluid">
            <div class="span12">
            
                        <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Стек активностей и Задания (Stack and Task)</h1>

<p>Закрытая зона/5-й месяц</p>

<p>
<a href="#theory">Теория</a><br>
<a href="#quickexit">Выйти из приложения с несколькими экранами</a><br>
<a href="#back">Переопределяем кнопку Back</a><br>
</p>

<p>По письмам я вижу, что некоторые не совсем чётко представляют себе 
работу с несколькими активностями в приложении. Данный материал позволит
 чуть приоткрыть завесу над данной темой.</p>



<h2 class="text-warning" id="theory">Теория</h2>

<p>Приложение может состоять из нескольких активностей. Пользователь 
всегда может вернуться на предыдущую, закрытую активность при помощи 
кнопки <b>Back</b>. За подобную функциональность отвечает специальный механизм <i>стека</i>
 (Activity Stack). При открытии новой активности она становится вершиной
 в стеке, а предыдущая активность уходит на второй план. Стек не может 
перемешиваться, можно добавить на вершину новую активность и удалить 
верхнюю текущую. Одна и та же активность может находиться в стеке, <b>сколько угодно раз</b>.</p>

<p>Task (Задание) — это набор активностей. Каждый Task содержит свой 
стек. В стандартной ситуации каждое приложение имеет свой Task и свой 
стек. При сворачивании приложения Task уходит в фон (background), но не 
умирает. Он хранит весь свой стек и при очередном открытии приложения 
через менеджер программ или через Launcher-программу, существующее 
задание восстановится и продолжит свою работу.</p>

<p><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/stack1.png" alt="Stack"></p>

<p>Допустим мы перешли на пятый экран приложения. Если нажимать кнопку 
Back, то стек будет удалять активности до тех пор, пока не останется 
главная активность. Если же на ней пользователь нажмёт кнопку Back, 
приложение закроется и Task умрет. Когда мы сворачиваем наше приложение и
 запускаем, например, новое приложение, то наш Task просто уходит на 
задний план и будет ждать момента, когда мы его вызовем. Но, здесь нужно
 учитывать тот факт, что если устройство будет испытывать проблемы с 
ресурсами, то система может убить ваш Task из-за нехватки системных 
ресурсов. И мы потеряем все наши текущие данные, а наш стек очистится. 
Для избежания потери данных нужно позаботиться о такой ситуации.</p>

<p>Подведём итоги:</p>
<ul>
<li>При запуске новая активность становится на вершину стека, смещая текущую</li>
<li>При сворачивании приложения Task уходит в фон и хранит свое 
состояние. После очередного запуска приложения задание восстанавливается
 вместе со своим стеком</li>
<li>При нажатии кнопки Back текущая активность удаляется. На вершину стека ставится предыдущая активность</li>
<li>Одна и таже активность может иметь сколько угодно экземпляров в стеке</li>
</ul>

<h2 class="text-warning">Пример-шпаргалка</h2>

<p>Чтобы наглядно видеть работу стека и заданий, рекомендую создать 
программу-шпаргалку. В ней можно тестировать различное поведение 
активностей. Чтобы сэкономить время, я создал приложение следующим 
образом. В стандартном проекте дополнительно к основной активности 
MainActivity создал ещё три новых активности SecondActivity, 
ThirdActivity и FourActivity. Во всех активностях подключается одна и та
 же разметка <b>activity_main.xml</b>:</p>

<pre><code class="xml">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/LinearLayout1"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".MainActivity" &gt;

    &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView" /&gt;

    &lt;Button
        android:id="@+id/button1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:onClick="onClick"
        android:text="Button" /&gt;

    &lt;Button
        android:id="@+id/button2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:onClick="onClick"
        android:text="Button" /&gt;

    &lt;Button
        android:id="@+id/button3"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:onClick="onClick"
        android:text="Button" /&gt;

    &lt;EditText
        android:id="@+id/editText1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10" &gt;

        &lt;requestFocus /&gt;
    &lt;/EditText&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Три кнопки позволяют переходить на другие активности, а текстовое 
поле пригодится для демонстрации примера. Настройка текста в кнопках и 
код для перехода на другие активности прописываются у каждой активности 
отдельно. Код будет практически идентичен, только следите за 
правильностью переходов на другие активности. К примеру, в первой 
активности будет код для перехода на вторую, третью и четвёртую 
активность, а во второй активности - на первую, третью и четвёртую. И 
так далее. Вот код для первой активности.</p>

<pre><code class="java">
package ru.alexanderklimov.stackdemo;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        TextView tvInfo = (TextView)findViewById(R.id.textView1);
        tvInfo.setText("Активность №1");
        
        Button button1 = (Button)findViewById(R.id.button1);
        button1.setText("На вторую активность");
        
        Button button2 = (Button)findViewById(R.id.button2);
        button2.setText("На третью активность");
        
        Button button3 = (Button)findViewById(R.id.button3);
        button3.setText("На четвертую активность");
        
        findViewById(R.id.LinearLayout1).setBackgroundColor(Color.WHITE);
    }
    
    public void onClick(View v){
        Intent intent;
        switch (v.getId()) {
        case R.id.button1:
            intent = new Intent(this, SecondActivity.class);
            startActivity(intent);
            break;
        case R.id.button2:
            intent = new Intent(this, ThirdActivity.class);
            startActivity(intent);
            break;
        case R.id.button3:
            intent = new Intent(this, FourthActivity.class);
            startActivity(intent);
            break;

        default:
            break;
        }
    }
}
</code></pre>

<p>Для дополнительного удобства можно присвоить различным активностям 
разные цвета. Напишите код для оставшихся активностей и можно начинать 
тестирование.</p>

<p>Сначала рассмотрим стандартный сценарий. Запустите приложение и 
последовательно перейдите с первого экрана на второй, со второго на 
третий, с третьего на четвёртый. Схематично это можно описать так: 
1-2-3-4.</p>

<p>Находясь на четвёртом экране, начинайте нажимать на кнопку Back. Вы 
повторите своё движение по экранам в обратном порядке (4-3-2-1). Пока 
никаких сюрпризов.</p>

<p>Однако, продолжим. Теперь выберите более замысловатый режим, 
например, 1-2-3-1-4 и снова через кнопку Back вернитесь к главной 
активности. Вроде ничего особенного. Но тут есть одна хитрость. Когда вы
 с третьего экрана перемещались на первый экран, вы наверняка подумали, 
что вернулись на свой начальный экран. Но это не совсем так, приложение 
создало новый экран, который похож на начальный экран. Т.е. мы создали 
копию первого экрана. Чтобы убедиться в этом, запустите приложение 
снова, введите какой-нибудь текст на первом экране, например, <i>первый кот</i>
 и продолжите путь по этому же маршруту 1-2-3-1-4. Переходя с третьего 
экрана на первый вы не увидите ранее введённый текст. Текстовое поле 
будет пустым. Хорошо, снова введём какой-нибудь текст, например, <i>второй кот</i>
 и продолжим путешествие по заданному маршруту на четвёртый экран. 
Достигнув конца пути, будем возвращаться к первоначальной точке 
путешествия через кнопку Back. Возвращаясь, вы дважды побываете на 
первом экране, точнее на двух разных копиях первого экрана и текст в 
текстовом поле послужит вам подсказкой.</p>

<p>Этот принцип стоит хорошо уяснить для себя. Поэтому потренируйтесь несколько раз на приложении-шпаргалке.</p>

<p>Выше говорилось, что мы не можем перемешивать стек. Хотя мы можем 
немного повлиять на него следующим образом. Допустим у третьей 
активности в коде для перехода на четвёртый экран добавим строчку кода:</p>

<pre><code class="java">
intent = new Intent(this, FourthActivity.class);
startActivity(intent);
// добавим одну строчку кода
finish();
</code></pre>

<p>Пройдёмся по знакомому маршруту 1-2-3-1-4 и попытаемся вернуться 
назад. Теперь возвращение домой будет таким: 4-2-1. Таким образом, мы 
можем добиться, чтобы активность не попадала в стек. В сложных 
приложениях это нужно делать обязательно, чтобы пользователь не блуждал 
по экранам, которые ему не нужны.</p>

<h2 class="text-warning">Управление заданиями</h2>

<p>Существует два способа для изменения стандартной организации заданий.
 Например, мы можем устанавливать специальные атрибуты в манифесте для 
каждой активности. Также мы можем устанавливать специальные флаги для 
намерения, который запускает новую активность с помощью метода <b>startActivity()</b>. Если атрибуты в манифесте и флаги в намерении противоречат друг другу, то в этом случае флаги Intent будут приоритетны.</p>

<p>Для каждой активности в манифесте можно указать атрибут <b>launchMode</b> с одним из следующих значений:</p>
<dl>
<dt><b>standard</b> (по умолчанию)</dt>
    <dd>При запуске активности создается новый экземпляр в стеке. Activity может размещаться в стеке несколько раз</dd>
<dt><b>singleTop</b></dt>
    <dd>Активность может располагаться в стеке несколько раз. Новая 
запись в стеке создается только в том случаи, если данная Activity не 
расположена в вершине стека. Если она на данный момент является 
вершиной, то у неё сработает метод <b>onNewIntent()</b>, но она не будет пересоздана</dd>
<dt><b>singleTask</b></dt>
    <dd>Создаёт новое задание и устанавливает активность корнeвой для 
него, но только в случае, если экземпляра данной активности нет в других
 заданиях. Если активность уже расположена в каком-либо задании, то 
откроется именно тот экземпляр и вызовется метод <b>onNewIntent()</b>. 
Активность становится главной, и все верхние экземпляры удаляются, если 
они есть. Только один экземпляр такой активность может существовать</dd>
<dt><b>singleInstance</b></dt>
    <dd>Схоже с singleTask, но для данной активности всегда будет 
создаваться отдельное задание и она будет в ней корневой. Данный флаг 
указывает, что активность будет одним и единственным членом своего 
задания</dd>
</dl>

<p>На самом деле не важно, в каком задании открыта новая активность. При
 нажатии кнопки Back мы всё равно вернемся на предыдущий Task и 
предыдущие активности. Единственный момент, который нужно учитывать — 
это параметр <b>singleTask</b>. Если при открытии такой активности мы 
достанем её из другого фоновой работы задания, то мы полностью 
переключаемся на него и на его стек.</p>

<p><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/stack2.png" alt="Stack"></p>

<p>Флаги имеют больший приоритет, чем <b>launchMode</b>. Существует несколько флагов:</p>
<ul>
<li><b>FLAG_ACTIVITY_NEW_TASK</b> — запускает активность в новом 
задании. Если уже существует задание с экземпляром данной активности, то
 это задание становится активным, и срабатывает метод onNewIntent(). 
Флаг аналогичен параметру <b>singleTop</b> описанному выше</li>
<li><b>FLAG_ACTIVITY_SINGLE_TOP</b> — если активность запускает сама 
себя, т.е. она находится в вершине стека, то вместо создания нового 
экземпляра в стеке вызывается метод onNewIntent(). Флаг аналогичен 
параметру <b>singleTop</b> описанному выше</li>
<li><b>FLAG_ACTIVITY_CLEAR_TOP</b> — если экземпляр данной активности 
уже существует в стеке данного задания, то все активности, находящиеся 
поверх неё, разрушаются и этот экземпляр становится вершиной стека. 
Также вызовется метод onNewIntent()</li>
<li><b>FLAG_ACTIVITY_REORDER_TO_FRONT</b> - запускаемая активность 
становится на вершину стека, если она уже была активна, т.е. вторая 
копия не запускается. Если был задан также флаг <b>FLAG_ACTIVITY_CLEAR_TOP</b>, то данный флаг игнорируется.</li>
</ul>

<h3 class="text-warning" id="quickexit">FLAG_ACTIVITY_CLEAR_TOP - Выйти из приложения с несколькими экранами</h3>

<p>Рассмотрим пример с флагом <b>FLAG_ACTIVITY_CLEAR_TOP</b>.</p>

<p>Допустим у вас есть приложение с десятью экранами (вопросник с кнопками <b>Далее</b>).
 Чтобы выйти из приложения с последнего экрана, вам придётся десять раз 
нажать на кнопку Back, чтобы вернуться на первый экран и только потом 
выйти из приложения. Удалять промежуточные активности через <b>finish()</b> вы не хотите, чтобы пользователь мог на других экранах возвращаться обратно.</p>

<p>Решением проблемы может стать создание намерения с специальным флагом:</p>

<pre><code class="java">
intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
</code></pre>

<p>Также добавьте дополнительную информацию, например, булево значение:</p>

<pre><code class="java">
intent.putExtra("EXIT", true);
</code></pre>

<p>Этот код можно добавить в <a href="#back">метод переопределение кнопки Back</a>.</p>

<p>Код для последней активности:</p>

<pre><code class="java">
@Override
public boolean onKeyDown(int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getRepeatCount() == 0) {
        // переходим на первый экран
        Intent intent = new Intent(getApplicationContext(),
                MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        intent.putExtra("EXIT", true);
        startActivity(intent);
        finish();
        return true;
    }
    return super.onKeyDown(keyCode, event);
}
</code></pre>

<p>Первая активность, получив это значение через намерение, может вызвать метод <b>finish()</b> в своём методе <b>onCreate()</b> или <b>onResume()</b>:</p>

<pre><code class="java">
if (getIntent().getBooleanExtra("EXIT", false)) {
    finish();
}
</code></pre>

<h3 class="text-warning">FLAG_ACTIVITY_REORDER_TO_FRONT</h3>

<p>Запускаемая активность становится на вершину стека, если она уже была активна, т.е. вторая копия не запускается.</p>

<p>Проверим на практике. У третьей активности в коде перехода на первую активность напишем код:</p>

<pre><code class="java">
intent = new Intent(this, MainActivity.class);
intent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
startActivity(intent);
</code></pre>

<p>Идём по знакомому маршруту 1-2-3-1-4. Не забудьте ввести текст на 
первом экране. Когда с третьего экрана вы перейдёте на первый, то 
увидите свой текст. Получается, что на этот раз вторая копия первого 
экрана не создавалась, а была запущена уже имеющаяся активность. При 
этом она была перемещена в стеке. То есть был стек 1-2-3-1, а стал 
2-3-1. Далее формируется история стека обычным путём, когда вы 
переходите на четвёртый экран. В конечном итоге получилась схема 
2-3-1-4. Когда вы будете возвращаться назад с помощью кнопки Back, то 
дойдя до второго экрана, следующим нажатием кнопки выйдете из 
приложения.</p>

<p>Этот флаг может не сработать в определённых ситуациях. Например, если нужная активность вызывается из уведомления при помощи <b>NotificationManager</b>,
 то система может не знать об установленных правилах, так как код 
вызывается из другого контекста. В подобных случаях пробуйте флаги <b>FLAG_ACTIVITY_CLEAR_TOP</b> и <b>FLAG_ACTIVITY_SINGLE_TOP</b>:</p>

<pre><code class="java">
String ns = Context.NOTIFICATION_SERVICE;
NotificationManager mNotificationManager = (NotificationManager)getSystemService(ns);
...
notifIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
PendingIntent contentIntent = PendingIntent.getActivity(context, 0, notifIntent, 0);
...
</code></pre>

<p>Обычно все активности приложения работают в одном задании. Мы можем 
изменять такое поведение и указывать, чтобы в одном приложении 
активности работали в разных заданиях, или активности разных приложений 
работали в одном задании. Для этого в манифесте для каждой активности 
нужно указывать название задания с параметром <b>taskAffinity</b>. Это 
строковое значение не должно совпадать с названием пакета, т.к. 
стандартный Task приложения называется именно как ваш пакет. В общем 
случае данный параметр указывает, что Activity будет гарантированно 
открываться в своём отдельном задании. Данный параметр актуален, если мы
 указываем флаг <b>FLAG_ACTIVITY_NEW_TASK</b> или устанавливаем для активности аттрибут <b>allowTaskReparenting="true"</b>. Этот аттрибут указывает, что активность может перемещаться между заданием, который её запустил и заданием, который указан в <b>taskAffinity</b>, если один из них становится активным.</p>

<p>Если задание долгое время находится в фоне, то система сама чистит 
его стек, оставляя только корневую активность. Данное поведение 
обусловлено тем, что пользователь может забыть, что он делал в 
приложении до этого и скорее всего зашёл в него снова уже с другой 
целью. Данная логика также может быть изменена с помощью нескольких 
атрибутов в манифесте:</p>

<ul>
<li><b>alwaysRetainTaskState</b> — если флаг установлен в true для 
корневой активности, то стек не будет чиститься и полностью 
восcтановится даже после длительного времени</li>
<li><b>clearTaskOnLaunch</b> — если установить флаг в true для корневой 
активности, то стек будет чиститься моментально, как только пользователь
 покинет задание. Полная противоположность alwaysRetainTaskState</li>
<li><b>finishOnTaskLaunch</b> — работает аналогично clearTaskOnLaunch, но может устанавливаться на любую активность и удалять из стека именно её</li>
</ul>

<h2 class="text-warning" id="back">Переопределяем кнопку Back</h2>

<p>Когда мы отслеживали историю стека, щелкая по кнопке Back, то никак 
не вмешивались в работу этой кнопки. Можно переопределить метод <b>onKeyDown()</b>
 и отслеживать нажатие кнопки Back. Нужно быть осторожным, так как можно
 закольцевать переходы между активностями и тогда вы не сможете вообще 
выйти из приложения. Если в коде, который представлен ниже, убрать вызов
 метода <b>finish()</b>, то получим такое незакрываемое приложение.</p>

<p>Данный код я поместил в коде третьей активности.</p>

<pre><code class="java">
@Override
public boolean onKeyDown(int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getRepeatCount() == 0) {
        // переходим на первый экран
        Intent intent = new Intent(getApplicationContext(),
                MainActivity.class);
        startActivity(intent);
        finish();
        return true;
    }
    return super.onKeyDown(keyCode, event);
}
</code></pre>

<p>Идем по схеме 1-2-3-4 и пытаемся теперь вернуться назад. Обратная 
дорога будет 4-3-1-2-1. Перевернем схему, чтобы сравнить с маршрутом: 
1-2-1-3-4. Как видите, в данном случае история получилась запутанной. Не
 увлекайтесь подобными решениями.</p>

<p>Если перед вызовом метода <b>startActivity()</b> выставим знакомый нам флаг <b>intent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);</b> то получим уже схему 2-1-3-4. Иными словами, умело используя флаги, вы можете настроить поведение вашего приложения.</p>

<p>Имея программу-шпаргалку вы можете самостоятельно разобраться в других параметрах, к которым я не сделал примеры.</p>

</div><!--/span-->
        </div><!--/row-->    
          
        </div><!--/span-->
        
        <div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
        
      </div><!--/row-->
      
    
      <hr>
      
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/fastbutton.htm" name="I0_1379797908752" id="I0_1379797908752" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/postmessageRelay.htm" id="oauth2relay908766975" name="oauth2relay908766975"></iframe><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/jquery.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%A1%D1%82%D0%B5%D0%BA%20%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9%20%D0%B8%20%D0%97%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20%28Stack%20and%20Task%29_files/bootstrap-typeahead.js"></script>

</body></html>