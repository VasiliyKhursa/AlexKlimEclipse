<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Android: Список задач</title>
   
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Le styles -->
<link href="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap.css" rel="stylesheet">
<style type="text/css">
  body {
    padding-top: 60px;
    padding-bottom: 10px;
  }
  .sidebar-nav {
    padding: 9px 0;
  }
</style>
	
<link href="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-responsive.css" rel="stylesheet">
	
   <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    
<link rel="icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
<link rel="shortcut icon" href="http://developer.alexanderklimov.ru/favicon.ico" type="image/x-icon">
</head>

<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container-fluid">
        <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </a>
        
        <div class="nav-collapse collapse">
          <p class="navbar-text pull-right">
			<a data-toggle="" href="http://developer.alexanderklimov.ru/blocks/exit.php" class="navbar-link">tizerlab@yandex.ru (выход)</a>
          </p>
		  
		  
          
		  <ul class="nav pull-right">
                    <li id="fat-menu" class="dropdown">
                      <a href="#" id="drop3" role="button" class="dropdown-toggle" data-toggle="dropdown">Вход <b class="caret"></b></a>
                      <ul class="dropdown-menu" role="menu" aria-labelledby="drop3">
                        
                        <li><form action="http://developer.alexanderklimov.ru/blocks/testreg.php" method="post">
						    	<fieldset id="inputs">
		                        <input class="span2" id="username" name="login" placeholder="Ваш email адрес" required="" type="email">   
		                        <input class="span1" id="password" name="password" placeholder="Пароль" required="" type="password">
	                            </fieldset>
	                            <fieldset id="actions">
		                        <input class="btn" id="submit" name="submit" value="Войти" type="submit">
		                        
	                            </fieldset>
                            </form></li>
                      </ul>
                    </li>
                  </ul>


        </div><!--/.nav-collapse -->
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span5">
        <p>
		<a href="http://developer.alexanderklimov.ru/"><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/header.png" alt="Сайт разработчика Александр Климова" border="0"></a>
		</p>
    
    </div><!--/span-->
    
	<div class="span5">
        <p style="color:green; font-style: italic; font-size: small;">
		/* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */<br>John Robbins, Debugging Applications, Microsoft Press, 2000
		</p>
    </div><!--/span-->
    
	<div class="span2">
        <p>
		<a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/kot-2-rss-100.png" border="0"></a>
		</p>
    </div><!--/span-->
</div><!--/row-->
	
<div class="clearfix"></div><noindex><!--Rating@Mail.ru COUNTER--><script async="" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/cbgapi.loaded_1"></script><script async="" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/plusone.js" async="" type="text/javascript"></script><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<IMG src="http://db.c7.b3.a0.top.mail.ru/counter'+
'?id=228158;js='+js+a+';rand='+Math.random()+
'" height="1" width="1" alt="top.mail.ru" border="0" />')
if(11<js)d.write('<'+'!-- ')//--></script><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/counter.gif" alt="top.mail.ru" border="0" height="1" width="1"><!-- <noscript><img
src="http://db.c7.b3.a0.top.mail.ru/counter?js=na;id=228158"
height="1" width="1" alt="top.mail.ru" border="0" /></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--><!--/COUNTER--></noindex><ul class="nav nav-pills">
<li class=""><a href="http://rusnetframework.blogspot.com/">Блог</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/index.php">C#/Visual Basic</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/windowsphone/wp.php">Windows Phone</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/wpf/wpf.php">WPF</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/php">PHP</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/silverlight/silverlight.php">Silverlight</a></li>
<li class="active"><a href="http://developer.alexanderklimov.ru/android">Android</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/arduino">Arduino</a></li>
</ul>
<div class="container-fluid">
    
	<div class="row-fluid">
        <!--левое меню -->
		<div class="span2">
            <div class="well sidebar-nav">
            <ul class="nav nav-list">
<li class="active"><a href="http://developer.alexanderklimov.ru/android/index.php">Главная</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/theory/">Теория</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/views.php">Palette</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/catshop/catshop.php">Котошоп</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/animation.php">Анимация</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/sqlite/">SQLite</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opengles/">OpenGL ES</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/library.php">Библиотеки</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/games.php">Игры</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/emulator.php">Эмулятор</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/tips-android.php">Советы</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/articles-android.php">Статьи</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/books.php">Книги</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/java/java.php">Java. Экспресс-курс</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/design/">Дизайн</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/opensource.php">Open Source</a></li>
<li class=""><a href="http://developer.alexanderklimov.ru/android/links.php">Полезные ресурсы</a></li>
</ul>            </div><!--/.well -->
        </div><!--/span-->


        <div class="span8">

		<div class="row-fluid">
            <div class="span12">
			
			            <div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              <h3 id="myModalLabel">Регистрация</h3>
            </div>
            <div class="modal-body">
            
<p>Полный текст статьи и исходники программы доступны только зарегистрированным участникам сайта.</p>

<p>Стоимость регистрации - символические 155 рублей.</p>

<p>Для регистрации сначала необходимо пополнить Яндекс.Кошелек - 
410011383280263 на указанную сумму (или Webmoney-кошелек R390884954122 
или QIWI - 9055113963 (кошелек, не на счёт телефона!)), а затем прислать
 письмо на адрес rusproject@mail.ru или alexander.klimoff@gmail.com с 
указанием, на какой кошелек вы делали оплату и реквизиты, по которым 
можно вас определить.</p>

<p>Не присылайте в письме мои номера кошельков - поверьте, я их знаю и без вас.</p>

<p>В ответном письме вы получите учётные данные для чтения статей из закрытой зоны за второй месяц.</p>

<p>Доступ к третьему месяцу обучения доступен только после оплаты второго месяца и составляет 155 руб.</p>

<p>Доступ к чётвертому месяцу обучения доступен после оплаты третьего месяца и составляет 155 руб. и т.д.</p>

<p>Также возможен приём на PayPal. Обратите внимание, что в этом случае стоимость одного месяца составляет 6$.</p>

<p>При оплате сразу четырех месяцев (2-5) - стоимость 600 руб.</p>

<p>Доступ даётся как минимум на один год. Для тех, кто оплатил третий и другие месяцы, сроки доступа увеличиваются.</p>

<p>
</p><form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input name="cmd" value="_s-xclick" type="hidden">
<input name="hosted_button_id" value="VRED2NRVE927N" type="hidden">
<input src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/btn_paynow_LG.gif" name="submit" alt="PayPal — более безопасный и легкий способ оплаты через Интернет!" border="0" type="image">
<img alt="" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/pixel.htm" border="0" height="1" width="1">
</form>
<p></p>			
			            
            </div>
            <div class="modal-footer">
              <button class="btn" data-dismiss="modal">Закрыть</button>
              
            </div>
          </div>
<h1 class="text-warning">Список задач</h1>

<p>Закрытая зона/5-й месяц</p>

<p>
<a href="#fragment">Использование фрагментов</a><br>
<a href="#customtextview">Создаём новый компонент на основе TextView</a><br>
</p>

<p>Мы напишем приложение, которое будет формировать список задач, типа <b>Покормить кота</b> или <b>Купи батон</b>, а также поле ввода для добавления новых задач.</p>



<p>Пример взят из книги <a href="http://www.ozon.ru/context/detail/id/21469100/?partner=visual">Android 4. Программирование приложений для планшетных компьютеров и смартфонов</a> с небольшим сокращениями и изменениями. Если пример вам понравится, то купите книгу - она того стоит.</p>



<p>Создадим новый проект <b>ToDoList</b> со стандартными настройками.</p>

<p>Начнём с разметки. Добавим список и текстовое поле.</p>

<pre><code class="xml">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/LinearLayout1"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".ToDoListActivity" &gt;

    &lt;EditText
        android:id="@+id/editText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Добавьте новую задачу"
        android:inputType="text" &gt;

        &lt;requestFocus /&gt;
    &lt;/EditText&gt;

    &lt;ListView
        android:id="@+id/listView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" &gt;
    &lt;/ListView&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Теперь напишем код для активности. Нам понадобится строковый массив <b>ArrayList</b> для хранения всех элементов списка задач, который свяжем через адаптер с <b>ListView</b>.</p>

<p>Для текстового поля напишем обработчик <b>onKeyListener</b>, который 
будет отслеживать работу манипулятора D-pad и нажатие клавиши Enter. 
Любое из этих действий добавит содержимое текстового поля в массив и 
оповестит об этом изменении объект <b>ArrayAdapter</b>. Чтобы пользователь мог ввести новую задачу, мы очищаем текстовое поле.</p>

<pre><code class="java">
package ru.alexanderklimov.todolist;

import java.util.ArrayList;

import android.os.Bundle;
import android.app.Activity;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;

public class ToDoListActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_todo_list);

		ListView myListView = (ListView) findViewById(R.id.listView);
		final EditText myEditText = (EditText) findViewById(R.id.editText);

		// Массив для хранения списка задач
		final ArrayList&lt;String&gt; todoItems = new ArrayList&lt;String&gt;();

		// Адаптер для привязки массива к ListView
		final ArrayAdapter&lt;String&gt; adapter;
		adapter = new ArrayAdapter&lt;String&gt;(this,
				android.R.layout.simple_list_item_1, todoItems);

		// Связываем массив с ListView
		myListView.setAdapter(adapter);

		myEditText.setOnKeyListener(new View.OnKeyListener() {

			@Override
			public boolean onKey(View v, int keyCode, KeyEvent event) {
				// TODO Auto-generated method stub
				if (event.getAction() == KeyEvent.ACTION_DOWN)
					if ((keyCode == KeyEvent.KEYCODE_DPAD_CENTER)
							|| (keyCode == KeyEvent.KEYCODE_ENTER)) {
						todoItems.add(0, myEditText.getText().toString());
						adapter.notifyDataSetChanged();
						myEditText.setText("");
                        return true;
					}

				return false;
			}
		});
	}
}
</code></pre>

<p>Этого кода достаточно, чтобы получить первое представление о программе.</p>

<p><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/todo1.png"></p>

<p>Пока приложение не сохраняет данные между сессиями, не позволяет 
редактировать задачи или удалять их из списка. Кроме того нет важных 
свойств, как сроки выполнения и приоритеты. Есть над чем поработать.</p>

<h2 class="text-warning" id="fragment">Использование фрагментов</h2>

<p>Разместим компоненты <b>EditText</b> и <b>ListView</b> в разные фрагменты. Это позволит оптимизировать разметку под разные размеры экрана.</p>

<p>Создадим разметку для первого фрагмента в файле <b>res/layout/new_item_fragment.xml</b> и переместим в него код для текстового поля:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;EditText xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/editText"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:hint="Добавьте новую задачу"
    android:inputType="text" &gt;

&lt;/EditText&gt;
</code></pre>

<p>Напишем код для класса созданного фрагмента <b>NewItemFragment</b>. В методе <b>onCreateView()</b> загружаем созданную разметку:</p>

<pre><code class="java">
package ru.alexanderklimov.todolist;

import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

public class NewItemFragment extends Fragment {
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		// загружаем разметку
		return inflater.inflate(R.layout.new_item_fragment, container, false);
	}
}
</code></pre>

<p>Наш фрагмент должен уметь получать новые элементы для их добавления в
 список. Поэтому необходимо определить интерфейс, который сможет 
реализовать активность, чтобы отслеживать добавление новых элементов. 
Добавим код для интерфейса в код фрагмента:</p>

<pre><code class="java">
public interface OnNewItemAddedListener {
	public void onNewItemAdded(String newItem);
}
</code></pre>

<p>Создадим переменную для хранения ссылки на родительскую активность, 
которая будет реализовывать интерфейс. Вы сможете получить ссылку сразу 
после того, как активность будет привязана к фрагменту внутри 
обработчика <b>onAttach()</b> из класса <b>Fragment</b>:</p>

<pre><code class="java">
private OnNewItemAddedListener onNewItemAddedListener;

@Override
public void onAttach(Activity activity) {
	// TODO Auto-generated method stub
	super.onAttach(activity);

	try {
		onNewItemAddedListener = (OnNewItemAddedListener) activity;
	} catch (ClassCastException e) {
		// TODO: handle exception
		throw new ClassCastException(activity.toString()
				+ " must implement OnNewItemAddedListener");
	}
}
</code></pre>

<p>Переместим реализацию <b>editText.onKeyListener</b> из активности в фрагмент. Когда пользователь добавит новый элемент, передайте текст в реализацию <b>OnNewItemAddedListener.onNewItemAdded</b> родительской активности, вместо того, чтобы записывать его в массив напрямую. После переноса код для метода <b>onCreateView()</b> будет выглядеть следующим образом:</p>

<pre><code class="java">
@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container,
		Bundle savedInstanceState) {
	// TODO Auto-generated method stub
	// загружаем разметку
	View view = inflater.inflate(R.layout.new_item_fragment, container, false);
	
	final EditText myEditText = (EditText) view.findViewById(R.id.editText); 
	
	myEditText.setOnKeyListener(new View.OnKeyListener() {

		@Override
		public boolean onKey(View v, int keyCode, KeyEvent event) {
			// TODO Auto-generated method stub
			if (event.getAction() == KeyEvent.ACTION_DOWN)
				if ((keyCode == KeyEvent.KEYCODE_DPAD_CENTER)
						|| (keyCode == KeyEvent.KEYCODE_ENTER)) {
					String newItem = myEditText.getText().toString();
					onNewItemAddedListener.onNewItemAdded(newItem);
					myEditText.setText("");
					return true;
				}

			return false;
		}
	});
	
	return view;
}
</code></pre>

<p>Не забудьте закомментировать аналогичный код в активности.</p>

<p>Настала очередь для второго фрагмента, который должен содержать список задач. Воспользуемся готовым фрагментом на основе класса <b>ListFragment</b>:</p>

<pre><code class="java">
package ru.alexanderklimov.todolist;

import android.app.ListFragment;

public class ToDoListFragment extends ListFragment {

}
</code></pre>

<p>Вернёмся к активности. Для начала поменяем разметку и заменим компоненты <b>EditText</b> и <b>ListView</b> на фрагменты:</p>

<pre><code class="xml">
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/LinearLayout1"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".ToDoListActivity" &gt;

    &lt;fragment
        android:id="@+id/newItemFragment"
        android:name="ru.alexanderklimov.todolist.NewItemFragment"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        tools:layout="@layout/new_item_fragment" /&gt;

    &lt;fragment
        android:id="@+id/toDoListFragment"
        android:name="ru.alexanderklimov.todolist.ToDoListFragment"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        tools:layout="@android:layout/list_content" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Переходим к коду для активности. Внутри метода <b>onCreate()</b> создадим Менеджер фрагментов, чтобы получить ссылку на фрагмент <b>ToDoListActivity</b>, перед тем как создать и присвоить ему адаптер. Поскольку <b>ListView</b> и <b>EditText</b> теперь находятся в фрагментах, вам больше не нужно искать ссылки на них в активности. Также потребуется сделать <b>ArrayAdapter</b> и <b>ArrayList</b> полями класса.</p>

<pre><code class="java">
package ru.alexanderklimov.todolist;

import java.util.ArrayList;

import android.os.Bundle;
import android.app.Activity;
import android.app.FragmentManager;
import android.view.Menu;
import android.widget.ArrayAdapter;

public class ToDoListActivity extends Activity {

	<b>// Адаптер для привязки массива к ListView
	private ArrayAdapter&lt;String&gt; adapter;

	// Массив для хранения списка задач
	private ArrayList&lt;String&gt; todoItems;</b>

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_todo_list);

		<b>// Получим ссылки на фрагменты
		FragmentManager fm = getFragmentManager();
		ToDoListFragment todoListFragment = (ToDoListFragment) fm
				.findFragmentById(R.id.toDoListFragment);</b>

		// Массив для хранения списка задач
		todoItems = new ArrayList&lt;String&gt;();

		// Адаптер для привязки массива к ListView
		adapter = new ArrayAdapter&lt;String&gt;(this,
				android.R.layout.simple_list_item_1, todoItems);

		<b>// Связываем массив с ListView фрагмента
		todoListFragment.setListAdapter(adapter);</b>
	}
}
</code></pre>

<p>Теперь элемент <b>ListView</b> подключен к <b>ArrayList</b> с помощью адаптера. Осталось реализовать добавление новых элементов, создаваемых внутри фрагмента <b>NewItemFragment</b>. Добавим реализацию интерфейса <b>OnNewItemAddedListener</b>, который был определён в указанном фрагменте:</p>

<pre><code class="java">
public class ToDoListActivity extends Activity implements
		NewItemFragment.OnNewItemAddedListener {
</code></pre>

<p>Осталось реализовать обработчик <b>onNewItemAdded()</b>, чтобы класс активности стал приёмников. Добавим полученную строковую переменную в <b>ArrayList</b> перед тем, как уведомить <b>ArrayAdapter</b> об изменении в наборе данных.</p>

<pre><code class="java">
public void onNewItemAdded(String newItem){
	todoItems.add(newItem);
	adapter.notifyDataSetChanged();
}
</code></pre>

<p>Можно запускать программу. Чисто внешне ничего не поменялось, но 
теперь приложение состоит из фрагментов и мы можем более гибко настроить
 поведение приложения на смартфонах и планшетах.</p>

<h2 class="text-warning" id="customtextview">Создаём новый компонент на основе TextView</h2>

<p>В <b>ListView</b> используется компонент <b>TextView</b> для отображения каждой строки. Мы можем изменить внешний вид списка, наследовав класс <b>TextView</b> и переопределив метод <b>onDraw()</b>.</p>

<p>Создайте заготовку для нового класса <b>TodoListItemView</b> с конструкторами и методом <b>onDraw()</b>:</p>

<pre><code class="java">
package ru.alexanderklimov.todolist;

import android.content.Context;
import android.graphics.Canvas;
import android.util.AttributeSet;
import android.widget.TextView;

public class TodoListItemView extends TextView {

	public TodoListItemView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		// TODO Auto-generated constructor stub
		init();
	}

	public TodoListItemView(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
		init();
	}

	public TodoListItemView(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
		init();
	}
	
	private void init(){
		
	}
	
	@Override
	protected void onDraw(Canvas canvas) {
		// TODO Auto-generated method stub
		super.onDraw(canvas);
	}
}
</code></pre>

<p>Создайте новый ресурс <b>colors.xml</b> в каталоге <b>res/values</b> для описания цвета бумаги, кромки страницы, линии и текста:</p>

<pre><code class="xml">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;resources&gt;
    &lt;color name="notepad_paper"&gt;#EEF8E0A0&lt;/color&gt;
    &lt;color name="notepad_lines"&gt;#FF0000FF&lt;/color&gt;
    &lt;color name="notepad_margin"&gt;#90FF0000&lt;/color&gt;
    &lt;color name="notepad_text"&gt;#AA0000FF&lt;/color&gt;
&lt;/resources&gt;
</code></pre>

<p>В вашем проекте уже должен быть файл <b>dimens.xml</b> в той же папке (если нет, то создайте самостоятельно). Добавим новый ресурс для ширины кромки страницы:</p>

<pre><code class="xml">
&lt;dimen name="notepad_margin"&gt;30dp&lt;/dimen&gt;
</code></pre>

<p>Возвращаемся в класс <b>TodoListItemView</b>. Создаём новые приватные поля для хранения объектов <b>Paint</b>, которые будут использоваться при рисовании фона и кромки бумажного листа, а также поля для цвета листа и ширины кромки.</p>

<pre><code class="java">
private Paint marginPaint;
private Paint linePaint;
private int paperColor;
private float margin;
</code></pre>

<p>Наполним метод <b>init()</b>, добавив в него создание объектов <b>Paint</b> и получение экземпляров ресурсов.</p>

<pre><code class="java">
private void init() {
	// Получим ссылку на ресурсы
	Resources myResources = getResources();

	// Кисть для рисования
	marginPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
	marginPaint.setColor(myResources.getColor(R.color.notepad_margin));
	linePaint = new Paint(Paint.ANTI_ALIAS_FLAG);
	linePaint.setColor(myResources.getColor(R.color.notepad_lines));

	// Получим цвет фона для листа и ширину кромки
	paperColor = myResources.getColor(R.color.notepad_paper);
	margin = myResources.getDimension(R.dimen.notepad_margin);

}
</code></pre>

<p>Чтобы отобразить лист, необходимо переопределить метод <b>onDraw()</b> и нарисовать изображение при помощи <b>Paint</b>:</p>

<pre><code class="java">
@Override
public void onDraw(Canvas canvas) {
	// TODO Auto-generated method stub

	// Фоновый цвет для листа
	canvas.drawColor(paperColor);

	// Нарисуйте направляющие линии
	canvas.drawLine(0, getMeasuredHeight(), getMeasuredWidth(),
			getMeasuredHeight(), linePaint);

	// Нарисуйте кромку
	canvas.drawLine(margin, 0, margin, getMeasuredHeight(), marginPaint);

	// Переместите текст в сторону от кромки
	canvas.save();
	canvas.translate(margin, 0);

	// Используйте TextView для вывода текста
	super.onDraw(canvas);
	canvas.restore();
}
</code></pre>

<p>Теперь нужно внедрить созданный компонент в активность.</p>

<p>Создадим новый ресурс <b>todolist_item.xml</b> в каталоге <b>res/layout</b>.
 В нём указано, каким образом должен отображаться каждый элемент списка.
 В нашем случае разметка должна состоять из единственного элемента <b>TodoListItemView</b>, заполняющего всё пространство.</p>

<pre><code class="xml">
<!--?xml version="1.0" encoding="utf-8"?-->
&lt;ru.alexanderklimov.todolist.TodoListItemView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fadingEdge="vertical"
    android:padding="10dp"
    android:scrollbars="vertical"
    android:textColor="@color/notepad_text" /&gt;
</code></pre>

<p>Теперь нам необходимо заменить параметры, передаваемые в <b>ArrayAdapter</b>. Вместо ссылки на стандартный системный ресурс следует вставить ссылку на созданную нами разметку:</p>

<pre><code class="java">
adapter = new ArrayAdapter&lt;String&gt;(this,
		R.layout.todolist_item, todoItems);
</code></pre>

<p>Теперь наше приложение будет выглядеть следующим образом:</p>

<p><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/todo2.png" alt="ToDo" height="222" width="300"></p>

<p>Продолжение следует...</p>




</div><!--/span-->
        </div><!--/row-->	
		  
        </div><!--/span-->
		
		<div class="span2">
            <div class="well sidebar-nav">
    <h4><span class="label label-info">Реклама</span></h4>
    <script type="text/javascript"><!--
    google_ad_client = "pub-4224968932772057";
    /* 120x600AlexKlimov */
    google_ad_slot = "0305552138";
    google_ad_width = 120;
    google_ad_height = 600;
    //-->
    </script>
    <script type="text/javascript" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/show_ads.js">
    </script>
</div><!--/.well -->        </div><!--/span-->
		
      </div><!--/row-->
	  
	
      <hr>
	  
	  	  <div class="row-fluid">
	  <div class="span12">
	  <img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/cat_bottom.png" align="right">
</div><!--/span-->
        </div><!--/row-->

<footer>
    <noindex>
    <span style="float:left; margin:3px 1px 1px 2px;">
	    © 2013 <a href="mailto:rusproject@mail.ru">А.Климов</a>
		
		<!-- Place this code where you want the badge to render. -->
<a href="http://plus.google.com/109061106977829925124?prsrc=3" rel="publisher" style="text-decoration:none;">
<img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/gplus-16.png" alt="Google+" style="border:0;width:16px;height:16px;"></a>

    </span>
	
		<span style="float: right; margin:3px 5px 1px 1px; font-size:22px;">
        <!--Rating@Mail.ru LOGO--><a target="_top" href="http://top.mail.ru/jump?from=228158"><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/counter_002.gif" alt="Рейтинг@Mail.ru" border="0" height="31" width="88"></a><!--/LOGO-->
	</span>
    
    <span style="float: right; margin:2px 70px 1px 1px; font-size:22px;">
        <a href="http://feeds.feedburner.com/alexanderklimov/VJcl"><img src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/VJcl.gif" style="border:0" alt="" height="26" width="88"></a>
	</span>
	
<div style="float: right; margin:2px 70px 1px 1px;">
<!-- Place this tag where you want the +1 button to render. -->
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 15px;"><iframe title="+1" data-gapiattached="true" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/fastbutton.htm" name="I0_1379797910689" id="I0_1379797910689" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 15px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

</div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  window.___gcfg = {lang: 'ru'};

  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
	

    </noindex>
</footer>

</div><iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/postmessageRelay.htm" id="oauth2relay657459217" name="oauth2relay657459217"></iframe><!--/.fluid-container-->    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/jquery.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-transition.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-alert.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-modal.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-dropdown.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-scrollspy.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-tab.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-tooltip.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-popover.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-button.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-collapse.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-carousel.js"></script>
    <script src="Android%20%20%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D0%B7%D0%B0%D0%B4%D0%B0%D1%87_files/bootstrap-typeahead.js"></script>

</body></html>